Benchmarks with tag 'apps':
===========================

docutils: Mean +- std dev: [benchmark] 7.65 sec +- 0.92 sec -> [benchmark_jit] 7.13 sec +- 0.06 sec: 1.07x faster

Benchmark hidden because not significant (4): 2to3, chameleon, html5lib, tornado_http

Geometric mean: 1.01x faster

Benchmarks with tag 'asyncio':
==============================

Benchmark hidden because not significant (4): async_tree_none, async_tree_cpu_io_mixed, async_tree_io, async_tree_memoization

Geometric mean: 1.00x faster

Benchmarks with tag 'math':
===========================

Benchmark hidden because not significant (3): float, nbody, pidigits

Geometric mean: 1.00x faster

Benchmarks with tag 'regex':
============================

Benchmark hidden because not significant (4): regex_compile, regex_dna, regex_effbot, regex_v8

Geometric mean: 1.01x faster

Benchmarks with tag 'serialize':
================================

tomli_loads: Mean +- std dev: [benchmark] 6.75 sec +- 0.13 sec -> [benchmark_jit] 6.71 sec +- 0.07 sec: 1.01x faster

Benchmark hidden because not significant (13): json_dumps, json_loads, pickle, pickle_dict, pickle_list, pickle_pure_python, unpickle, unpickle_list, unpickle_pure_python, xml_etree_parse, xml_etree_iterparse, xml_etree_generate, xml_etree_process

Geometric mean: 1.00x faster

Benchmarks with tag 'startup':
==============================

Benchmark hidden because not significant (2): python_startup, python_startup_no_site

Geometric mean: 1.00x faster

Benchmarks with tag 'template':
===============================

Benchmark hidden because not significant (4): django_template, genshi_text, genshi_xml, mako

Geometric mean: 1.00x faster

All benchmarks:
===============

aiohttp: Mean +- std dev: [benchmark] 2.78 ms +- 0.05 ms -> [benchmark_jit] 2.75 ms +- 0.06 ms: 1.01x faster
asyncio_tcp: Mean +- std dev: [benchmark] 1.78 sec +- 0.03 sec -> [benchmark_jit] 1.76 sec +- 0.02 sec: 1.01x faster
crypto_pyaes: Mean +- std dev: [benchmark] 281 ms +- 26 ms -> [benchmark_jit] 272 ms +- 8 ms: 1.04x faster
docutils: Mean +- std dev: [benchmark] 7.65 sec +- 0.92 sec -> [benchmark_jit] 7.13 sec +- 0.06 sec: 1.07x faster
fannkuch: Mean +- std dev: [benchmark] 1.11 sec +- 0.01 sec -> [benchmark_jit] 1.10 sec +- 0.01 sec: 1.01x faster
flaskblogging: Mean +- std dev: [benchmark] 8.67 ms +- 0.25 ms -> [benchmark_jit] 8.75 ms +- 0.18 ms: 1.01x slower
create_gc_cycles: Mean +- std dev: [benchmark] 3.10 ms +- 0.12 ms -> [benchmark_jit] 3.05 ms +- 0.05 ms: 1.02x faster
gc_traversal: Mean +- std dev: [benchmark] 7.43 ms +- 0.32 ms -> [benchmark_jit] 7.33 ms +- 0.14 ms: 1.01x faster
gunicorn: Mean +- std dev: [benchmark] 2.78 ms +- 0.06 ms -> [benchmark_jit] 2.74 ms +- 0.05 ms: 1.02x faster
logging_format: Mean +- std dev: [benchmark] 23.8 us +- 0.8 us -> [benchmark_jit] 23.4 us +- 0.8 us: 1.02x faster
mdp: Mean +- std dev: [benchmark] 7.03 sec +- 0.06 sec -> [benchmark_jit] 6.99 sec +- 0.06 sec: 1.01x faster
mypy2: Mean +- std dev: [benchmark] 2.03 sec +- 0.03 sec -> [benchmark_jit] 2.02 sec +- 0.02 sec: 1.01x faster
pycparser: Mean +- std dev: [benchmark] 3.61 sec +- 0.04 sec -> [benchmark_jit] 3.58 sec +- 0.05 sec: 1.01x faster
scimark_fft: Mean +- std dev: [benchmark] 968 ms +- 15 ms -> [benchmark_jit] 957 ms +- 21 ms: 1.01x faster
scimark_sparse_mat_mult: Mean +- std dev: [benchmark] 12.8 ms +- 0.4 ms -> [benchmark_jit] 12.5 ms +- 0.1 ms: 1.02x faster
sqlite_synth: Mean +- std dev: [benchmark] 5.29 us +- 0.16 us -> [benchmark_jit] 5.35 us +- 0.12 us: 1.01x slower
sympy_str: Mean +- std dev: [benchmark] 792 ms +- 15 ms -> [benchmark_jit] 784 ms +- 10 ms: 1.01x faster
tomli_loads: Mean +- std dev: [benchmark] 6.75 sec +- 0.13 sec -> [benchmark_jit] 6.71 sec +- 0.07 sec: 1.01x faster

Benchmark hidden because not significant (82): 2to3, async_generators, async_tree_none, async_tree_cpu_io_mixed, async_tree_io, async_tree_memoization, asyncio_tcp_ssl, asyncio_websockets, chameleon, chaos, comprehensions, bench_mp_pool, bench_thread_pool, coroutines, coverage, dask, deepcopy, deepcopy_reduce, deepcopy_memo, deltablue, django_template, dulwich_log, float, generators, genshi_text, genshi_xml, go, hexiom, html5lib, json, json_dumps, json_loads, logging_silent, logging_simple, mako, meteor_contest, nbody, nqueens, pathlib, pickle, pickle_dict, pickle_list, pickle_pure_python, pidigits, pprint_safe_repr, pprint_pformat, pyflate, pylint, python_startup, python_startup_no_site, raytrace, regex_compile, regex_dna, regex_effbot, regex_v8, richards, richards_super, scimark_lu, scimark_monte_carlo, scimark_sor, spectral_norm, sqlalchemy_declarative, sqlalchemy_imperative, sqlglot_parse, sqlglot_transpile, sqlglot_optimize, sqlglot_normalize, sympy_expand, sympy_integrate, sympy_sum, telco, thrift, tornado_http, typing_runtime_protocols, unpack_sequence, unpickle, unpickle_list, unpickle_pure_python, xml_etree_parse, xml_etree_iterparse, xml_etree_generate, xml_etree_process

Geometric mean: 1.00x faster
