<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>dmx on Jeff Glass</title>
    <link>https://jeff.glass/tags/dmx/</link>
    <description>Recent content in dmx on Jeff Glass</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 16 Jul 2020 03:01:51 -0500</lastBuildDate><atom:link href="https://jeff.glass/tags/dmx/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Demilight Version 0.8.1</title>
      <link>https://jeff.glass/post/demilight-version-0-8-1/</link>
      <pubDate>Thu, 16 Jul 2020 03:01:51 -0500</pubDate>
      
      <guid>https://jeff.glass/post/demilight-version-0-8-1/</guid>
      <description>&lt;p class=&#34;post-p&#34;&gt;The newest round of Demilight PCBs and 3D-Prints have taken shape as version 0.8.1. Here&#39;s a brief video overview of the current state of thing:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;{{&amp;lt; youtube _Rrdo-xNau4 &amp;gt;}}&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The biggest change, as I mention in the video, is that I tried out JLCPCB&#39;s surface mount parts assembly service for the firs time. Overall, I&#39;m very satisfied, and I&#39;m delighted to have such a useful shortcut for assembly of these PCBs. The version 0.7 and 0.8 prototype boards, which are essentially the same as 0.8 with their 0603 passives and tqfp ATmega, took between 60 and 90 minutes each to assemble. I wouldn&#39;t say they were an enormous challenge to assemble, they just took time and concentration.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;But now, with JLCPCB assembling the surface mount components, each of the 0.8.1 PCBs took just 3 minutes to finalize assembly, and it&#39;s all easy thru-hole parts. As I&#39;m considering making a little flock of these, or providing them to folks who aren&#39;t as practiced at soldering, finding ways to accelerate the assembly process is a huge boon.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter size-large wp-image-1228 post-img&#34; height=&#34;405&#34; src=&#34;Assembly-11_1.13.1-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Of course, there&#39;s some additional cost to getting the boards machine-assembled. And for ordering just two assembled boards, of course the unit-cost is going to be high. But it drops off quickly with any kind of scale. I just put in an order for some 0.9 PCBs, and getting 10 of them instead of 2 dropped the unit-cost by almost 70%. All the fixed costs - DHL shipping, extended-part-charges from JLCPCB - start to amortize real quick. Most of the components themselves have a 10- or 20-part minimum order, due to part-loss loading and unloading the pick-n-place machines, so the component cost didn&#39;t actually increase all that much except for the expensive IC&#39;s (ATmega, AL8860).&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Looking forward to 0.9.0.&lt;/p&gt;
</description>
      &lt;
    </item>
    
    <item>
      <title>Video: Demilight Version 0.8</title>
      <link>https://jeff.glass/post/video-demilight-version-0-8/</link>
      <pubDate>Fri, 26 Jun 2020 16:37:14 -0500</pubDate>
      
      <guid>https://jeff.glass/post/video-demilight-version-0-8/</guid>
      <description>&lt;p class=&#34;post-p&#34;&gt;It&#39;s been quite awhile since the &lt;a href=&#34;https://jeff.glass/demilight/&#34;&gt;mini-moving light project&lt;/a&gt; (now renamed The Demilight) has been written up on the blog. The project was in hiatus for a few months while dove into the technical challenges of a new job, but as the job isn&#39;t keeping quite as busy at the moment (here in early summer 2020), it&#39;s back on the workbench. I&#39;ve put together a video showcasing the current state of the project, now in &lt;strong&gt;version 0.8:&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;{{&amp;lt; youtube 4a-9JGK8H4I &amp;gt;}}&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The video does a pretty decent job of capturing the current state of things. So what&#39;s next?&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Firstly, the goofs I alluded to in the video that I consider to be &lt;em&gt;must-fix&lt;/em&gt; items before the files are ready for primetime. Theu mostly have to do with the 3D-printed parts - I adjusted the access holes and programming slots from version 0.5 to 0.8, but I didn&#39;t do a great job double-checking everything, and things don&#39;t line up very well. That&#39;ll need another few test prints and some adjustment to alleviate the all the filing that&#39;s currently necessary.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;I&#39;ve also been having some issues with mechanical assembly - I&#39;ve been using some &lt;a href=&#34;https://amzn.to/2Vg1pWw&#34;&gt;M2 insert nuts&lt;/a&gt; to hold the case and case-lid together, and to secure the PCB into the case, but that doesn&#39;t seem to be a particularly good system. It&#39;s possibly my nuts and bolts are just really high-tolerance, but they&#39;re constantly cross-threading and not inserting all the way. I think a more robust solution is in order.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The other main error has to do with the footprint for the &lt;a href=&#34;https://www.digikey.com/product-detail/en/recom-power/R-78E5.0-0.5/945-1648-5-ND/2834904&#34;&gt;5V buck-converter&lt;/a&gt; module - somehow, my pin placement is off by .2&#34; on the PCB footprint, which makes the part overlap with the attachment points for the servos unless you bend the voltage-regulator&#39;s pins over. Not insurmountable, but really annoying. That&#39;ll have to get fixed in version 0.9. Once those two most-egregious errors are corrected, though, I think the unit will be decent enough to publish as a beta version.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;post-img&#34; height=&#34;236&#34; src=&#34;https://media.digikey.com/Photos/Recom%20Power%20Inc/MFG_R-78-e%20series.jpg&#34; width=&#34;243&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-image-caption&#34;&gt;It&#39;s a pretty simple part... how did I goof this up?&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;There are several more substantial improvements in the pipeline as well. In no particular order:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;As I mention in the video, I&#39;m working on a &lt;strong&gt;miniaturized programmer interface&lt;/strong&gt; based on some little &lt;a href=&#34;https://www.digikey.com/product-detail/en/mill-max-manufacturing-corp/0985-0-15-20-71-14-11-0/ED1122-ND/3635123&#34;&gt;0.05&#34;-pitch pogo pins&lt;/a&gt;. The results, so far, have been mixed - I have been able to confirm that the interface is providing gnd/5V to the ATmega328, at least enough that its 16 MHz ceramic resonator is oscillating, but I can&#39;t seem to program the chips in-place. Further experiments will be necessary.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1095 post-img&#34; height=&#34;194&#34; src=&#34;Pogo-Pins-1024x718.jpg&#34; width=&#34;276&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Some iterations of the Demilight have incorporated a &lt;strong&gt;heatsink &lt;/strong&gt;to help manage the heat-output from the LED emitter chips. To be honest, I&#39;m not sure how necessary it is - I would love to set up some tests with the unit running at its full 1 Amp current and see just how hot things get. Perhaps the first test would be in free-air, then inside the case in multiple orientations. I know from &lt;a href=&#34;https://www.youtube.com/watch?v=sYT-xtOL4rU&amp;amp;t=299s&#34;&gt;some tests I did on a livestream last summer&lt;/a&gt; that with enough heatsinking the LED stars can handle up to about 5 Amps, but they dump a huge amount of heat at the point.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1118 post-img&#34; height=&#34;256&#34; src=&#34;heatsink.png&#34; width=&#34;341&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-image-caption&#34;&gt;If the heatsink comes back, should it still be in candy-apple red?&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;RGB &lt;/strong&gt;or &lt;strong&gt;RGBW&lt;/strong&gt; dimming capacity would be really neat - as spiffy as the pure-white versions are, there&#39;s something about color-changing light that feels like it would take this project to the next level. I would need to free up some more PCB space, and possibly move from a single-channel driver to a 3 or 4 channel driver, but finding those in the ~1A current capacity range seems a little tricky.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;There are also a couple of purely aesthetic things which could get bumped up to something better. I&#39;ve ordered some &lt;a href=&#34;https://amzn.to/31g67Yj&#34;&gt;1/4&#34; white wire sleeving&lt;/a&gt; to take the place of the gaff tape covering the wires that run from head to base. And I need to invest a little time dialing in my 3D printer - after &lt;a href=&#34;https://jeff.glass/2019/03/09/3d-printing-in-the-home-workshop/&#34;&gt;3.5 years of printing,&lt;/a&gt; it&#39;s starting to show its age a little bit, and a little extra tightening and lubrication wouldn&#39;t be a bad idea.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;So many of my projects during quarantine have focused on building my digital communication mediums - building out this video feels very much like a continuation of that skill-building. The &lt;a href=&#34;https://jeff.glass/electronics-bash/&#34;&gt;weekly Arduino/Electronics classes&lt;/a&gt; I&#39;ve been teaching for 15 weeks now have been a serious crash course in live digital video. That learning process deserves a write-up of it&#39;s own, but if you compare the following two frames from &lt;a href=&#34;https://www.youtube.com/watch?v=rRVTTIWVcXA&amp;amp;t&#34;&gt;Episode 0 (testing)&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/watch?v=QQYhC7xHG_s&#34;&gt;Episode 14 (Wireless Signals)&lt;/a&gt;, I think the improvements are pretty clear:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1116 post-img&#34; height=&#34;253&#34; src=&#34;EarlySnap-300x168.png&#34; width=&#34;450&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-img-caption&#34;&gt;Epsiode one was.... pretty rough. The audio is really crunchy too - turns out I had two microphones on (lav and webcam) and they did unkind things together.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1117 post-img&#34; height=&#34;253&#34; src=&#34;latesnip-300x168.png&#34; width=&#34;450&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-img-caption&#34;&gt;We&#39;ve got things pretty well dialed in by now.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;It&#39;s been a joy to build some more digital video skills putting this video together, like putting together a basic script, recording a voiceover, learning the editting, effects, and color-grading processes... it&#39;s been both fascinating and time-consuming. The video definitely has some rough edges, but I&#39;m thinking of it as good-enough, and I&#39;m excited to take what I&#39;ve learned from this early creation and apply it to future videos. Much like the tiny-light itself, it&#39;s good to just make a thing, anything, a small thing, and iterate from there.&lt;/p&gt;
</description>
      &lt;
    </item>
    
    <item>
      <title>ETC Console Output Counts</title>
      <link>https://jeff.glass/post/etc-console-output-counts/</link>
      <pubDate>Wed, 24 Jul 2019 19:26:26 -0500</pubDate>
      
      <guid>https://jeff.glass/post/etc-console-output-counts/</guid>
      <description>&lt;p class=&#34;post-p&#34;&gt;What follows is a list of output-counts for ETC Eos Family consoles. Because I&#39;m always needing to reference this information, and I want to be lazy when I need to find it. &lt;span style=&#34;font-size: inherit;&#34;&gt;So, without further ado, here&#39;s the current output capacity for different ETC consoles, as of &lt;/span&gt;&lt;strong style=&#34;font-size: inherit;&#34;&gt;July 24, 2019:&lt;/strong&gt;&lt;style type=&#34;text/css&#34;&gt;.tg  {border-collapse:collapse;border-spacing:0;border-color:#ccc;} .tg td{font-family:Arial, sans-serif;font-size:14px;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#ccc;color:#333;background-color:#fff;} .tg th{font-family:Arial, sans-serif;font-size:14px;font-weight:normal;padding:10px 5px;border-style:solid;border-width:1px;overflow:hidden;word-break:normal;border-color:#ccc;color:#333;background-color:#f0f0f0;} .tg .tg-buh4{background-color:#f9f9f9;text-align:left;vertical-align:top} .tg .tg-0pky{border-color:inherit;text-align:left;vertical-align:top} .tg .tg-btxf{background-color:#f9f9f9;border-color:inherit;text-align:left;vertical-align:top} .tg .tg-0lax{text-align:left;vertical-align:top} &lt;/style&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;table class=&#34;wp-block-table tg&#34;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;th&gt;&lt;b&gt;Console&lt;/b&gt;&lt;/th&gt;&lt;th&gt;&lt;b&gt;Variant&lt;/b&gt;&lt;/th&gt;&lt;th&gt;&lt;b&gt;Base Output Count&lt;/b&gt;&lt;/th&gt;&lt;th&gt;&lt;b&gt;Unlocked Output Count&lt;/b&gt;&lt;/th&gt;&lt;th&gt;&lt;b&gt;Legacy Consoles Upgraded to 2.6 Software&lt;/b&gt;&lt;/th&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Eos Ti&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;DisplayPort&lt;/td&gt;&lt;td&gt;4096 &lt;br/&gt;(8 * 512)&lt;/td&gt;&lt;td&gt;24,576 &lt;br/&gt;(48 * 512)&lt;/td&gt;&lt;td&gt;Eos Ti DisplayPort at 5K or higher now @ 24,576&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Eos Ti&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;DVI&lt;/td&gt;&lt;td&gt;4096 &lt;br/&gt;(8 * 512)&lt;/td&gt;&lt;td&gt;16,384 &lt;br/&gt;(32 * 512)&lt;/td&gt;&lt;td&gt;Eos Ti DVI at 5K or higher now @ 12,228*&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Eos RPU3&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;DisplayPort&lt;/td&gt;&lt;td&gt;4096 &lt;br/&gt;(8 * 512)&lt;/td&gt;&lt;td&gt; 24,576 &lt;br/&gt;(48 * 512)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Eos RPU3&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;DVI&lt;/td&gt;&lt;td&gt;4096 &lt;br/&gt;(8 * 512)&lt;/td&gt;&lt;td&gt; 12,228 &lt;br/&gt;(24 * 512)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Eos Classic&lt;/strong&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; 4096 &lt;br/&gt;(8 * 512) &lt;/td&gt;&lt;td&gt; 8192 &lt;br/&gt;(8 * 512)&lt;/td&gt;&lt;td&gt;Eos Classic at 5K or higher now @ 8192&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Eos Classic RPU&lt;/strong&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; 4096 &lt;br/&gt;(8 * 512) &lt;/td&gt;&lt;td&gt;  8192&lt;br/&gt; (8 * 512) &lt;/td&gt;&lt;td&gt;Eos Classic RPU at 5K or higher now @ 8192&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Gio&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;DisplayPort&lt;/td&gt;&lt;td&gt;4096 &lt;br/&gt;(8 * 512)&lt;/td&gt;&lt;td&gt; 24,576 &lt;br/&gt;(48 * 512)&lt;/td&gt;&lt;td&gt;Gio Displayport at 5K or higher now @ 24,576&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Gio&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;DVI&lt;/td&gt;&lt;td&gt;4096 &lt;br/&gt;(8 * 512)&lt;/td&gt;&lt;td&gt;12,228 &lt;br/&gt;(24 * 512)&lt;/td&gt;&lt;td&gt;Gio DVI at 5K or higher now @ 12,228&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Gio @5&lt;/strong&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;4096 &lt;br/&gt;(8 * 512)&lt;/td&gt;&lt;td&gt; 24,576 &lt;br/&gt;(48 * 512)&lt;/td&gt;&lt;td&gt;@5 at 5K or higher now @ 24,576&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Ion XE&lt;/strong&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;2048 &lt;br/&gt;(2* 512)&lt;/td&gt;&lt;td&gt; 12,228 &lt;br/&gt;(24 * 512)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Ion&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Windows 7&lt;/td&gt;&lt;td&gt;1024 &lt;br/&gt;(2 * 512)&lt;/td&gt;&lt;td&gt;6144&lt;br/&gt; (12 * 512)&lt;/td&gt;&lt;td&gt;Ion Win 7 at 1536 or higher now @ 6144&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Ion&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;XP&lt;/td&gt;&lt;td&gt;1024 &lt;br/&gt;(2 * 512)&lt;/td&gt;&lt;td&gt;3072&lt;br/&gt; (6 * 512)&lt;/td&gt;&lt;td&gt; Ion XP at 1536 or higher now @ 3072&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Ion RPU&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;Windows 7&lt;/td&gt;&lt;td&gt;2048 &lt;br/&gt;(2* 512)&lt;/td&gt;&lt;td&gt;6144&lt;br/&gt; (12 * 512)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Ion RPU&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;XP&lt;/td&gt;&lt;td&gt;2048 &lt;br/&gt;(2* 512)&lt;/td&gt;&lt;td&gt;3072&lt;br/&gt; (6 * 512)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ETCnomad&lt;/strong&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;512&lt;/td&gt;&lt;td&gt; 6144 &lt;br/&gt;(12 * 512)&lt;/td&gt;&lt;td&gt;Nomad 256 now @ 512; Nomad 1024 or higher now @ 6144&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ETCnomad Puck&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;4 USB&lt;/td&gt;&lt;td&gt;512&lt;/td&gt;&lt;td&gt; 6144 &lt;br/&gt;(12 * 512)&lt;/td&gt;&lt;td&gt;Nomad Puck 256 (3 USB) now @ 512; Nomad Puck 1024 (4 USB) or higher now @ 6144&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ETCnomad Puck&lt;/strong&gt;&lt;/td&gt;&lt;td&gt;3 USB&lt;/td&gt;&lt;td&gt;512&lt;/td&gt;&lt;td&gt;2048&lt;br/&gt; (2* 512)&lt;/td&gt;&lt;td&gt;Nomad Puck 256 (4 USB) now @ 512; Nomad Puck 1024 (4 USB) or higher now @ 2048&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Element 2&lt;/strong&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;1024 (2 * 512)&lt;/td&gt;&lt;td&gt;6144&lt;br/&gt; (12 * 512)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;Element&lt;/strong&gt;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;1024 (2 * 512)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;&lt;strong&gt;ETC Nomad &#34;256&lt;/strong&gt;&#34;&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt;1024 (2 * 512)&lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;td&gt; &lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;*&lt;em&gt;The listed Eos Ti DVI count for previously-smaller-output-count consoles doesn&#39;t match the new Unlocked output count. This may be a typo by ETC.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;em&gt;This info comes from: the &lt;/em&gt;&lt;a href=&#34;https://www.etcconnect.com/WorkArea/DownloadAsset.aspx?id=10737491848&#34;&gt;&lt;em&gt;EOS Software 2.6 Release Note&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, the &lt;a href=&#34;https://support.etcconnect.com/ETC/Consoles/Eos_Family/Software_and_Programming/Upgrading_Eos_Family_Output_Counts&#34;&gt;Upgrading Eos Family Output Counts page&lt;/a&gt;, the &lt;/em&gt;&lt;a href=&#34;https://www.etcconnect.com/Products/Consoles/Eos-Family/Element/Tech-Specs.aspx&#34;&gt;&lt;em&gt;Element Tech Specs page&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, the &lt;/em&gt;&lt;a href=&#34;https://www.etcconnect.com/Products/Consoles/Eos-Family/Element-2/Features.aspx&#34;&gt;&lt;em&gt;Element 2 Tech Specs page&lt;/em&gt;&lt;/a&gt;&lt;em&gt;, the &lt;/em&gt;&lt;a href=&#34;https://www.etcconnect.com/Products/Consoles/Eos-Family/Ion-Xe/Tech-Specs.aspx&#34;&gt;&lt;em&gt;Ion Xe Tech Specs page&lt;/em&gt;&lt;/a&gt;&lt;em&gt;. As always, information from ETC will always be more accurate than the blog of some guy in the Midwest - this is meant to be a helpful reference, not a definitive source.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;em&gt;The legacy consoles section indicates the new output counts for consoles that were available before Eos software version 2.6, when consoles were available for purchase with much more granular output counts. The 2.6 software upgrade standardized all consoles to either a Base model or Unlocked, with all consoles moving to the next higher output count available (e.g. no one lost output capability with this upgrade).&lt;/em&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Some background, and an explanation of why output counts aren&#39;t round numbers: ETC&#39;s line of Eos-family lighting control consoles can be purchased with different numbers of &lt;span style=&#34;text-decoration: underline;&#34;&gt;parameter&lt;/span&gt; outputs. In an older way of thinking of things, one might have had a limited number of universes. As I&#39;ve featured in my &lt;a href=&#34;https://jeff.glass/2019/02/23/lighting-control-protocols-and-standards/&#34;&gt;post about lighting control protocols&lt;/a&gt;, each universe contains 512 &#34;slots&#34; of information, and individual devices (dimmers, intelligent lights, other controllers) can be told which slots to listen to by giving each device an &#34;address&#34; (or range of addresses).&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The key difference is that now, with lighting data being largely distributed over a network and only turned back into &#39;hard&#39; serial DMX near its endpoint, limiting a controller&#39;s output to only 2 or 6 or 24 physical universes would be a little unnecessarily constraining. Instead, the output count is how many total DMX slots one can control, spread across as many universes as the user desires. So, a basic Nomad, for example, could control all 512 slots in a single DMX universe, or a single address in each of 512 universes, or anything in between. Only addresses which are patched count toward the total output count.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;For more info on addresses and parameters, see ETC&#39;s article: &lt;a href=&#34;https://support.etcconnect.com/ETC/Consoles/Eos_Family/Software_and_Programming/Addresses_and_Parameters_in_Eos_Family_Consoles&#34;&gt;Addresses and Parameters in Eos Family Consoles&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;/p&gt;
</description>
      &lt;
    </item>
    
    <item>
      <title>DMX Mini Moving Light First Assembly - Live Stream</title>
      <link>https://jeff.glass/post/dmx-mini-moving-light-first-assembly-live-stream/</link>
      <pubDate>Wed, 29 May 2019 01:47:48 -0500</pubDate>
      
      <guid>https://jeff.glass/post/dmx-mini-moving-light-first-assembly-live-stream/</guid>
      <description>&lt;p class=&#34;post-p&#34;&gt;With the shell 3D-printed and the PCB assembled, I went ahead and put together my first &#34;completed&#34; mini-moving light, live on camera:&lt;/p&gt;
&lt;figure class=&#34;wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio&#34;&gt;&lt;div class=&#34;wp-block-embed__wrapper&#34;&gt;
&lt;p class=&#34;post-p&#34;&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/lroMq1nJ0Ds&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;/p&gt;&lt;/div&gt;&lt;/figure&gt;
&lt;p class=&#34;post-p&#34;&gt;It went fairly well - everything mostly worked and nothing caught fire!&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;There are a few mechanical and electrical takeaways for the next version, including:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;&lt;li&gt;Mechanical:&lt;ul class=&#34;post-ul&#34;&gt;&lt;li&gt;Ennlarge the hole for LED wires in the lower case&lt;/li&gt;&lt;li&gt;Make a brief instruction manual for myself of what needs to be assembled/installed/solder in what order&lt;/li&gt;&lt;li&gt;Hole for program/enable switch access&lt;/li&gt;&lt;li&gt;Fix tolerances on the tilt-servo/yoke interface&lt;/li&gt;&lt;li&gt;Lengthen the body to accommodate a heatsink for the LED star&lt;/li&gt;&lt;li&gt;Figure out mounting/hanging hardware&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Electrical:&lt;ul class=&#34;post-ul&#34;&gt;&lt;li&gt;Increase the spacing between Pan and Tilt Servo pads&lt;/li&gt;&lt;li&gt;Order higher-current 5V regulator (1.5A 7805)&lt;/li&gt;&lt;li&gt;Select a new inductor for up to 1A of current&lt;/li&gt;&lt;li&gt;Select a new schottky diode for up to 24V&lt;/li&gt;&lt;li&gt;Combine the transmit/receive control lines onto a single pin of the Arduino.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;
&lt;p class=&#34;post-p&#34;&gt;But all in all, for a first assembly, even tripping over a couple of silly mistakes on my part, things went pretty well. Onward to V0.4.&lt;/p&gt;
</description>
      &lt;
    </item>
    
    <item>
      <title>DMX Mini Moving Light Shield V0.3</title>
      <link>https://jeff.glass/post/dmx-mini-moving-light-shield-v0.3/</link>
      <pubDate>Fri, 24 May 2019 03:23:46 -0500</pubDate>
      
      <guid>https://jeff.glass/post/dmx-mini-moving-light-shield-v0.3/</guid>
      <description>&lt;p class=&#34;post-p&#34;&gt;As I hinted to in my original post about the &lt;a href=&#34;https://jeff.glass/2019/05/20/arduino-pro-mini-dmx-shield/&#34;&gt;Arduino Pro Mini DMX Shield&lt;/a&gt;, and then talked some about in my &lt;a href=&#34;https://jeff.glass/2019/05/22/dmx-mini-mover-shield-pcb-assembly-stream/&#34;&gt;PCB Assembly Livestream&lt;/a&gt;, the latest version of my DMX shield is geared toward driving in miniature moving light. This means that, in addition to being able to receive DMX, the Arduino driving the device will need to be able to drive a couple of servos and dim a relatively high power LED. There are many way of skinning both of those cats, so let&#39;s look at the solutions that are present in V0.3 of the DMX shield.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;aligncenter is-resized&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-397 post-img&#34; height=&#34;310&#34; src=&#34;IMG_7277-1024x768.jpg&#34; width=&#34;413&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Servo Control
&lt;p class=&#34;post-p&#34;&gt;Of LED dimming and Servo control, the latter is the easier problem to solve. While there are &lt;a href=&#34;https://www.digikey.com/products/en/integrated-circuits-ics/pmic-motor-drivers-controllers/744?k=&amp;amp;pkeyword=&amp;amp;sv=0&amp;amp;pv1664=28&amp;amp;pv1664=10&amp;amp;pv1664=2&amp;amp;sf=0&amp;amp;FV=ffe002e8&amp;amp;quantity=&amp;amp;ColumnSort=0&amp;amp;page=1&amp;amp;stock=1&amp;amp;pageSize=25&#34;&gt;dedicated servo-driving IC&#39;s&lt;/a&gt;, and &lt;a href=&#34;https://www.digikey.com/products/en/motors-solenoids-driver-boards-modules/motor-driver-boards-modules/181?k=servo&amp;amp;k=&amp;amp;pkeyword=servo&amp;amp;sv=0&amp;amp;pv1987=9&amp;amp;sf=0&amp;amp;FV=ffe000b5&amp;amp;quantity=&amp;amp;ColumnSort=0&amp;amp;page=1&amp;amp;pageSize=25&#34;&gt;modules&lt;/a&gt;, almost any microcontroller, including the ATMEGA238/Arduino can control a hobby servo in a straightforward way using minimal additional hardware.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;A typical hobby servo needs only three wires running to it - +5 for power, Ground, and a control line. The control line carries the position data for the servo in the form of pulse width modulation. The servo expects to see a pulse every 20 milliseconds. A pulse of 1.5 ms corresponds to the center (90°) position of the servo. A 1 ms pulse rotates all the way in one direction (0°) and a 2 ms pulse rotates fully the other direction (180°). There is a standard&lt;a href=&#34;https://www.arduino.cc/en/Reference/Servo&#34;&gt; Arduino Servo Library&lt;/a&gt; that translates degrees inputted into the appropriate duration Servo pulses.&lt;/p&gt;
&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-409 post-img&#34; src=&#34;Sinais_controle_servomotor.jpg&#34;/&gt;&lt;/figure&gt;&lt;p class=&#34;post-img-caption&#34;&gt;Image Credit: Wikimedia Member Hforesti, CC-SA-4.0&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The only additional hardware present on the V0.3 board for Servo control is, therefore, a bulkier &lt;a href=&#34;https://www.digikey.com/product-detail/en/stmicroelectronics/L7805CV/497-1443-5-ND/585964&#34;&gt;5V regulator&lt;/a&gt;. The 5V regulator on an Arduino Pro Mini isn&#39;t particularly stout to begin with, and I&#39;ve had issues on previous projects with &#34;off brand&#34; Pro Minis having even less 5V oomph than that. So there&#39;s a pair of DC input pads and a TO-220 packaged 7805 to provide a healthy amount of current for the servos.&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LED Dimming
&lt;p class=&#34;post-p&#34;&gt;The LED dimming half of this project has a wider solution space than servo control. The typical solution is MOSFET dimming. A FET is switched on and off rapidly, with a variable duty cycle to control brightness. This is the solution that commercial &lt;a href=&#34;https://www.amazon.com/Channel-Controller-Smoother-Indicator-Function/dp/B00Q1N1NVK/ref=sr_1_1_sspa?keywords=led+decoder&amp;amp;qid=1558576077&amp;amp;s=gateway&amp;amp;sr=8-1-spons&amp;amp;psc=1&#34;&gt;DMX LED decoders&lt;/a&gt; use, with a bank of 3A-5A fets, one per driven channel. It&#39;s simple and inexpensive.&lt;/p&gt;
&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-410 post-img&#34; src=&#34;dmxled.png&#34;/&gt;&lt;/figure&gt;
&lt;p class=&#34;post-p&#34;&gt;The problem is heat. MOSFETS with super-low on-DC resistances are expensive, and those with higher DC resistances create more heat. There&#39;s always a balance being struck between cost and current carrying capacity. Which is why most commercial DMX led dimmers sit in &lt;a href=&#34;https://www.amazon.com/Channel-Controller-Smoother-Indicator-Function/dp/B01CCBG1SO/ref=sr_1_7?keywords=dmx+driver&amp;amp;qid=1558576476&amp;amp;s=gateway&amp;amp;sr=8-7&#34;&gt;a sweet spot between 3A and 5A&lt;/a&gt;. And all of them come in metal cases, sometimes mounted to large heatsinks, to help with heat dissipation. Less than ideal for what is ultimately meant to be a 3D-printed moving light made of thermoplastic.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The other problem is overcurrent regulation. For typical, inexpensive 3A per channel DMX LED driver, there&#39;s nothing to protect the FETs if you load up a channel with, say, 5A of load, there&#39;s nothing in the drivers to prevent the FETs heating up to their failure point. Or worse. See, for example, this example from a local theater:&lt;/p&gt;
&lt;div class=&#34;grid grid-cols-2&#34;&gt;
&lt;img alt=&#34;&#34; class=&#34;w-auto wp-image-408 post-img&#34; data-id=&#34;408&#34; data-link=&#34;https://jeff.glass/?attachment_id=408#main&#34; src=&#34;IMG_5124-1024x768.jpeg&#34;/&gt;
&lt;img alt=&#34;&#34; class=&#34;w-auto wp-image-407 post-img&#34; data-id=&#34;407&#34; data-link=&#34;https://jeff.glass/?attachment_id=407#main&#34; src=&#34;IMG_7222-e1558576797290-1024x768.jpg&#34;/&gt;
&lt;/div&gt;
&lt;p class=&#34;post-p&#34;&gt;After some investigation, it turned out that there was a wiring error causing a dead-short across one of the channels. Which subsequently burst into flames. No kidding. The Stage Manager reported seeing a cloud of smoke roll out of the vom, which it turned out was discharge from the fire extinguisher the crew was using. Yikes!&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;With a controlled environment and a defined load, an overcurrent load is slightly less of a concern, but it seemed like there must be a more elegant solution to both the heat and overcurrent issues.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The solution I&#39;m currently trying is the the &lt;a href=&#34;https://www.diodes.com/assets/Datasheets/AL8860.pdf&#34;&gt;AL8860 Buck LED Driver&lt;/a&gt;. It is essentially a DC-DC step-down converter which derives the average current through its load from a SET resistor between a couple of its pins. It has an input voltage from 4.5V to 40V, and in TSOT-25 form factor a maximum current of 1A. A TTL PWM signal applied to its CTRL pin brings the average current down from the maximum SET current to between 0 and 100% of maximum, depending on duty cycle.&lt;/p&gt;
&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-411 post-img&#34; src=&#34;AL8860_circuit.png&#34;/&gt;&lt;/figure&gt;
&lt;p class=&#34;post-p&#34;&gt;While the IC itself ultimately uses an NDMOS FET to do its switching with a relatively high on-state resistance (200 mOhm), its incorporation of current management and a step-down converter directly into the IC makes it an attractive option. And for the form factors I&#39;m looking at, I&#39;m not likely to be pushing more than 1A through an LED star anyway.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The AL8860 requires a few external components as a buck converter would - an inductor and a schottky diode - as well as a bypass cap and the SET resistor(s). These altogether take up about as much PCB space as a decently sized FET switch would, let a long the voltage conversation IC&#39;s that would allow this to run on a variable voltage.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;aligncenter&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-412 post-img&#34; src=&#34;PCB-layout-focus-dimming.png&#34;/&gt;&lt;/figure&gt;&lt;p class=&#34;post-img-caption&#34;&gt;The portion of the PCB directly responsibly for 1A LED dimming. Approximately 8mm x 8mm. The two large thru holes directly below this are points to solder leads from the LED star directly.&lt;/p&gt;&lt;/div&gt;&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Testing&lt;/h4&gt;
&lt;p class=&#34;post-p&#34;&gt;I made the bold choice of testing this IC and hardware on a livestream recently. But not before an unscucessful attempt test attempt.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;In an attempt to validate this IC idea before committing to it, I purchased a handful of AL8860s, schottky diodes, 0.1 Ohm resistors, and inductors, and tried to piece together this idea on a piece of copper-clad. That did not, in short, go well. Without proper pads, I couldn&#39;t get the IC to stay in place well enough to solder magnet-wire to it. Even after I super-glued it down, the heat from my soldering iron weakened the super glue and caused it to come unstuck. And release superglue fumes. Fun!&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;So I pulled the trigger on ordering a batch of the V0.3 PCB&#39;s, this time from JLCPCB. But in my rush, I didn&#39;t run a final Design Rule Check, and the pads for my Pan and Tilt servos overlap. Ah well, this was mostly to validate the LED dimming circuit.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;And validate it did! Check out this gif from my testing session:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;aligncenter&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-415 post-img&#34; src=&#34;DimmingTestGif.gif&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Now that&#39;s some light! The arduino was just running a simple ramp-up/ramp-down for validation.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The LEDs are from LEDSupply, a vendor on the east coast that I haven&#39;t used before, but stumbled upon while looking for LED options. They happen to be having a closeout sale on some &lt;a href=&#34;https://www.ledsupply.com/closeout/luxeon-r-triple-3-up-neutral-white-led-star&#34;&gt;Luxeon R 3-LED stars&lt;/a&gt;, which seemed like a good option for something I might smoke or blow up. The LEDs themselves are &lt;a href=&#34;https://www.lumileds.com/uploads/355/DS101-pdf&#34;&gt;Luxeon LXA7-PW40&lt;/a&gt;s. And with the appropriate &lt;a href=&#34;https://www.ledsupply.com/triple-carclo-led-optics&#34;&gt;Carclo optic&lt;/a&gt;, the beam width is fairly narrow. The heatsink is just something from the junk bin.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;At 1000mA forward current (which LEDSupply recommends as the maximum allowed current), they emit around 975 lumens total, around &lt;a href=&#34;https://www.1000bulbs.com/search?breadcrumbs%5B0%5D=light-bulbs&amp;amp;breadcrumbs%5B1%5D=halogen-light-bulbs&amp;amp;breadcrumbs%5B2%5D=halogen-par-lamps&amp;amp;facet.multiselect=true&amp;amp;page=1&amp;amp;q=%2A&amp;amp;rows=15&amp;amp;son=0&amp;amp;sort=price+asc&amp;amp;start=0&amp;amp;filter=(category:%225659%22)&amp;amp;filter=(a_bulb_shape_t_fq:%22PAR16%22)&#34;&gt;what a 75W PAR16 lamp emits.&lt;/a&gt; Even testing at 500mA as I was, it&#39;s a punchy little package!&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Next Steps
&lt;p class=&#34;post-p&#34;&gt;There&#39;s some CAD time in my future. I&#39;ll need to whip up a case to hold the PCB and accommodate a pan servo. I think the arm and body components I will be able to mostly re-use from my previous design, possibly with a little extra room in the head for a proper heatsink.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;aligncenter is-resized&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-418 post-img&#34; height=&#34;376&#34; src=&#34;MovingLightTinySnip.png&#34; width=&#34;357&#34;/&gt;&lt;/figure&gt;&lt;p class=&#34;post-img-caption&#34;&gt;The previous tiny moving-light design&lt;/p&gt;&lt;/div&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;At some point, I&#39;ll have to re-order PCB&#39;s with the errors corrected, especially the overlapping servo-control pads. I may also want to rethink the mounting hole locations, and possibly bring the DC and DMX inputs out onto their own little tabs to solder connectors onto. But first, I think it will be satisfying to bring this version of the LED to life.&lt;/p&gt;
&lt;/h4&gt;&lt;/h4&gt;&lt;/h4&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>DMX Mini Mover Shield PCB Assembly Stream</title>
      <link>https://jeff.glass/post/dmx-mini-mover-shield-pcb-assembly-stream/</link>
      <pubDate>Wed, 22 May 2019 14:44:40 -0500</pubDate>
      
      <guid>https://jeff.glass/post/dmx-mini-mover-shield-pcb-assembly-stream/</guid>
      <description>&lt;p class=&#34;post-p&#34;&gt;Last night, as I started to assemble V0.3 of my &lt;a href=&#34;https://jeff.glass/2019/05/20/arduino-pro-mini-dmx-shield/&#34;&gt;DMX Mini-Mover Shield&lt;/a&gt;, I thought it might be fun to switch on my webcam and stream the assembly live to the World Wide Web. What follows is about 80 minutes of unstructured benchwork, chatting about DMX, sACN, and circuitry, and a first test of the new LED dimming circuit. Will it light up, or will it go boom? Watch the video to find out:&lt;/p&gt;
&lt;figure class=&#34;wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio&#34;&gt;&lt;div class=&#34;wp-block-embed__wrapper&#34;&gt;
&lt;p class=&#34;post-p&#34;&gt;
&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Zn5qGsw7OlI&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;/p&gt;&lt;/div&gt;&lt;/figure&gt;
</description>
      &lt;
    </item>
    
    <item>
      <title>Lighting Control Protocols and Standards</title>
      <link>https://jeff.glass/post/lighting-control-protocols-and-standards/</link>
      <pubDate>Sat, 23 Feb 2019 16:18:09 -0500</pubDate>
      
      <guid>https://jeff.glass/post/lighting-control-protocols-and-standards/</guid>
      <description>&lt;p class=&#34;post-p&#34;&gt;The world of stage lighting uses a variety of communication protocols to link control devices (computers, light boards, houselighting systems) to endpoint devices (lights, dimmers, effects). These run the gamut from basic analog control through legacy serial protocols to modern packetized, ethernet-based protocols.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The specifications of many of the most widely-adopted protocols are managed by the &lt;a href=&#34;https://www.esta.org/&#34;&gt;Entertainment Services and Technology Association&lt;/a&gt; through their &lt;a href=&#34;https://tsp.esta.org/tsp/index.html&#34;&gt;Technical Standards Program&lt;/a&gt;. Confusing matters slightly, these protocols are sometimes referred to by their &lt;a href=&#34;https://tsp.esta.org/tsp/index.html&#34;&gt;ESTA standards numbers&lt;/a&gt;, often interchangeably with the common names. Below is a list of the major ESTA standards that apply to lighting control, with their standard number, their common name, and a brief description.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;em&gt;I&#39;m not directly linking to the standards documents, but you can find them all on the &lt;a href=&#34;https://tsp.esta.org/tsp/documents/published_docs.php&#34;&gt;approved standards page of the ESTA&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Here are the currently released standards:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;
&lt;table class=&#34;table-fixed&#34;&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;td class=&#34;w-1/4&#34;&gt;&lt;strong&gt;Document #&lt;/strong&gt;&lt;/td&gt;
&lt;td class=&#34;w-1/4&#34;&gt;&lt;strong&gt;Short Name&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;E1.3&lt;/td&gt;
&lt;td&gt;0-10V Control&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E1.11&lt;/td&gt;
&lt;td&gt;DMX 512&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E1.17&lt;/td&gt;
&lt;td&gt;ACN&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E1.20&lt;/td&gt;
&lt;td&gt;RDM&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;E1.31&lt;/td&gt;
&lt;td&gt;sACN&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Briefly, the protocols are:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/0-10_V_lighting_control&#34;&gt;E1.3 0-10V Control:&lt;/a&gt;&lt;/strong&gt; Specifies control of dimmers/luminaries via individual analog control lines. 0 volts is always off, or one extreme of a parameter (e.g. full pan left; minimum blue; focus all the way in, etc). 10V is always on, or the other extreme of a parameter. &#34;0V&#34; is really  -0.2V to 0.3V. &#34;10V&#34; is really &#34;9.8V to 30V&#34;. Control lines must be stable to ± 20mV. Minimum load impedance is 50 kOhms. Passive controls have max 2.5 kOhms output impedance; active controls have max 100 Ohm output impedance. Short circuit protection, overvoltage protection, and current supply are also specified.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/DMX512&#34;&gt;E1.11 DMX 512:&lt;/a&gt;&lt;/strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/DMX512&#34;&gt; &lt;/a&gt;(&#34;&lt;strong&gt;D&lt;/strong&gt;igital &lt;strong&gt;M&lt;/strong&gt;ultiple&lt;strong&gt;X&lt;/strong&gt;&#34;) Specifies a 250 kbps serial protocol for controlling equipment, the EIA-485 transmission techniques for the same, physical cable specifications, and appropriate connectors (XLR5). The 5-conductor cables are common, data 1±, and data 2± (rarely used), each not to exceed 6V above common.  Data lines are balanced in pairs. Signal line impedance is 120 ohms nominal. Each &#34;packet&#34; of serial data begins with a break, mark, and start code, followed by up to 512 slots of data, each of which has an 8-bit value. No error checking/correction is provided.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Architecture_for_Control_Networks&#34;&gt;E.1.17 ACN:&lt;/a&gt; &lt;/strong&gt;(&lt;strong&gt;A&lt;/strong&gt;rchitecture for &lt;strong&gt;C&lt;/strong&gt;ontrol &lt;strong&gt;N&lt;/strong&gt;etworks) Specifies a series of protocol formats for (generally network-based) interchangeability between control systems and endpoint devices. Generally: the Device Management Protocol (DMP) encapsulates the Getting and Setting of device parameters; a set of  Device Description Language standards (DDL) defines the format and language for component description to allow common control and identification; and the Session Data Transport (SDT) protocol allows for multicast delivery of messages with ordering and verification not present in generic UDP multicasting. The Protocol Data Unit is the singular message format for DMP messages.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;ACN also provides for device discovery. While typically used with TCP/IP and 802.3 Ethernet or 802.11 WiFi, other physical/link/transport/network layers are incorporated as possibilities, including various serial and RS485 standards, via interoperability profiles.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/RDM_(lighting)&#34;&gt;E1.20 RDM:&lt;/a&gt;&lt;/strong&gt; (&lt;strong&gt;R&lt;/strong&gt;emote &lt;strong&gt;D&lt;/strong&gt;evice &lt;strong&gt;M&lt;/strong&gt;anagement) Specifies an extension to a DMX512 link permitting intelligent, &lt;u&gt;bi-directional &lt;/u&gt;communication between devices. An alternative start code in a DMX packet identifies an RDM packet. RDM uses a binary-tree or similar search to identify devices on a DMX512 line. Controllers can use RDM messages to Get or Set parameters of endpoint devices, and communicate to individual endpoints when they may drive the line to respond to Controller commands. Device configuration and monitoring are primary goals, as is identification.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;E1.31 sACN&lt;/strong&gt; (&lt;strong&gt;S&lt;/strong&gt;treaming &lt;strong&gt;ACN&lt;/strong&gt;): Describes a lightweight mechanism for streaming DMX packets over an IP network using a (small) subset of the ACN suite. Describes data format, protocol, addressing, and network management, as well as a synchronization method for ensuring that data arrives concurrently at multiple endpoints.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;There are also some subsidiary standards documents managed by the &lt;a href=&#34;https://tsp.esta.org/tsp/working_groups/CP/cp.html&#34;&gt;Control Protocols Working Group&lt;/a&gt;, including:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;&lt;li&gt;E1.27-1 - Standard for portable control cables for use with DMX512&lt;/li&gt;&lt;li&gt;E1.27-2 - Standard for Permanently Installed Control Cables for use with DMX512&lt;/li&gt;&lt;li&gt;E1.30-1 - EPI 23, Device Identification Subdevice&lt;/li&gt;&lt;li&gt;E1.30-3 - EPI 25, Time Reference in ACN Systems using SNTP and NTP&lt;/li&gt;&lt;li&gt;E1.30-4 - EPI 26, DDL Extensions for DMX512 and sACN Devices&lt;/li&gt;&lt;li&gt;E1.30-7 - EPI 29, Allocation of IPv4 Addresses to ACN Hosts&lt;/li&gt;&lt;li&gt;E1.37-1  - Additional Message Sets for E1.20 RDM Part 1 - Dimmer Message Sets&lt;/li&gt;&lt;/ul&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr class=&#34;wp-block-separator&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;In addition to the published ESTA standards, it&#39;s worth mentioning two that are not currently maintained as standards:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The standard for &lt;strong&gt;&lt;a href=&#34;https://tsp.esta.org/tsp/documents/docs/E1.33_CP2010-1032r5.pdf&#34;&gt;E1.33, RDMNet&lt;/a&gt;&lt;/strong&gt;, has been in draft review since at least 2011. It defines a suite of protocols for the types of device discovery, device management and configuration, and automatic device configuration that RDM provides on a DMX512 link, but across a network. It defines a broad scalable architecture that allows for multiple controllers and &#34;tens of thousands of responders,&#34; as well as a minimal protocol for carrying non-RDM data over the same protocol. The spec defines&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;&lt;li&gt;A Low Level Recovery Protocol (LLRP), used to configure IP settings so that E1.33 equipment achieves connectivity&lt;/li&gt;&lt;li&gt;A Broker protocol, which allows for discovery and many-to-many message transport&lt;/li&gt;&lt;li&gt;The RDM Packet Transport Protocol (RPT), which defines the primary packet formats and messages, as well as topology and functional requirements for controllers and endpoints&lt;/li&gt;&lt;li&gt;The Extensible Packet Transport protocol (EPT), which may be used to carry non-DMX data in a similar way to RPT.&lt;/li&gt;&lt;/ul&gt;
&lt;p class=&#34;post-p&#34;&gt;BSR E1.33 Concluded its fifth public review in January 2018 with 68 pages of public comments; no date is known for the next public review session. As noted below, ETC has its own mechanism for transporting RDM and RDM-like data over ethernet via its NET3 suite.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The second &#39;standard&#39; of interest is the former &lt;strong&gt;E.1.45&lt;/strong&gt;, &#34;Unidirectional Transport of IEEE 802 Data Frames over ANSI E1.11 (DMX512). This provided a mechanism for transmitting IEEE 802 packets - including Ethernet (802.3), Wireless LAN (802.11), and Bluetooth (802.15.1) - over a DMX512 link by using an alternative start code, stuffing the packet data into the DMX &#34;payload&#34; area, prepending two byte of sequence numbers and appending a two octet CRC for error checking. Interestingly, it seems that this standard was aimed specifically at &lt;a href=&#34;https://en.wikipedia.org/wiki/Visible_light_communication&#34;&gt;Visible Light Communication&lt;/a&gt; (802.15.7), for transmission of data in the visible spectrum.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;After publication, it was established that key parts of the E1.45 standard were covered by US and Korean patents, and the patent holder would not guarantee that licensing could be made &#34;under reasonable terms and conditions that are demonstrably free of any unfair discrimination.&#34; Therefore, in October 2015, the ESTA withdrew this document as a standard.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr class=&#34;wp-block-separator&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Beyond the ESTA-specified standards, there are a handful other vendor-specific or genre-specific communications protocols in use. Electronic Theatre Controls (ETC) has used a number of protocols all their own over the years, including:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;ETCnet (Net1): &lt;/strong&gt;Originally called ETCNet and retroactively renamed to Net1,  this was ETC&#39;s first Ethernet based control protocol. It is proprietary, without publicly available specification. It is a raw Ethernet protocol (layer 2), meaning that routers and certain types of switches do not pass Net1 traffic. A hub is recommended. Net1 provdes transport of console video information, up to 4 universes of DMX, tracking backup data, and keyboard command information to ETC products of the era, including Express/Expression/Insight and Obsession 1. Many Net2 DMX nodes can also be configured to operate in Net1 mode, with the concomitant loss of function.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;ETCLink:&lt;/strong&gt; ETC&#39;s Sensor dimmers with a CEM classic controller use this protocol to provide dimmer feedback to the console. Express/Expression and Obsessions 1/2 consoles could receive this data. Connections were commonly a 6-pin XLR connector. This functionality has been supplanted by ethernet-based feedback in modern systems.
&lt;p class=&#34;post-p&#34;&gt;&lt;/p&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;ETC Net2:&lt;/strong&gt; Introduced with the Obsession II console, ETC&#39;s second networked control solution incorporated IP addressing, this allowing network traffic to be switched or routed. Sends DMX data as eDMX, which in its final version incorporates per-&#34;range&#34; priority. Includes EDIMI, ESMPTE, FTP for ETC devices, and video data for remote video units.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;ETC Net3: &lt;/strong&gt;ETC&#39;s current suite of network-based communication. Sends DMX data over sACN. Uses a non-public RDM-over-ethernet protocol to receive RDM data from Net3 DMX Nodes. Incorporates network video data as Net2 did. Many ETC products (Sensor Dimming, Paradigm, Mosaic, Unison, etc) have ethernet functionality, but it is nebulous which of these fall under &#34;Net3&#34; and which are their own Ethernet-based communication system.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;ETC also uses &lt;a href=&#34;https://en.wikipedia.org/wiki/LonWorks&#34;&gt;LonBus-based&lt;/a&gt; networking devices to control various legacy architectural control stations - while their modern counterparts can also usually take LonBus, they are typically served by an Ethernet connection.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr class=&#34;wp-block-separator&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Other situation-specific lighting communication protocols include:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://art-net.org.uk/&#34;&gt;Art-Net&lt;/a&gt;:&lt;/strong&gt; A simple implementation for streaming DMX512 and RDM information over IP networks, typically ethernet. Multiple versions exist (1 thru 4) with significant differences - version 1 uses only broadcast packets; version 2 uses broadcast for discovery of endpoints and unicast for data delviery. Version 3 introduced the ability to expand to up to 32,000 universes, and further refinements were made to version 4. Artnet uses specific IP ranges for much of its configuration, which can present integration challenges when it needs to exist alongside other switched protocols.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://www.highend.com/pub/support/controllers/documents/HTML/en/sect-setting_up_the_network.htm&#34;&gt;HogNet&lt;/a&gt; and Fixturenet:&lt;/strong&gt; High End Systems uses its proprietary HogNet ethernet suite of protocols to link its line of Whole Hog lighting consoles, as well as their DMX processors and optionally other lighting control PC&#39;s. These connect to a specific HogNet RJ45 connector on the back of most Whole Hog consoles, with its own NIC. A secondary connection, the FixtureNet ethernet connection, is used for connecting to Art-Net/sACN(E1.31) DMX gateways.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;&lt;a href=&#34;http://www.citp-protocol.org/viewtopic.php?f=1&amp;amp;t=3&#34;&gt;CITP &lt;/a&gt;&lt;/strong&gt;(&lt;strong&gt;C&lt;/strong&gt;ontroller &lt;strong&gt;I&lt;/strong&gt;nterface &lt;strong&gt;T&lt;/strong&gt;ransport &lt;strong&gt;P&lt;/strong&gt;rotocol): Used by some lighting and video controllers to exchange pictures and video streams over a network. The standard is maintained by &lt;a href=&#34;http://www.citp-protocol.org/viewtopic.php?f=1&amp;amp;t=3&#34;&gt;Capture&lt;/a&gt;. &lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;&lt;a href=&#34;https://help2.malighting.com/Page/grandMA2/network_psn/en/3.3&#34;&gt;PosiStageNet &lt;/a&gt;&lt;/strong&gt;(PSN): An open protocol developed by MA Lighting to transmit realtime position information over a network, for example from a tracking device on a moving actor, scenic piece, or prop to allow for video, lighting, or motion-control tracking.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr class=&#34;wp-block-separator&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;So what does the future of lighting control look like? Clearly, we are living in an increasingly-connected theatrical world, and most of that connectivity is Ethernet-based. I don&#39;t expect to see an entirely new paradigm at the link layer any time soon.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;I have expected for many years to see an additional level of automation and abstraction in how we set up lighting systems. When all of the devices in a system can talk to each other, is there still a need to individually plan, address, patch, and coordinate the ID&#39;s of individual fixtures or dimmers? Or can we automate ourselves out of the time consuming business of managing &lt;em&gt;how&lt;/em&gt; the devices talk to each other and let the system set up its communication network &lt;em&gt;automatically&lt;/em&gt;? We shall see. &lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;No matter what the future holds, we&#39;ve come a long way from Piano Board dimming.&lt;/p&gt;
&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-316 post-img&#34; src=&#34;pianoboard.jpg&#34;/&gt;&lt;/figure&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;Update:&lt;/strong&gt; After posting this on Facebook, a friend asked about the AMX protocol that he remembered from high school. Here&#39;s the brief answer I gave him:&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;strong&gt;AMX&lt;/strong&gt; (&lt;strong&gt;A&lt;/strong&gt;nalog Multiple&lt;strong&gt;X&lt;/strong&gt;) was one of a bunch of protocols (AMX192, CMX, MPX) that appeared in the late 80&#39;s as people were trying to solve the &#34;one dimmer = one wire&#34; problem of E1.3 0-10v. It used 4 wires - two for a (balanced) clock signal, one ground, and a signal line which carried a succession of analog voltages (0-5V) that represented the levels of up to 192 parameters.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Acceptable connectors were 4-pin XLR or TY4F (mini-stupid!). Interestingly, the spec requires &#34;sound-style&#34; Male XLR connectors on the controller and female connectors on endpoints. &lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The AMX192 standard was developed and published in 1987 by the United States Institute for Theatre Technology (USITT), instead of the ESTA. &lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Full spec re-hosted here: &lt;a href=&#34;http://jeff.glass/documents/AMX192_8-08.pdf?fbclid=IwAR0bUMme18XBjcNqr6wVV1WlxtivhO51q8-LdlWmUosSmZNjF1ROZouXzIM&#34; rel=&#34;noreferrer noopener&#34; target=&#34;_blank&#34;&gt;http://jeff.glass/documents/AMX192_8-08.pdf&lt;/a&gt;&lt;/p&gt;
</description>
      &lt;
    </item>
    
  </channel>
</rss>