<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hugo on Jeff Glass</title>
    <link>https://jeff.glass/tags/hugo/</link>
    <description>Recent content in Hugo on Jeff Glass</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 04 Mar 2022 12:32:00 -0500</lastBuildDate><atom:link href="https://jeff.glass/tags/hugo/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Aliases</title>
      <link>https://jeff.glass/post/cloud-resume-challenge-aliases/</link>
      <pubDate>Fri, 04 Mar 2022 12:32:00 -0500</pubDate>
      
      <guid>https://jeff.glass/post/cloud-resume-challenge-aliases/</guid>
      <description>&lt;p class=&#34;post-p&#34;&gt;As part of transitionining from my old wordpress site to this new one created with Hugo, I wanted to be sure to preserve any external links that pointed to URLs that may no longer exist in Hugo&#39;s content structure. In partilcular, the format of permalinks to my blog posts has changed from &lt;code class=&#34;code&#34;&gt;/year/date/post-name&lt;/code&gt; to just &lt;code class=&#34;code&#34;&gt;/post/post-name&lt;/code&gt;. Additionally, I had created 301 redirects from several short URLS like &lt;code class=&#34;code&#34;&gt;/demilight&lt;/code&gt; to unique pages; I wanted those links to be preserved as well.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Thankfully, Hugo has some simple functionality to help with this in the form of &lt;a href=&#34;https://gohugo.io/content-management/urls/#aliases&#34;&gt;aliases&lt;/a&gt;. By including a relative path in any page&#39;s front matter, Hugo will create a redirect link from that relative path to the current page.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;For example, I would like users who visit &lt;code class=&#34;code&#34;&gt;https://jeff.glass/demilight&lt;/code&gt; to be redirected to  &lt;code class=&#34;code&#34;&gt;https://jeff.glass/project/demilight&lt;/code&gt;. To do this, I simply add the following in front matter of the index.html file of the demilight project:&lt;/p&gt;
&lt;pre class=&#34;block w-auto px-4 mx-4 border-2 border-gray-300 bg-green-50&#34;&gt;aliases:
    - /demilight/
&lt;/pre&gt;
&lt;p class=&#34;post-p&#34;&gt;Now, if you head to &lt;a href=&#34;https://jeff.glass/demilight&#34;&gt;https://jeff.glass/demilight&lt;/a&gt;, you should be taken to the correct project page.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Since everything in Hugo is a page, including list pages and other programmatically generated content, this can be used in lots of ways. For example, with the old wordpress site, my blog posts were at &lt;code class=&#34;code&#34;&gt;jeff.glass/blog&lt;/code&gt;, but Hugo puts them at &lt;code class=&#34;code&#34;&gt;jeff.glass/post&lt;/code&gt;. To create this redirect, I create a &lt;code class=&#34;code&#34;&gt;_index.md&lt;/code&gt; file at the root of the &lt;code class=&#34;code&#34;&gt;post&lt;/code&gt; folder with the following frontmatter:&lt;/p&gt;
&lt;pre class=&#34;block w-auto px-4 mx-4 border-2 border-gray-300 bg-green-50&#34;&gt;
---
    title: &#34;Blog Posts&#34;
    aliases:
      - /blog/
---
&lt;/pre&gt;
&lt;p class=&#34;post-p&#34;&gt;Now, I could make these modifications programmatically (and probably should have done so &lt;a href=&#34;../../post/cloud-resume-challenge-porting-wordpress-blogs-to-hugo/&#34;&gt;when I was porting things from Wordpress to Hugo&lt;/a&gt;, but there are few enough of them and enough edge cases that I&#39;m just going through and handling them by manually editting frontmatter. Like good ole &lt;a href=&#34;https://xkcd.com/1205/&#34;&gt;XKCD 1205&lt;/a&gt; says, automation just isn&#39;t always worth it.&lt;/p&gt;
&lt;img src=&#34;https://imgs.xkcd.com/comics/is_it_worth_the_time.png&#34; alt=&#34;A comic from XKCD showing a chart describing how long a task takes to automate, how much time it saves, and how often you&#39;d have to do the task to make automating it worthwhile.&#34; class=&#34;self-center p-2 mx-auto&#34;&gt;</description>
      &lt;
    </item>
    
  </channel>
</rss>