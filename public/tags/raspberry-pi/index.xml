<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>raspberry-pi on Jeff Glass</title>
    <link>https://jeff.glass/tags/raspberry-pi/</link>
    <description>Recent content in raspberry-pi on Jeff Glass</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 29 Aug 2020 17:37:26 -0500</lastBuildDate><atom:link href="https://jeff.glass/tags/raspberry-pi/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Livestream a (Technology Focused) Class</title>
      <link>https://jeff.glass/post/how-to-livestream-a-technology-focused-class/</link>
      <pubDate>Sat, 29 Aug 2020 17:37:26 -0500</pubDate>
      
      <guid>https://jeff.glass/post/how-to-livestream-a-technology-focused-class/</guid>
      <description>&lt;p class=&#34;post-p&#34;&gt;In BC times (&lt;span style=&#34;text-decoration: underline;&#34;&gt;B&lt;/span&gt;efore &lt;span style=&#34;text-decoration: underline;&#34;&gt;C&lt;/span&gt;ovid), I had often dreamed of setting up a semi-regular gathering with some nerd friends to make things. We&#39;d all sit around, drink beer, eat trail mix, and bash things together with Arduinos and Raspberry Pis and servos and LEDs and what have you. And then March 2020 rolled around - getting together in person was suddenly passé, but with my day job sending us home for &#34;three weeks&#34; of shelter-at-home, I also had a lot more time on my hands...&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;And so, the &lt;a href=&#34;https://jeff.glass/electronics-bash/&#34;&gt;Electronics Bash live video classes&lt;/a&gt; were born. Starting Sunday, March 15, I begin streaming live electronics classes every Sunday night. They have centered around Arduino programming and usage, but I&#39;ve also branched off into electrical theory, battery types, microcontroller hardware, and other related topics. After 20 weeks of that, I shifted gears to Raspberry Pi programming and single board computers. Many of the topics have been suggested by the small but enthusiastic core group of nerds who come together on Sunday nights to share ideas and learn things.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter size-large wp-image-841 post-img&#34; height=&#34;405&#34; src=&#34;3-29-2020-Thumb-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;It&#39;s now late-August 2020, I&#39;ve taught 22 of these classes, I&#39;m back at my day job, and having &#34;completed&#34; the Arduino course, it feels like I&#39;ve created &#34;one whole thing&#34; . And so I thought it might be a fun time to look back at what I&#39;ve learned about online teaching, streaming setups, electronics, and life over the first 22 Electronics Bash classes.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Some of this is going to be technical, some philosophical, some nonsensical. But what else is new.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;span clas=&#34;m-auto&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1296 size-large post-img&#34; height=&#34;405&#34; src=&#34;streamcap1-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;post-img-caption&#34;&gt;The stream looks pretty good these days, I like to think.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr/&gt;&lt;/p&gt;
&lt;h3 class=&#34;text-3xl&#34;&gt;Technology&lt;/h3&gt;
&lt;p class=&#34;post-p&#34;&gt;My technology setup has been relatively consistent since about week 4 of Electronics Bash, with a few adjustments along the way as noted below. Let&#39;s break it down by technology categories.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;(&lt;span class=&#34;italic&#34;&gt;My setup in many areas changed significantly with the shift to Raspberry Pi classes, so all those changes are noted at the end of this section.&lt;/span&gt;)&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Goals&lt;/h4&gt;
&lt;p class=&#34;post-p&#34;&gt;When I leapt into the idea of teaching these classes, the thought was to focus on &#34;Arduino, Electronics, and Related Stuff.&#34; I knew I would need at least two things to be visible: a computer desktop (for the programming IDE and explanatory slides) and the workbench itself (for showing wiring and physical demos). Seeing my face I&#39;d count as a bonus. I also wanted to stream in reasonably high resolution - 720p as a goal, 1080p would be nice - and to make the process of switching between what the viewer is seeing as seamless as possible. Most topics would involve a good amount of swapping back and forth between slides, code, the workbench, and verbal explanation. And it should all look reasonably clear and clean.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The setup that I came up with has served me well in these regards over time, and wasn&#39;t terribly complicated nor expensive to put together.&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Computer&lt;/h4&gt;
&lt;p class=&#34;post-p&#34;&gt;I use my &lt;a href=&#34;https://amzn.to/3lk85P0&#34;&gt;Lenovo Legion Y7000&lt;/a&gt; laptop for basically all my computer purposes these days, including streaming and programming. It&#39;s a &#34;gaming laptop&#34;, which essentially means it has a mid-tier GPU stuffed inside a laptop chassis with some extra fans. I personally like the versatility this gives me - I can run &lt;a href=&#34;https://www.autodesk.com/products/fusion-360/overview&#34;&gt;Fusion360&lt;/a&gt; or &lt;a href=&#34;https://www.autodesk.com/products/autocad/overview&#34;&gt;AutoCAD&lt;/a&gt; pretty well, rendering a video out from &lt;a href=&#34;https://www.blackmagicdesign.com/products/davinciresolve/&#34;&gt;Da Vinci Resolve&lt;/a&gt; is pretty efficient, and my setup is still portable.&lt;/p&gt;
&lt;img alt=&#34;Lenovo Legion Y7000P-1060 - Notebookcheck.net External Reviews&#34; class=&#34;aligncenter post-img&#34; height=&#34;256&#34; src=&#34;https://www.notebookcheck.net/typo3temp/_processed_/a/3/csm__MG_3512_b10bc87ad6.jpg&#34; width=&#34;341&#34;/&gt;
&lt;p class=&#34;post-p&#34;&gt;I have an external monitor more or less permanently behind my workbench to accommodate the streaming setup - it&#39;s a basic 1600x900 monitor that I picked up from &lt;a href=&#34;https://www.freegeekchicago.org/&#34;&gt;FreeGeek Chicago&lt;/a&gt; at some point, just fed from the HDMI output on my laptop.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1313 size-large post-img&#34; height=&#34;540&#34; src=&#34;IMG_0986-1024x768.jpg&#34; width=&#34;720&#34;/&gt;&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Cameras&lt;/h4&gt;
&lt;p class=&#34;post-p&#34;&gt;My stream setup centers around two primary views- looking at something on the workbench (with my face in a little window in the corner) and looking at something on the computer (with my face in a little window in the corner). Sometimes, it&#39;s looking at my face alone, but that&#39;s mostly for the beginning and end of the class, and any long explanations in the middle. The full list of stream looks is below, but these are the big two/three.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;To achieve these core looks, I have three cameras: two &lt;a href=&#34;https://amzn.to/3lk86T1&#34;&gt;Logitech c920 HD webcams&lt;/a&gt; as the face-cameras, and a &lt;a href=&#34;https://amzn.to/3hJiFwV&#34;&gt;Sony a5100 mirrorless camera&lt;/a&gt; feeding an &lt;a href=&#34;https://amzn.to/2G03QrH&#34;&gt;Elgato CamLink 4k HDMI capture dongle&lt;/a&gt; pointing straight down at the workbench.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The c920s are both mounted on &lt;a href=&#34;https://www.thingiverse.com/thing:2477180&#34;&gt;3D-printed&lt;/a&gt; &lt;a href=&#34;https://www.thingiverse.com/thing:3015022&#34;&gt;reposition-able arms&lt;/a&gt;, which mount to some 2020 aluminum extrusion that clips onto the front of my workbench shelves. They&#39;re really decent face cameras, with a wide field-of-view and decent autofocus. It&#39;s a shame that the Logitech drivers don&#39;t like to save their settings very well, so I end up needing to reconfigure things like color temperature and gain every time I restart my streaming software. But that&#39;s only an annoyance.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;You can see both &lt;a href=&#34;https://amzn.to/2YB3Qoe&#34;&gt;ducting tape&lt;/a&gt; (NOT duct tape) and &lt;a href=&#34;http://store.gopherstagelighting.com/city-theatrical-black-tak/&#34;&gt;Black Tack&lt;/a&gt; in the pictures below, used as barn-doors to shield the cameras from the nearby lights to avoid flare. I have one for when I&#39;m working at the workbench and another for when I&#39;m looking at the laptop screen.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1300 size-medium post-img&#34; height=&#34;225&#34; src=&#34;IMG_0951-300x225.jpg&#34; width=&#34;300&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The a5100 is usually attached to an &lt;a href=&#34;https://amzn.to/2QsvSOw&#34;&gt;11&#34; magic arm&lt;/a&gt; with a soft-clamp on a higher shelf; I also have a&lt;a href=&#34;https://amzn.to/3jh3r2u&#34;&gt; desktop boom-arm&lt;/a&gt; for filming things up-close, but I almost never stream that way. I originally had a &lt;a href=&#34;https://amzn.to/31uNL5D&#34;&gt;cheaper, plastic-y 11&#34; magic arm&lt;/a&gt;, in the theory that I wasn&#39;t sure if it would actually be useful. Turns out they&#39;re a great tool, but the cheapiest ones wear out pretty quick - the metal ones like the one linked above are worth the investment.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter size-medium wp-image-1301 post-img&#34; height=&#34;225&#34; src=&#34;IMG_0961-300x225.jpg&#34; width=&#34;300&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;I use the &lt;a href=&#34;https://amzn.to/3gtAiiM&#34;&gt;kit OSS 18-55mm lens&lt;/a&gt; that the A5100 came with - with &#34;digital true zoom&#34; providing another 2x magnification beyond the longest zoom range, I find I get a really good range of full-desk to close-up-on-table. A &lt;a href=&#34;https://amzn.to/34Ah5JZ&#34;&gt;battery-replacer&lt;/a&gt; (wall-wart-to-battery-form-&lt;wbr/&gt;factor-plug) is a must for streaming, because any internal battery is going to die very quickly. The a5100 also requires a &lt;a href=&#34;https://amzn.to/2YFRBXw&#34;&gt;micro-HDMI to HDMI cable&lt;/a&gt;.&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Software&lt;/h4&gt;
&lt;p class=&#34;post-p&#34;&gt;I use &lt;a href=&#34;https://obsproject.com/&#34;&gt;Open Broadcast System (OBS)&lt;/a&gt; as my primary streaming software. I find it does most everything I want it to, and a couple other things besides. Since I&#39;m not monetizing my streams at all, and don&#39;t need features like pop-up notifications when somebody throws me some digi-chits or something, I don&#39;t feel the need to switch to something like &lt;a href=&#34;https://streamlabs.com/&#34;&gt;Streamlabs&lt;/a&gt; or &lt;a href=&#34;https://streamelements.com/&#34;&gt;Stream Elements&lt;/a&gt;. But perhaps someday I should play with them.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1311 size-large post-img&#34; height=&#34;408&#34; src=&#34;obs-with-chat-cropped-1024x580.png&#34; width=&#34;720&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;As I mentioned above, my big 3 scenes are: Computer Screen (+ small face), Workbench (with small face), and Face (With small computer screen and workbench). But I have 13 different scenes in my active collection; for the sake of completeness, they are:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Just facecam&lt;/li&gt;
&lt;li&gt;Facecam with small workbench and laptop views&lt;/li&gt;
&lt;li&gt; Just workbench&lt;/li&gt;
&lt;li&gt;Workbench with small facecam&lt;/li&gt;
&lt;li&gt;Workbench with small facecam and laptop views&lt;/li&gt;
&lt;li&gt;Just laptop screen&lt;/li&gt;
&lt;li&gt;Laptop with small facecam&lt;/li&gt;
&lt;li&gt;Laptop screen with small facecam and workbench views&lt;/li&gt;
&lt;li&gt;Raspberry Pi Display with small facecam&lt;/li&gt;
&lt;li&gt;&#34;Video Adjustments in Progress&#34; slide with microphone ON - &lt;span class=&#34;italic&#34;&gt;I use this mostly when I need to stand up from my workbench to grab something on the shelves behind it, and I don&#39;t want viewers to be staring at my tummy&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&#34;We&#39;ll Be Right Back&#34; slide with Microphone OFF and music on - &lt;span class=&#34;italic&#34;&gt;For times I actually need to step away for a moment&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;italic&#34;&gt;&#34;&lt;/span&gt;Stream Starting Soon&#34; slide with countdown to start&lt;/li&gt;
&lt;li&gt;&#34;Goodnight&#34; slide - &lt;span class=&#34;italic&#34;&gt;for end of streams&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-p&#34;&gt;Switching between the various views smoothly on the fly as necessary to explain a concept is, I think, critical to maintaining flow. For that, I use the &lt;a href=&#34;https://www.elgato.com/en/gaming/stream-deck-mobile&#34;&gt;Stream Deck Mobile app&lt;/a&gt; for my iPhone, which emulates a &lt;a href=&#34;https://www.elgato.com/en/gaming/stream-deck&#34;&gt;Stream Deck controller&lt;/a&gt;. The Stream Deck configuration app is easy to use if just a little bit buggy - it allows me to have up to 15 buttons on my phone which switch between scenes in OBS on the fly.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;span class=&#34;m-auto text-center&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1312 size-large post-img&#34; height=&#34;333&#34; src=&#34;IMG_0987-1024x473.png&#34; width=&#34;720&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;post-img-caption&#34;&gt;My Streamdeck App configuration&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;To do the &#34;Starting Soon&#34; and &#34;waiting for stragglers to arrive&#34; countdowns, I use a little script called &lt;a href=&#34;https://montemagno.com/introducing-my-stream-timer-a-countdown-timer-for-obs/&#34;&gt;My Stream Timer&lt;/a&gt;, which updates a .txt file with the current countdown time and specified by some very basic controls. OBS then uses this text file as the source for some text that appears on the screen.&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Lighting&lt;/h4&gt;
&lt;p class=&#34;post-p&#34;&gt;I spent more than a decade as a stage lighting professional before shifting gears into my current job. As such, I have opinions about lighting.  Of all the physical elements of my setup, this is the one that&#39;s changed most over time. But thankfully, it doesn&#39;t take a ton of cash to make a halfway decent lighting environment, particularly when you&#39;re in charge of your own camera angles.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;One good rule of thumb for video that&#39;s meant to be clear and communicative - get a lot of light on your subject, and get light off of whatever&#39;s behind your subject. In my case, I have an &lt;a href=&#34;https://amzn.to/2CZtyLG&#34;&gt;11W 6500K LED bulb&lt;/a&gt; strung above my workbench as the primary bench light, as well as a small LED A-lamp fixture that used to be in a bedroom as some fill light. These just blast the bench with light, and allow me to turn the ISO on my camera down to keep the grain away.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1314 size-large post-img&#34; height=&#34;540&#34; src=&#34;IMG_0988-1024x768.jpg&#34; width=&#34;720&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;On my face, I have a &lt;a href=&#34;https://amzn.to/32pAURv&#34;&gt;small LED gooseneck&lt;/a&gt; that was on an alternate workbench in my last apartment. Hanging above my chair is a &lt;a href=&#34;https://amzn.to/2QtsMtG&#34;&gt;clip light&lt;/a&gt; with another cool-while LED acting as a hair light. Finally, down near my left knee is a small clip light with a blue LED bulb, which acts as a fill light when I turn 45 degrees to look at my laptop screen.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter size-medium wp-image-1303 post-img&#34; height=&#34;300&#34; src=&#34;IMG_0958-225x300.jpg&#34; width=&#34;225&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The background behind your subject doesn&#39;t need to be totally dark, though relative darkness does help with contrast. Creating color contrast can help draw a figure out from the background as well. To that end, I have some &lt;a href=&#34;https://amzn.to/2EzEpfO&#34;&gt;RGB LED tape&lt;/a&gt; (with only blue and green hardwired on) on my storage shelves that sit behind me on camera, and a &lt;a href=&#34;https://amzn.to/3hrwcsC&#34;&gt;red LED PAR bulb&lt;/a&gt; that scrapes up my blinds for some additional color and texture. Just provides a little additional pop and saturation to the scene.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter size-medium wp-image-1305 post-img&#34; height=&#34;300&#34; src=&#34;IMG_0959-225x300.jpg&#34; width=&#34;225&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;All together this adds up to what I feel is a balanced lighting look, that keeps my face visible and clear, illuminates the desktop, and hopefully doesn&#39;t look &lt;span class=&#34;italic&#34;&gt;too&lt;/span&gt; cheesy.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1307 size-large post-img&#34; height=&#34;404&#34; src=&#34;streamcap3-1024x574.png&#34; width=&#34;720&#34;/&gt;&lt;/p&gt;
&lt;h4 class=&#34;text-xl&#34;&gt;Audio&lt;/h4&gt;
&lt;p class=&#34;post-p&#34;&gt;For the first 16 weeks or so of classes, my microphone setup was incredibly inexpensive - a &lt;a href=&#34;https://amzn.to/3linOhn&#34;&gt;wired BOYA lavalier&lt;/a&gt; from Amazon and a &lt;a href=&#34;https://amzn.to/3gvgnA2&#34;&gt;generic USB Audio Interface&lt;/a&gt; that a picked up when I was &lt;a href=&#34;https://kk9jef.wordpress.com/2015/10/20/enabling-a-usb-sound-card-on-the-raspberry-pi/&#34;&gt;experimenting with Audio input to the Raspberry Pi&lt;/a&gt; a few years back. I like the BOYA a lot for the price - decent response, nice long cable, fairly durable. More decently, I&#39;ve been used a &lt;a href=&#34;https://amzn.to/3jeF5Gv&#34;&gt;Fifine wireless boom-style microphone&lt;/a&gt;, which gives me a little more freedom to move around, but the low-frequency response isn&#39;t nearly as good.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;span class=&#34;m-auto text-center&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1308 size-large post-img&#34; height=&#34;405&#34; src=&#34;streamcap4-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/span&gt;&lt;/p&gt;&lt;p class=&#34;post-img-caption&#34;&gt;I&#39;m not in love with the look of the boom mic, but it does its job.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;To make things sound just a little rounder, use a couple of OBS&#39;s built-in VST audio plugins - EQ and Compressor - to keep the frequency response pleasant and the volume to a reasonable level.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;I used an &lt;a href=&#34;https://amzn.to/31rQSv4&#34;&gt;inexpensive pair of over-the-ear headphones&lt;/a&gt; to hear myself and any notification sounds that come up. They&#39;re pretty darn good for headphones that cost less than $20.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;I enjoy having a little background music on my stream, just to fill air and make things a little more cozy. All of it is pulled from &lt;a href=&#34;https://www.youtube.com/audiolibrary/music&#34;&gt;YouTube&#39;s music library&lt;/a&gt;, which guarantees I won&#39;t be hit with an obscure copyright strike someday.&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Raspberry Pi Class Adjustments&lt;/h4&gt;
&lt;p class=&#34;post-p&#34;&gt;When I start the Raspberry Pi classes, I&#39;m wanted to capture the HDMI output directly from the Pi into the capture software as well, so I went ahead and picked up one of the &lt;a href=&#34;https://amzn.to/3aYYc4D&#34;&gt;$20 HDMI capture dongles&lt;/a&gt; that have popped up from overseas in the past couple months. The thing works really amazingly well for how inexpensive it is - decent color, framerate, resolution, HDCP support... I&#39;ve had no issues with it so far, and at least on my system the automatically-installed drivers work just fine. There does seem to be about 200ms of lag going into OBS, but for desktop instruction this is just fine. If you were using it to capture the output of an external camera, it might be necessary to delay your audio to match.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;span class=&#34;m-auto text-center&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;size-medium wp-image-1309 post-img&#34; height=&#34;265&#34; src=&#34;hdmi-300x265.jpg&#34; width=&#34;300&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;post-img-caption&#34;&gt;It could not look any more generic, but it actually works pretty well.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;For my very first RPi class, I interacted with the Pi via OBS - that is, my view of the Raspberry Pi&#39;s desktop was inside of my streaming output inside of OBS. This wasn&#39;t ideal. The display is, of course, somewhat shrunk down; worse, the slight lag made the interface feel very floaty and hard to use. By the next class, I had dropped an &lt;a href=&#34;https://amzn.to/32H5t5p&#34;&gt;HDMI splitter&lt;/a&gt; in between the Pi and the capture card, whose second output feeds a second external monitor. So now I have my laptop screen (where slides/IDE live), my streaming screen (HDMI output from laptop, where OBS/chat lives) and a Raspberry Pi screen (showing Pi desktop). This works really quite well as an interface.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Sometime I had discovered during my initial setup about USB video sources and USB hubs has also popped up again with this setup. I won&#39;t claim to fully understand the issue, but something about t&lt;a href=&#34;https://superuser.com/questions/497933/50-usb-webcams-in-a-single-computer-is-that-really-possible&#34;&gt;he way USB 2.0/3.0 handle video streaming resources&lt;/a&gt; is less than ideal. The result is that putting multiple video devices (webcams, capture cards) into the same USB port on a computer (via a hub) doesn&#39;t necessarily allow them to utilize all the available bandwidth, so having multiple video devices on one hub can be a problem. &lt;a href=&#34;https://yokim.net/3231/&#34;&gt;This blog post by Yokim&lt;/a&gt; encapsulates the same experiences I had.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;My workaround for this is to have two of the video sources on the same hub, and then only ever activate one of them at a time. The two I chose are the webcam which shows my face when I&#39;m looking at my laptop, and the cheapie capture card bringing in the Raspberry Pi desktop. These are the two feeds I think I&#39;m least likely to ever need at the same time.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;span class=&#34;m-auto text-center&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1316 size-large post-img&#34; height=&#34;540&#34; src=&#34;IMG_0989-1024x768.jpg&#34; width=&#34;720&#34;/&gt; &lt;span class=&#34;italic&#34;&gt;I had to take both monitors off their OEM stands to fit them under the lowest shelf in my workspace. Currently fitting them with 3D-printed stands.&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr/&gt;&lt;/p&gt;
&lt;h3 class=&#34;text-3xl&#34;&gt;Teaching: In Person vs. Streaming vs. Zooming&lt;/h3&gt;
&lt;p class=&#34;post-p&#34;&gt;There was a time in my life that I thought I was going to be a school teacher. All of my summer jobs in high-school involved teaching a theater camp for kids and teens. Many of my college classes focused on &#34;teaching artist&#34; work, theater for young audiences, and pedagogical theory. I even accidentally ended up in a &#34;&lt;span class=&#34;italic&#34;&gt;How to Teach High School English&lt;/span&gt;&#34; class in college that was meant for M.S.Ed. students, and stuck it out because it was so fascinating. And while that&#39;s not ultimately the direction my career has lead me at the moment, I&#39;ve always had an interest in teaching skills and sharing knowledge.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;There&#39;s been a real learning curve to teaching a course online though. And in my case, teaching it via stream, which I think is worth distinguishing from teaching via Zoom (or one of its thousand clones), which I&#39;ll shorten to &#39;Zooming.&#39; When one is Zooming, whether with friends or students, there&#39;s still a modicum of feedback, even when no ones saying something. You can see faces. You can see confusion or comprehension. You can roughly gather whether a class is engaged or lost or checked out or eager for what&#39;s next. It&#39;s a poor substitute for in-person lessons, I think, but at least there&#39;s still some faces in the digital crowd.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;In a streaming setup like I use, none of that is guaranteed. I spend a good chunk of my classes essentially talking to myself, and assuming it&#39;s being absorbed on the other side of the internet. Which is not to say the participants are unresponsive - they&#39;re wonderfully good about asking questions, poking fun, chiming in, giving suggestions. But especially for more complex topics, it&#39;s difficult to not be able to look into somebody&#39;s eyes every 30 seconds and make sure they&#39;re following along.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Classes &lt;a href=&#34;https://www.youtube.com/watch?v=QSuMkkyTpvA&#34;&gt;16&lt;/a&gt;, &lt;a href=&#34;https://www.youtube.com/watch?v=O2JppZIh6Cw&#34;&gt;17&lt;/a&gt;, and &lt;a href=&#34;https://www.youtube.com/watch?v=e0cF5v9Pnyo&#34;&gt;18&lt;/a&gt; on Interrupts and Timers are a great example of these challenges. These topics are super interesting (I think), but they&#39;re fairly dense. You need to understand a little bit about program flow, a little bit about memory, a little bit about hardware, and a little bit about timing to understand them. All of which we covered. But it&#39;s the kind of thing where one wants to ask &#34;Does that make sense? Are we all following?&#34; after each tidbit... and that&#39;s just not practical or actionable in a streaming environment. Especially with 6-10 seconds of lag between question and response.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr/&gt;&lt;/p&gt;
&lt;h3 class=&#34;text-3xl&#34;&gt;Dealing with Errors: Doing it live&lt;/h3&gt;
&lt;p class=&#34;post-p&#34;&gt;In teaching over 60 hours of live classes at this point, some errors were inevitable. Especially in an electronics course where I think it&#39;s valuable to build up the circuits, code, and understanding in real time. No matter how much I prep, experiment, and try to plan, there is inevitably going to be something that goes wrong. Such is life.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The challenge, then, is what to do when something fails? I personally find it throws me very much off my game - but I&#39;ve consistently gotten feedback that the process of working through problems on camera is actually super useful to those watching.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;I&#39;ve wondered as part of these classes if a whole stream on just &#34;Troubleshooting&#34; would be valuable, but I think the more useful version of that is to make an earnest effort to solve the real issues as they come up. Of course, spending 20 minutes tracking down typos would suck. Those are the times I pull out a cake-I-baked-earlier version of the code. But most errors can be fixed quickly, and talking out how to find them - &#34;Oh, this error message usually means...&#34; &#34;Oh, this behavior is wrong because...&#34; is valuable to those learning to code and wire.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr/&gt;&lt;/p&gt;
&lt;h3 class=&#34;text-3xl&#34;&gt;Lesson Development&lt;/h3&gt;
&lt;p class=&#34;post-p&#34;&gt;Anyone who&#39;s ever built a course from scratch (&lt;span class=&#34;italic&#34;&gt;and I know that&#39;s what a lot of traditionally-in-person instructors are doing these days!) &lt;/span&gt;knows how time consuming it is. First to make sure you fully understand the topic for a given lesson. Then to synthesize that knowledge into a logical sequence of explanations, topics, and themes. And finally to reify those ideas into tangible explanations and demos. Especially with a sweeping topic like &lt;a href=&#34;https://youtu.be/KiQKojmzBRs&#34;&gt;Fundamentals of Electricity&lt;/a&gt;- where do you even start?&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;span class=&#34;m-auto text-center&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1319 size-large post-img&#34; height=&#34;404&#34; src=&#34;resistnace-1024x575.png&#34; width=&#34;720&#34;/&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p class=&#34;post-img-caption&#34;&gt;This did end up being a really fun week.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Especially since I was making these classes up as I went along, week to week, my process typically looked something like this:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Previous Saturday - identify a potential theme for the &lt;span class=&#34;italic&#34;&gt;following&lt;/span&gt; week&#39;s lesson; ruminate, ponder while finalizing the &lt;span class=&#34;italic&#34;&gt;current&lt;/span&gt; week&#39;s lesson&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;italic&#34;&gt;Sunday is stream-day - focus on the day&#39;s lesson. Possibly announce the next week&#39;s lesson if feeling very confident&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;Monday/Tuesday - Do broad research, identify gaps in current knowledge (&lt;span class=&#34;italic&#34;&gt;&#39;wait I didn&#39;t know that was a thing&#39;&lt;/span&gt;), form idea of scope of topic&lt;/li&gt;
&lt;li&gt;Wednesday - Start prepping slides with specific research, rearranging and re-shaping the lesson order as they form. Announce stream on Facebook/YouTube&lt;/li&gt;
&lt;li&gt;Thursday/Friday - Finalize slides while starting to build demo circuits, programs.&lt;/li&gt;
&lt;li&gt;Saturday - Finish building demo circuits, test that they can be built in real time for stream. Start pondering the following week...&lt;/li&gt;
&lt;li&gt;Sunday - STREAM IT!&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr/&gt;&lt;/p&gt;
&lt;h3 class=&#34;text-3xl&#34;&gt;Taking Breaks and &#39;Bye&#39; Days&lt;/h3&gt;
&lt;p class=&#34;post-p&#34;&gt;Writing a new 2-3 hour class every week and teaching it online would be exhausting enough, especially for someone a little rusty with teaching. Doing it in the throws of a Pandemic was... well, let&#39;s just say a lot.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;I really wanted to keep to the every-single-week schedule as much as I could, both for continuity of those watching and frankly to maintain some structure for myself as the world changed. To that end, I did 20 straight streams from March through the end of July, every single Sunday (well, 1 Monday). Which I felt great about, but I did need to find ways to give myself little breaks in there.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The outlet I came up with was taking what I thought of as &#39;bye weeks;&#39; like when a team is doing so well in a sports tournament that they&#39;re just &#34;assumed to have won&#34; they&#39;re week and advance automatically. I did this by selecting topics that I either knew well enough to be able to teach with minimal preparation, or that I had already taught for some other purpose.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1320 size-large post-img&#34; height=&#34;404&#34; src=&#34;pcbs-1024x575.png&#34; width=&#34;720&#34;/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;The two weeks that exemplified this were &lt;a href=&#34;https://www.youtube.com/watch?v=i7fFieY7mFA&#34;&gt;Week 10: Write Better Code&lt;/a&gt; and &lt;a href=&#34;https://www.youtube.com/watch?v=6_772Sg5K8U&#34;&gt;Week 13: Creating a Printed Circuit Board&lt;/a&gt;. The former was essentially refactoring existing code in an IDE, a straightforward thing to do live. The latter was based on a lesson I had actually given at my previous job to some employees and interns. Both provided a little brain space in weeks where I was otherwise swamped.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Now that I&#39;m back to work at my fulltime job, I&#39;ve elected to go to an every-other-weekend schedule, which gives me a lot more breathing room in terms of ruminating, absorbing, and developing the upcoming lessons. And I think the lessons themselves are turning out better for it. Slamming a lesson together in a week &lt;span class=&#34;italic&#34;&gt;on top of &lt;/span&gt; a 40-hour-a-week job would lead to some substandard teaching, no doubt.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr/&gt;&lt;/p&gt;
&lt;h3 class=&#34;text-3xl&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p class=&#34;post-p&#34;&gt;I don&#39;t think there&#39;s any better way to illuminate the holes in your knowledge of a topic than to try to teach that topic. Once you have to verbalize/write down/illustrate/demo a subject to someone who&#39;s never touched it before, you discover exactly what you&#39;ve always glossed over. What does happen in that edge case? What situations would cause this specific thing to happen? Why this and not that?&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;Though I wouldn&#39;t have wished for the current state of the world, I&#39;m grateful to have spent so many Sundays in the last five-and-a-half months with other nerds, teaching, learning, and exploring. I hope we can do the same over beer and trail mix real soon.&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;hr/&gt;&lt;/p&gt;
&lt;p class=&#34;post-p&#34;&gt;&lt;span class=&#34;italic&#34;&gt;Many of the above links are Amazon Affiliate links; they are also all products I use in my everyday work and think are decent and worth the money.&lt;/span&gt;&lt;/p&gt;
</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash</title>
      <link>https://jeff.glass/project/electronics-bash/</link>
      <pubDate>Fri, 20 Mar 2020 10:29:33 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/</guid>
      <description>&lt;style&gt;
    ul {
        list-style-type: circle;
        list-style-position: inside;
        padding-left:2em;
    } ;
&lt;/style&gt;
&lt;div id=&#34;pl-820&#34;  class=&#34;panel-layout&#34;&gt;&lt;div id=&#34;pg-820-0&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;flex-start&amp;quot;}&#34;  data-ratio=&#34;1&#34;  data-ratio-direction=&#34;right&#34; &gt;&lt;div id=&#34;pgc-820-0-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;1&#34; &gt;&lt;div id=&#34;panel-820-0-0-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child&#34; data-index=&#34;0&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class= p-2 siteorigin-widget-tinymce textwidget&#34;&gt;
        &lt;h1 class=&#34;post-h1&#34;&gt;Electronics Bash: Livestream Electronics Classes&lt;/h1&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;panel-820-0-0-1&#34; class=&#34;so-panel widget widget_sow-editor panel-last-child&#34; data-index=&#34;1&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;siteorigin-widget-tinymce textwidget&#34;&gt;
        &lt;p&gt;If you&#39;re interested in the technology behind these streams, I wrote up &lt;a href=&#34;https://jeff.glass/2020/08/29/how-to-livestream-an-electronics-class/&#34;&gt;the state of my setup following the first 22 classes.&lt;/a&gt;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-1&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-1&#34; &gt;&lt;div id=&#34;pgc-820-1-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-1-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;2&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-1-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-1-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;3&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 31 - Using Analog Dials&lt;/h3&gt;
                &lt;p&gt;Analog dials just look so darn classy, right? But with the world moving ever more toward digital control, is there any point in continuing to have them on our workbench projects? And even if we did, could we even control them via our digital controllers?&lt;/p&gt;
                &lt;p&gt;Of course, and yes we can. We&#39;ll look at:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;The basics of how an analog meter works.&lt;/li&gt;
                &lt;li&gt;Determining what type of meter you have/you&#39;re looking for without blowing it up&lt;/li&gt;
                &lt;li&gt;Driving a meter via analog or digital control, including Arduino&lt;/li&gt;
                &lt;li&gt;Creating a new legend or faceplate for your meter&lt;/li&gt;
                &lt;/ul&gt;
                &lt;p&gt;This episode was be streamed &lt;a href=&#34;https://youtu.be/EjOwDTff0Oo&#34;&gt;&lt;strong&gt;live on YouTube on Sunday, October 24 2021&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/10-24-21-thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-2&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;flex-start&amp;quot;}&#34;  data-ratio=&#34;1&#34;  data-ratio-direction=&#34;right&#34; &gt;&lt;div id=&#34;pgc-820-2-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;1&#34; &gt;&lt;div id=&#34;panel-820-2-0-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child&#34; data-index=&#34;4&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col my-4 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;h1 class=&#34;post-h1&#34;&gt;Introduction to Raspberry Pi&lt;/h1&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;panel-820-2-0-1&#34; class=&#34;so-panel widget widget_sow-editor panel-last-child&#34; data-index=&#34;5&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;

            &lt;p&gt;The Raspberry Pi single board computer launched a revolution in the availability of low-cost computers for hobby projects, education, and experimentation. For less than $40, the amount of processing power, interconectivity, and flexibility a user gets out of these boards is staggering. We&#39;ll be looking at what the Raspberry Pi is, what it can do, and - since the original 20 episodes of Electronics Bash focused on the Arduino - how the two systems compare to each other.&lt;/p&gt;

                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-3&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-3&#34; &gt;&lt;div id=&#34;pgc-820-3-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-3-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;6&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-3-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-3-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;7&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;div class=&#34;w-full project-text&#34;&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;Episode 30 - Regular Expressions&lt;/h3&gt;
                    &lt;p&gt;Doncha hate it when you do a bunch of calculations, download a bunch of data, or generate a ton of useful python objects, only for them to vanish when your program ends? Wouldn&#39;t it be nice if there was a way to preserve data on some kind of physical media in-between program runs, so you could save and reuse data? Or even make use of data that other people had created before? If only...&lt;/p&gt;
                    &lt;p&gt;Is reading and writing data from files the ~sexiest~ thing you can do with code? No. Is it one of the most useful? Oh yeah. We&#39;ll look at:&lt;/p&gt;
                    &lt;ul&gt;
                    &lt;li&gt;Reading and writing plain text in files&lt;/li&gt;
                    &lt;li&gt;Reading and writing structured data using JSON&lt;/li&gt;
                    &lt;li&gt;Reading and writing raw python objects using Pickle&lt;/li&gt;
                    &lt;li&gt;Strategies to avoid re-generating data when not necessary&lt;/li&gt;
                    &lt;li&gt;How to avoid using too much web data my caching locally&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-29-programming-challenges-live-2/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                    &lt;p&gt;This episode was streamed &lt;a href=&#34;https://youtu.be/EjOwDTff0Oo&#34;&gt;&lt;strong&gt;live on YouTube on Sunday, January 3 2020&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/1-3-21-Thumb-768x432.jpg&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-4&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-4-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-4-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;8&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-4-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-4-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;9&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;div class=&#34;w-full project-text&#34;&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;Episode 29 - Problem Solving Live&lt;/h3&gt;
                    &lt;p&gt;No, I don&#39;t intend to light my code on fire... but then I didn&#39;t mean to set my circuit board on fire last week, and we saw how that turned out.&lt;/p&gt;
                    &lt;p&gt;The holidays are here, and with them, the annual Advent of Code challenge! This festive yuletide tradition presents a language-agnostic coding challenge for each of the first 25 days in December. This week, we&#39;ll use the first five challenges as an excuse to talk about problem solving, list comprehension, and iterables in Python. Then we&#39;ll try and solve the Day 6 challenge in real time! Fingers crossed!&lt;/p&gt;
                    &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-29-programming-challenges-live/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                    &lt;p&gt;This episode was streamed live on Sunday, December 6 2020.  &lt;a href=&#34;https://youtu.be/s7UDMUALBxU&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/12-6-20-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-5&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-5&#34; &gt;&lt;div id=&#34;pgc-820-5-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-5-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;10&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-5-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-5-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;11&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 28 - &#39;Saving&#39; the Day&lt;/h3&gt;
                &lt;p&gt;Doncha hate it when you do a bunch of calculations, download a bunch of data, or generate a ton of useful python objects, only for them to vanish when your program ends? Wouldn&#39;t it be nice if there was a way to preserve data on some kind of physical media in-between program runs, so you could save and reuse data? Or even make use of data that other people had created before? If only...&lt;/p&gt;
                &lt;p&gt;Is reading and writing data from files the ~sexiest~ thing you can do with code? No. Is it one of the most useful? Oh yeah. We&#39;ll look at:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Reading and writing plain text in files&lt;/li&gt;
                &lt;li&gt;Reading and writing structured data using JSON&lt;/li&gt;
                &lt;li&gt;Reading and writing raw python objects using Pickle&lt;/li&gt;
                &lt;li&gt;Strategies to avoid re-generating data when not necessary&lt;/li&gt;
                &lt;li&gt;How to avoid using too much web data my caching locally&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-28-saving-the-day/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was streamed live on November 22, 2020. &lt;a href=&#34;https://youtu.be/Hpm1Vzw8a3o&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/11-22-20-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-6&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-6-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-6-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;12&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-6-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-6-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;13&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 27 - Graphical User Interfaces&lt;/h3&gt;
                &lt;p&gt;Sick and tired of typing? Bored of button mashing? Tucked out by using the terminal? What if you could interact with your programs using a graphical user interface you designed yourself? No more of that boring old typing-everything-out style of interaction. Now, we&#39;ve got mice!&lt;/p&gt;
                &lt;p&gt;This week, we&#39;ll look at using TK/TKinter to build simple graphical interfaces to underlying Python programs.&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Topics Include:
                &lt;ul&gt;
                &lt;li&gt;The structure of a TKinter GUI program&lt;/li&gt;
                &lt;li&gt;Various TKinter widgets&lt;/li&gt;
                &lt;li&gt;Layering a TKinter program over your existing code&lt;/li&gt;
                &lt;/ul&gt;
                &lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-27graphical-user-interfaces/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was streamed live on Sunday, November 8 2020. &lt;strong&gt;&lt;a href=&#34;https://youtu.be/Hxfx2jl8vn4&#34;&gt;The full episode is archived on YouTube.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;p&gt;&amp;nbsp;&lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/11-8-20-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-7&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-7&#34; &gt;&lt;div id=&#34;pgc-820-7-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-7-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;14&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-7-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-7-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;15&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;div class=&#34;w-full project-text&#34;&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;Episode 26 - Pumpkin Pi&lt;/h3&gt;
                    &lt;p&gt;Jinkies! What&#39;s that over there? It looks like a Raspberry Pi... but headless! Let&#39;s get out of here!&lt;/p&gt;
                    &lt;p&gt;No worries gang, it&#39;s just our regular old Raspberry Pi python programs in a mask. This week, we&#39;ll built a spooky Halloween prop, incorporating some of the skills we&#39;ve learned so far. We&#39;ll drive a couple of servo motors, some LEDs for the eyes, playback sound, and link it all to the internet so we can tell when the sun goes down and things should get spooky.&lt;/p&gt;
                    &lt;ul&gt;
                    &lt;li&gt;Topics Include:
                    &lt;ul&gt;
                    &lt;li&gt;Sound Playback&lt;/li&gt;
                    &lt;li&gt;Sunset/Sunrise API&lt;/li&gt;
                    &lt;li&gt;The polling loop&lt;/li&gt;
                    &lt;li&gt;Multitasking&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-25-object-oriented-programming-2/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                    &lt;p&gt;This episode was streamed live on Sunday, October 24 2020. &lt;a href=&#34;https://youtu.be/OoGLiHDOvKk&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube&lt;/strong&gt;.&lt;/a&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/Pumpkin-Pi-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-8&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-8-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-8-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;16&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-8-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-8-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;17&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 25 - Object Oriented Programming&lt;/h3&gt;
                &lt;p&gt;What is an object? Is it just a list of numbers, strings, and data? Not at all - each thing has its own unique behavior, identity, its core, its platonic ideal of &#34;thing&#34;-ness. And we can represent the true nature of each thing by using Object Oriented Programming approaches.&lt;/p&gt;
                &lt;p&gt;Too abstract? Yeah maybe. Come join us for this week&#39;s lesson, I promise things will make more sense.&lt;/p&gt;
                &lt;p&gt;Topics Include:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Python classes&lt;/li&gt;
                &lt;li&gt;Using existing classes&lt;/li&gt;
                &lt;li&gt;Creating our own classes and instances&lt;/li&gt;
                &lt;li&gt;Using classes to organize behavior&lt;/li&gt;
                &lt;li&gt;Making a simple game with PyGame and OOP&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-25-object-oriented-programming/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was streamed live on Sunday, October 11 2020.  &lt;strong&gt;&lt;a href=&#34;https://youtu.be/IHdAHau7i7w&#34;&gt;The full episode is archived on YouTube.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;p&gt;&amp;nbsp;&lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/Untitled-1-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-9&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-9&#34; &gt;&lt;div id=&#34;pgc-820-9-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-9-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;18&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-9-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-9-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;19&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;div class=&#34;w-full project-text&#34;&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;Episode 24 - Visual Displays&lt;/h3&gt;
                    &lt;p&gt;Some get into programming computers to look at data on a chart, but let&#39;s be real - we want to make shiny things in lots of pretty colors! Today we&#39;re looking at how to use a fundamental graphics library to make visual displays in Python on the Raspberry Pi.&lt;/p&gt;
                    &lt;p&gt;Topics Include:&lt;/p&gt;
                    &lt;ul&gt;
                    &lt;li&gt;The PyGame library&lt;/li&gt;
                    &lt;li&gt;Drawing to the Screen&lt;/li&gt;
                    &lt;li&gt;Primative objects (lines, rectangles, circles)&lt;/li&gt;
                    &lt;li&gt;Including images&lt;/li&gt;
                    &lt;li&gt;The perpetual loop&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-24-visual-displays-in-python/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                    &lt;p&gt;This episode was live on Sunday, September 27 2020. &lt;a href=&#34;https://youtu.be/qPLjllAOBCY&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/hqdefault-436x272.jpg&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-10&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-10-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-10-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;20&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-10-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-10-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;21&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 23 - Raspberry Pi and the Internet&lt;/h3&gt;
                &lt;p&gt;One computer isn&#39;t cool. You know what&#39;s cool? A billion computers. And a few million other computers to connect them together. This week, we&#39;ll continue delving into programming on the Raspberry Pi with Python, and how we can connect to the internet to receive data, scrape websites, and influence our programs with online data.&lt;/p&gt;
                &lt;p&gt;Topics Include:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Getting web data with the Requests library&lt;/li&gt;
                &lt;li&gt;Parsing HTML using Beautiful Soup&lt;/li&gt;
                &lt;li&gt;Python Dictionaries and Sets&lt;/li&gt;
                &lt;li&gt;API&#39;s - what are they and how can we use them?&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-23-raspberry-pi-and-the-internet/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was live on Sunday, September 13 2020. be &lt;strong&gt;&lt;a href=&#34;https://youtu.be/T-slrVATN1w&#34;&gt;The full episode is archived on YouTube.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;p&gt;&amp;nbsp;&lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/StreamThumb-9-13-20-768x432.png  &#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-11&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-11&#34; &gt;&lt;div id=&#34;pgc-820-11-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-11-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;22&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-11-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-11-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;23&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;div class=&#34;w-full project-text&#34;&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;Episode 22 - GPIO: Inputs and Outputs&lt;/h3&gt;
                    &lt;p&gt;So the Raspberry Pi is just a computer, right? A nice cheap computer, but just a computer... except this computer makes it really easy to tap into low-level GPIO interface lines to respond to buttons and switches and show its state on outputs like LEDs and speakers.&lt;/p&gt;
                    &lt;p&gt;This week, we&#39;ll continue delving into programming on the Raspberry Pi with Python to make things blink, flash, and respond.&lt;/p&gt;
                    &lt;p&gt;Topics Include:&lt;/p&gt;
                    &lt;ul&gt;
                    &lt;li&gt;-GPIO Core Concepts:
                    &lt;ul&gt;
                    &lt;li&gt;Voltages&lt;/li&gt;
                    &lt;li&gt;Currents&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/li&gt;
                    &lt;li&gt;Flashing, blinking, and dimming external LEDs&lt;/li&gt;
                    &lt;li&gt;Responding to button and switch inputs&lt;/li&gt;
                    &lt;li&gt;Python tidbits like:
                    &lt;ul&gt;
                    &lt;li&gt;importing other modules&lt;/li&gt;
                    &lt;li&gt;user-defined functions&lt;/li&gt;
                    &lt;li&gt;The time, gpiozero, sys, and random modules&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-22-inputs-and-outputs/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                    &lt;p&gt;This episode was streamed live on August 30, 2020.  &lt;strong&gt;&lt;a href=&#34;https://youtu.be/tEsSfkqacZ4&#34;&gt;The full episode is archived on YouTube.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/Thumb-8-30-20-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-12&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-12-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-12-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;24&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-12-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-12-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;25&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;div class=&#34;w-full project-text&#34;&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;Episode 21 - Python and Pi&lt;/h3&gt;
                    &lt;p&gt;There are many ways of getting your Raspberry Pi to do things on its own - different languages, different scripts, different schedulers. Let&#39;s introduce a simple but powerful language - Python - that will form the core of our interactivity on our devices.&lt;/p&gt;
                    &lt;p&gt;Topics Include:&lt;/p&gt;
                    &lt;ul&gt;
                    &lt;li&gt;What is Python?&lt;/li&gt;
                    &lt;li&gt;Programming in Python on the Pi&lt;/li&gt;
                    &lt;li&gt;Basic program structure and commands&lt;/li&gt;
                    &lt;li&gt;Interpreted vs. Compiled Languages&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-21-python-and-pi/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                    &lt;p&gt;This episode was live on Sunday, August 16 2020. &lt;strong&gt;&lt;a href=&#34;https://youtu.be/vMsT8uE9XEQ&#34;&gt;The full episode is archived on YouTube.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/thumb-8-16-19-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
                &lt;p&gt;&amp;nbsp;&lt;/p&gt;
                &lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-13&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-13&#34; &gt;&lt;div id=&#34;pgc-820-13-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-13-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;26&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-13-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-13-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;27&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;div class=&#34;w-full project-text&#34;&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;Episode 20 - What is Raspberry Pi?&lt;/h3&gt;
                    &lt;p&gt;The Raspberry Pi is the most popular single board computer, and has opened up an enormous landscape of the kinds of projects that are accessible to hobbyists, robotics, educators, and tinkerers. But what exactly is a Raspberry Pi? And where do you get started with one? That&#39;s where we&#39;ll dive in this week, at the very beginning.&lt;/p&gt;
                    &lt;p&gt;Topics Include:&lt;/p&gt;
                    &lt;ul&gt;
                    &lt;li&gt;What is a Raspberry Pi?&lt;/li&gt;
                    &lt;li&gt;What is it useful for?&lt;/li&gt;
                    &lt;li&gt;How is it different from Arduino?&lt;/li&gt;
                    &lt;li&gt;Where to start?&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-20-what-is-raspberry-pi/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                    &lt;p&gt;This episode was live on Sunday, August 8 2020. The  &lt;a href=&#34;https://youtu.be/lm3t5EfN-rU&#34;&gt;&lt;strong&gt;full stream is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/PiThumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-14&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;flex-start&amp;quot;}&#34;  data-ratio=&#34;1&#34;  data-ratio-direction=&#34;right&#34; &gt;&lt;div id=&#34;pgc-820-14-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;1&#34; &gt;&lt;div id=&#34;panel-820-14-0-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child&#34; data-index=&#34;28&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;siteorigin-widget-tinymce textwidget&#34;&gt;
        &lt;h1 class=&#34;post-h1&#34;&gt;Introduction to Arduino&lt;/h1&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;panel-820-14-0-1&#34; class=&#34;so-panel widget widget_sow-editor panel-last-child&#34; data-index=&#34;29&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;siteorigin-widget-tinymce textwidget&#34;&gt;
        &lt;p&gt;Over the 10+ years I&#39;ve been working with Arduinos, the most common questions I&#39;ve gotten are: what is it, what can it do, and how do I get started? In this series of livestreams, we&#39;ll start from the very basics of what an Arduino is and what it&#39;s useful for, and work through useful inputs, outputs, and programming structures. Newcommers should find plenty of information to get them started and inspired, and hopefully long-time users learn something new.&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-15&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-15&#34; &gt;&lt;div id=&#34;pgc-820-15-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-15-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;30&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-15-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-15-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;31&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 19 - Fantastic Parts and Where to Find Them&lt;/h3&gt;
                &lt;p&gt;How do you find just the right part for your electronics project? What even is the right part? And where can you find it? This week, we&#39;ll be exploring a to of electronics suppliers, from those who focus on hobbyist materials to professional electronics vendors,. We&#39;ll look at the various product lines, Arduino variants, sensor families, and so on that they bring to the market, so you can find the best parts for you.&lt;/p&gt;
                &lt;p&gt;Topics Include:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Hobbyist Suppliers&lt;/span&gt;&lt;/li&gt;
                &lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Overseas Internet Suppliers&lt;/span&gt;&lt;/li&gt;
                &lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Warehouse Suppliers&lt;/span&gt;&lt;/li&gt;
                &lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Professional Hardware Suppliers&lt;/span&gt;&lt;/li&gt;
                &lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Professional Parts Suppliers&lt;/span&gt;&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-19-fantastic-parts-and-where-to-find-them/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was streamed live on Sunday, July 26th 2020.  &lt;a href=&#34;https://www.youtube.com/watch?v=m5M6rpmXJJo&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/7-26-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-16&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-16-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-16-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;32&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-16-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-16-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;33&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 18 - Timers&lt;/h3&gt;
                &lt;p&gt;The ATmega328 in a typical Arduino has three powerful Timers that allow us to schedule events, manipulate time, and keep ourselves on track. In fact, we&#39;ve been using them all along in things like AnalogWrite and Delay. This week, we&#39;ll unlock the power of Timers and Timer Interrupts.&lt;/p&gt;
                &lt;p&gt;Topics Include:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Timers in the ATmega328&lt;/li&gt;
                &lt;li&gt;Timer Interrupts and Configuration&lt;/li&gt;
                &lt;li&gt;Timers and built-in Functions (AnalogWrite, Tone, Millis, Delay, Servo)&lt;/li&gt;
                &lt;li&gt;Using timers to build new code&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-18-timers/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was streamed live on Sunday, July 19 2020. &lt;a href=&#34;https://youtu.be/e0cF5v9Pnyo&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/7-19-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-17&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-17&#34; &gt;&lt;div id=&#34;pgc-820-17-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-17-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;34&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-17-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-17-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;35&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 17 - Control Registers&lt;/h3&gt;
                &lt;p&gt;The code we write for an Arduino is ultimately meant to get certain bits and bytes into the microprocessor so that it does what we want. This week, we&#39;ll continue to peek behind the curtain and see how standard Arduino code represents modifications to various places in the microprocessor&#39;s memory, and how we can directly access those places to gain faster, tighter, more precise control of the Arduino.&lt;/p&gt;
                &lt;p&gt;Topics Include:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;The Three Types of Memory&lt;/li&gt;
                &lt;li&gt;What is a register?&lt;/li&gt;
                &lt;li&gt;Register Access&lt;/li&gt;
                &lt;li&gt;Bitwise Math&lt;/li&gt;
                &lt;li&gt;Introduction to Timers?&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-17-control-registers/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was streamed live on Sunday, July 12th 2020.  &lt;a href=&#34;https://youtu.be/O2JppZIh6Cw&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/7-12-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-18&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-18-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-18-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;36&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-18-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-18-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;37&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 16 - Hardware Interrupts&lt;/h3&gt;
                &lt;p&gt;Writing interactive code without interrupts can be like waiting for a letter to come - you have to keep checking the mailbox to see if any new info has arrived. Interrupts are like an alarm on your mailbox that draws your attention so you don&#39;t need to keep checking. They&#39;re powerful, useful, and a little finicky - they&#39;ll be our subject this week.&lt;/p&gt;
                &lt;p&gt;Topics Include:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Interrupts&lt;/li&gt;
                &lt;li&gt;ISRs&lt;/li&gt;
                &lt;li&gt;The &#39;volatile&#39; quantifier&lt;/li&gt;
                &lt;li&gt;Timers&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-16-interrupts/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was live on Monday, July 6th 2020. &lt;a href=&#34;https://youtu.be/QSuMkkyTpvA&#34;&gt;The full episode is archived on YouTube.&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/7-6-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-19&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-19&#34; &gt;&lt;div id=&#34;pgc-820-19-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-19-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;38&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-19-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-19-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;39&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 15 - Long Distance Communication&lt;/h3&gt;
                &lt;p&gt;We&#39;ve got a couple ways to pass signals between Arduinos sitting next to each other on the workbench now, or even 50&#39; away via a wireless dongle. But what if you need to get signals from 1000&#39; away or more?&lt;/p&gt;
                &lt;p&gt;That&#39;s where a robust wired system based on RS485 can help. As a physical protocol, RS485 won&#39;t get you there alone - you&#39;ll need a communications protocol built on top of it to actually pass data. This week, we&#39;ll look at DMX, the most common control protocol in the entertainment lighting field, how it relates to DMX , and how you can use both to pass messages long distances.&lt;/p&gt;
                &lt;p&gt;Topics Include:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;RS485 fundamentals&lt;/li&gt;
                &lt;li&gt;The OSI Model&lt;/li&gt;
                &lt;li&gt;DMX (Digital Multiplex)&lt;/li&gt;
                &lt;li&gt;Network Topologies&lt;/li&gt;
                &lt;li&gt;Singalling and Addressing schemes&lt;/li&gt;
                &lt;li&gt;Transmission lines, impedance, and ternimation&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-15-long-distance-signals/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was streamed live on Sunday, June 28 2020. &lt;a href=&#34;https://youtu.be/PB7s1CzWkh0&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/6-28-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-20&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-20-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-20-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;40&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-20-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-20-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;41&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 14 - Wireless Signals&lt;/h3&gt;
                &lt;p&gt;Why wires? Not not... not wires? This week, we&#39;ll look at ways of passing simple wireless information between two or more Arduinos.&lt;/p&gt;
                &lt;p&gt;Topics include:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Radio and Wireless fundamentals&lt;/li&gt;
                &lt;li&gt;ASK/OOK Radio Signals&lt;/li&gt;
                &lt;li&gt;The Radiohead library that sends wireless information&lt;/li&gt;
                &lt;li&gt;*Pointers&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-14-wireless-signals/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was streamed live on Sunday, June 21 2020. &lt;a href=&#34;https://youtu.be/QQYhC7xHG_s&#34;&gt;&lt;strong&gt;iThe full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/6-21-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-21&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-21&#34; &gt;&lt;div id=&#34;pgc-820-21-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-21-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;42&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-21-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-21-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;43&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 13 - Creating a Printed Circuit Board&lt;/h3&gt;
                &lt;p&gt;Hand soldering a prototype is all well and good. Heck, making two or three of a thing isn&#39;t too bad. But what if you need ten widgets, all wired together the same way? Or a hundred? Or you&#39;re using parts too small to be wired to perfboard? These are situations where an inexpensive Printed Circuit Board (PCB) comes in handy.&lt;/p&gt;
                &lt;p&gt;PCBs are easier to design, order, and use than ever! In this session we&#39;ll look at:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Schematic Capture (getting your circuit design into the computer)&lt;/li&gt;
                &lt;li&gt;Circuit board layout&lt;/li&gt;
                &lt;li&gt;Creating custom parts and part footprints from a datasheet&lt;/li&gt;
                &lt;li&gt;Ordering a circuit board from an online board house&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-13-creating-a-printed-circuit-board/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was live on Sunday, June 14th 2020. &lt;a href=&#34;https://youtu.be/6_772Sg5K8U&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/6-14-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-22&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-22-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-22-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;44&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-22-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-22-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;45&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 12 - Soldering&lt;/h3&gt;
                &lt;p&gt;Getting one thing to stick to itself? Not so hard. Getting two bits of metal to stick together in a way that conducts electricity? Just a little bit harder. So this week, let&#39;s do it together. Let&#39;s look at soldering.&lt;/p&gt;
                &lt;p&gt;Topics include:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Hand soldering skills&lt;/li&gt;
                &lt;li&gt;Types and mixes of solder&lt;/li&gt;
                &lt;li&gt;Soldering iron and tip species&lt;/li&gt;
                &lt;li&gt;Soldering thru-hole and surface-mount parts&lt;/li&gt;
                &lt;li&gt;Soldering safety&lt;/li&gt;
                &lt;li&gt;Hot air and soldering rework&lt;/li&gt;
                &lt;li&gt;Desoldering with hot air, solder braid, and solder suckers&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-12-soldering/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was live on Sunday, June 7th 2020.e &lt;a href=&#34;https://youtu.be/WHWGS7AI-Pw&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/6-7-Thumb-Bash-768x432.jpg&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-23&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-23&#34; &gt;&lt;div id=&#34;pgc-820-23-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-23-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;46&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-23-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-23-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;47&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 11 - Making it Permanent&lt;/h3&gt;
                &lt;p&gt;So you&#39;ve made a cool thing with an Arduino Uno that works fine on the workbench. But when you try to install it somewhere for long term use - wires start falling out, components come out of the breadboard, it&#39;s a big ole mess. There must be a better way to make Arduino projects more permanent. We&#39;ll look at several topics in this vein, including:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Working with sodler-able perfboard/protoboard&lt;/li&gt;
                &lt;li&gt;Transferring the Microprocessor itself from the Arduino to a breadboard/protoboard&lt;/li&gt;
                &lt;li&gt;Programming microprocessors without the Arduino itself&lt;/li&gt;
                &lt;li&gt;Working with smaller/cheaper microprocessors (ATMEGA, ATTINY) to cut down pricing on large-scale projects&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-arduino-11-making-it-permanent/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This was live on Sunday, May 31st, 2020.  &lt;strong&gt;&lt;a href=&#34;https://youtu.be/kXcBsnG8epE&#34;&gt;The full episode is archived on YouTube.&lt;/a&gt;.&lt;/strong&gt;&lt;/p&gt;
                &lt;p&gt;&amp;nbsp;&lt;/p&gt;
                &lt;p&gt;&amp;nbsp;&lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/5-31-20-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-24&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-24-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-24-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;48&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-24-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-24-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;49&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;div class=&#34;w-full project-text&#34;&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;Episode 10 - Write Better Code&lt;/h3&gt;
                    &lt;p&gt;The joy of the Arduino is that you can get the thing running while writing really bad code. Heck, you can make it do really interesting things while writing really bad code. But what if... and hear me out... the code.... was good?&lt;/p&gt;
                    &lt;p&gt;This week&#39;s stream will focus on coding strategies and common coding patterns, including:&lt;/p&gt;
                    &lt;ul&gt;
                    &lt;li&gt;Arrays are Your Friend&lt;/li&gt;
                    &lt;li&gt;Delta Time avoids delay()&lt;/li&gt;
                    &lt;li&gt;Switching Program MODES&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-arduino-10-write-better-code/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                    &lt;p&gt;This episode was live on May 24th, 2020. &lt;a href=&#34;https://youtu.be/i7fFieY7mFA&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/5-24-Thumb-Correct-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-25&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-25&#34; &gt;&lt;div id=&#34;pgc-820-25-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-25-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;50&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-25-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-25-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;51&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 9 - Batteries&lt;/h3&gt;
                &lt;p&gt;Being plugged into the wall is great and all, but wouldn&#39;t it be nice if your project could come with you? This week&#39;s stream will focus on batteries - using them with Arduino, what types have what ramifications for your project, and what do you need to watch out for. We&#39;ll focus on:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Basics of using batteries with Arduino&lt;/li&gt;
                &lt;li&gt;Different types of batteries and battery chemistries&lt;/li&gt;
                &lt;li&gt;Using voltage regulators&lt;/li&gt;
                &lt;li&gt;Using voltage dividers&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-arduino-9-batteries/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was live on Sunday, May 10th. &lt;a href=&#34;https://youtu.be/riuVM_Xqi_I&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/5-17-20-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-26&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-26-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-26-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;52&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-26-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-26-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;53&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 8 - Remote Control with Infrared&lt;/h3&gt;
                &lt;p&gt;Are you still actually physically touching your Arduino creations to control them? Walking across the room to adjust them like a caveman? Harness the power of infrared remote controls to control your circuits from a distance - and how to turn things around and control your TV from your Arduino.&lt;/p&gt;
                &lt;p&gt;This week&#39;s stream will continue our look at Arduino, the most popular microcontroller on the planet. We&#39;ll focus on using infrared communications, both to control the Arduino from a remote and using the Arduino as a remote to control other things (computers, TV&#39;s, LED Candles, etc.)&lt;/p&gt;
                &lt;p&gt;Topics Include&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Using the IRLib library to decode infrared messages from a remote&lt;/li&gt;
                &lt;li&gt;Responding to remote messages to do things within your Arduino sketch&lt;/li&gt;
                &lt;li&gt;Using IRLib to send messages to other IR-controlled things&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-arduino-8-remote-control-with-infrared/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This was live on Sunday, May 10th. &lt;a href=&#34;https://youtu.be/NvXuO7dqthQ&#34;&gt;&lt;strong&gt;The full episode is archived on YouTube.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/5-10-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-27&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-27&#34; &gt;&lt;div id=&#34;pgc-820-27-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-27-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;54&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-27-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-27-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;55&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 7 - Text Displays and Multicolor LEDs&lt;/h3&gt;
                &lt;p&gt;What if your Arduino project could talk back to you, without having to hook it up to a serial console your computer? Or maybe you want to use a little multicolor LED to tell you the status of how you&#39;re Arduino&#39;s doing - or a lot of LEDs to make a psychedelic light show. This week, we&#39;re adding dot-matrix text displays and RGB/Bi-color LEDs to our Arduino toolbox, focusing on:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Using the LiquidCrystal library to drive LCD displays&lt;/li&gt;
                &lt;li&gt;Strategies for working with text and cursors&lt;/li&gt;
                &lt;li&gt;Controlling multicolor LEDs&lt;/li&gt;
                &lt;li&gt;Tips for working with color and color values&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-arduino-7-text-displays-and-multicolor-leds/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was live on Sunday, May 3rd. &lt;strong&gt;&lt;a href=&#34;https://youtu.be/mlgw8CUWLrY&#34;&gt;The full recording is archived on YoutTube.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
                &lt;p&gt;&amp;nbsp;&lt;/p&gt;
                &lt;p&gt;&amp;nbsp;&lt;/p&gt;
                &lt;/div&gt;
                &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/5-3-20-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
                &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-28&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-28-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-28-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;56&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-28-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-28-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;57&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
                &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
            &lt;div class=&#34;w-full project-text&#34;&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;Episode 6 - Putting it Together&lt;/h3&gt;
                    &lt;p&gt;After a couple of very hardware-centric weeks, this week&#39;s focus will be on programming. Specifically, how do we take this individual skills we&#39;ve built up - reading a button or switch, lighting up an LED or turning a motor - and string them together into our very first game?&lt;/p&gt;
                    &lt;p&gt;Topics Include&lt;/p&gt;
                    &lt;ul&gt;
                    &lt;li&gt;&#34;Returning&#34; from methods&lt;/li&gt;
                    &lt;li&gt;Pseudocode and code planning&lt;/li&gt;
                    &lt;li&gt;Code encapsulation and breaking down high level concepts&lt;/li&gt;
                    &lt;li&gt;A little more hardware, including:
                    &lt;ul&gt;
                    &lt;li&gt;Shift Registers and their function in driving lots of outputs&lt;/li&gt;
                    &lt;li&gt;ShiftOut() for sending data to shift-registers&lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;/li&gt;
                    &lt;/ul&gt;
                    &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-arduino-6-your-first-game/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                    &lt;p&gt;This episode was &lt;a href=&#34;https://youtu.be/DakKcfluyqU&#34;&gt;l&lt;/a&gt;&lt;a href=&#34;https://youtu.be/DakKcfluyqU&#34;&gt;ive on YouTube on Sunday, April&lt;/a&gt;&lt;a href=&#34;https://youtu.be/DakKcfluyqU&#34;&gt; 26.&lt;/a&gt;&lt;/p&gt;
            &lt;/div&gt;
            &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/4-26-Thumb-2-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
        &lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-29&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-29&#34; &gt;&lt;div id=&#34;pgc-820-29-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-29-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;58&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-29-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-29-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;59&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 5 - Transistors and FETs&lt;/h3&gt;
                &lt;p&gt;Feeling a little limited by the 5 Volts and 20 milliAmps that the Arduino can provide? In this Sunday&#39;s stream, we&#39;ll incorporate transistors and FETs into our toolbox, to allow for driving higher power loads. We&#39;ll look at topics like:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;What are bipolar transistors?&lt;/li&gt;
                &lt;li&gt;What are FETs?&lt;/li&gt;
                &lt;li&gt;How to select the right transistor or FET for your product?&lt;/li&gt;
                &lt;li&gt;Using transistors and FETs to drive high power/high voltage loads, including:
                &lt;ul&gt;
                &lt;li&gt;LED tape&lt;/li&gt;
                &lt;li&gt;Lamps&lt;/li&gt;
                &lt;li&gt;Motors&lt;/li&gt;
                &lt;/ul&gt;
                &lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/electronics-bash-arduino-5-transistors-and-fets/&#34;&gt;Codeand Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was live on Sunday, April 19 2020. &lt;a href=&#34;https://youtu.be/aeR3IrRhJxY&#34;&gt;The full stream is archived on YouTube&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/4-19-2020-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-30&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-30-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-30-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;60&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-30-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-30-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;61&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 4 - Electricity Fundamentals&lt;/h3&gt;
                &lt;p&gt;This week we&#39;re going back to basics, diving into fundamental concepts like:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Voltage&lt;/li&gt;
                &lt;li&gt;Resistance&lt;/li&gt;
                &lt;li&gt;Current&lt;/li&gt;
                &lt;li&gt;Power&lt;/li&gt;
                &lt;li&gt;&lt;em&gt;How electricity do&lt;/em&gt;&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/arduino-4-electricity-fundamentals/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was live on YouTube on Sunday, April 12.  &lt;a href=&#34;https://youtu.be/KiQKojmzBRs&#34;&gt;The full stream is archived on YouTube.&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/4-12-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-31&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-31&#34; &gt;&lt;div id=&#34;pgc-820-31-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-31-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;62&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-31-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-31-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;63&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 3 - Servos and Steppers&lt;/h3&gt;
                &lt;p&gt;This week&#39;s stream focused on motion control, including:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Stepper motor control&lt;/li&gt;
                &lt;li&gt;Serial control&lt;/li&gt;
                &lt;li&gt;The DO...WHILE loop&lt;/li&gt;
                &lt;li&gt;randomness and the random() function&lt;/li&gt;
                &lt;/ul&gt;
                &lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;../../electronics-bash/arduino-3-steppers-and-servos/&#34;&gt;Code and Circuit Diagrams here!&lt;/a&gt;&lt;/h3&gt;
                &lt;p&gt;This episode was live on YouTube on Sunday, April 5.  &lt;a href=&#34;https://youtu.be/8rpLSXYDi6g&#34;&gt;The full stream is archived on YouTube.&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/4-5-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-32&#34;  class=&#34;panel-grid panel-no-style&#34;  data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div id=&#34;pgc-820-32-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47284656444607&#34; &gt;&lt;div id=&#34;panel-820-32-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;64&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-32-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52715343555393&#34; &gt;&lt;div id=&#34;panel-820-32-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;65&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 2 - Flashes Beep and Boops&lt;/h3&gt;
                &lt;p&gt;Picking up where we left off last time, this stream covered&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;Analog Output&lt;/li&gt;
                &lt;li&gt;The Serial console, input and output&lt;/li&gt;
                &lt;li&gt;The basics of Casting variables (String(), Int)&lt;/li&gt;
                &lt;li&gt;Analog Input&lt;/li&gt;
                &lt;li&gt;Potentiometers&lt;/li&gt;
                &lt;li&gt;The map() function&lt;/li&gt;
                &lt;li&gt;Buzzers and the tone() function&lt;/li&gt;
                &lt;/ul&gt;
                &lt;p&gt;This episode was live on Sunday, March 29 2020. &lt;a href=&#34;https://www.youtube.com/watch?v=7XJ0XWCJCXQ&#34;&gt;The full recording is available on YouTube.&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2 &#34;&gt;&lt;img src=&#34;thumbs/3-29-2020-Thumb-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pg-820-33&#34;  class=&#34;panel-grid panel-has-style&#34;  data-style=&#34;{&amp;quot;row_css&amp;quot;:&amp;quot;background: #eeeeee&amp;quot;,&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;,&amp;quot;cell_alignment&amp;quot;:&amp;quot;center&amp;quot;}&#34; &gt;&lt;div class=&#34;panel-row-style panel-row-style-for-820-33&#34; &gt;&lt;div id=&#34;pgc-820-33-0&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.47212140128436&#34; &gt;&lt;div id=&#34;panel-820-33-0-0&#34; class=&#34;so-panel widget widget_sow-image panel-first-child panel-last-child&#34; data-index=&#34;66&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;/div&gt;&lt;/div&gt;&lt;div id=&#34;pgc-820-33-1&#34;  class=&#34;panel-grid-cell&#34;  data-weight=&#34;0.52787859871564&#34; &gt;&lt;div id=&#34;panel-820-33-1-0&#34; class=&#34;so-panel widget widget_sow-editor panel-first-child panel-last-child&#34; data-index=&#34;67&#34; data-style=&#34;{&amp;quot;background_image_attachment&amp;quot;:false,&amp;quot;background_display&amp;quot;:&amp;quot;tile&amp;quot;}&#34; &gt;&lt;div class=&#34;so-widget-sow-editor so-widget-sow-editor-base&#34;&gt;
    &lt;div class=&#34;flex flex-col p-2 my-4 bg-gray-100 border-2 md:flex-row siteorigin-widget-tinymce textwidget project-line&#34;&gt;
        &lt;div class=&#34;w-full project-text&#34;&gt;
            &lt;h3 class=&#34;post-h3&#34;&gt;Episode 1 - Introductions and Basic I/O&lt;/h3&gt;
                &lt;p&gt;In the first episode of this streaming adventure, we covered:&lt;/p&gt;
                &lt;ul&gt;
                &lt;li&gt;What is Arduino? What can it do?&lt;/li&gt;
                &lt;li&gt;Software installation&lt;/li&gt;
                &lt;li&gt;Fundamentals of Arduino code (setup, loop)&lt;/li&gt;
                &lt;li&gt;Digital Input and Output&lt;/li&gt;
                &lt;li&gt;Introduction to Variables&lt;/li&gt;
                &lt;li&gt;Conditionals (if... then... else)&lt;/li&gt;
                &lt;li&gt;FOR loops&lt;/li&gt;
                &lt;li&gt;millis() and the basics of time&lt;/li&gt;
                &lt;/ul&gt;
                &lt;p&gt;This episode was streamed live on March 22, 2020. &lt;a href=&#34;https://www.youtube.com/watch?v=H7LOfnseQ7o&#34;&gt;The full recording is available on YouTube.&lt;/a&gt;&lt;/p&gt;
        &lt;/div&gt;
        &lt;div class=&#34;flex items-center w-auto rounded-md justify-evenly md:w-1/2&#34;&gt;&lt;img src=&#34;thumbs/3-22-2020-Thumb-3-768x432.png&#34; alt=&#34;The thumbnail image for this weeks class, as it appeared on YouTube.&#34;&gt;&lt;/div&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;p&gt;&amp;nbsp;&lt;/p&gt;
    &lt;/div&gt;
    &lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</description>
      &lt;
    </item>
    
  </channel>
</rss>