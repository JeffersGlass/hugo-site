<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jeff Glass</title>
    <link>https://jeff.glass/project/electronics-bash/ebash-pages/</link>
    <description>Recent content on Jeff Glass</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 03 Jan 2021 23:27:43 -0500</lastBuildDate><atom:link href="https://jeff.glass/project/electronics-bash/ebash-pages/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Electronics Bash - #30 - Regular Expressions</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb30/</link>
      <pubDate>Sun, 03 Jan 2021 23:27:43 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb30/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;As it turns out, computers like numbers, and humans like words. And teaching computers how to do words good, and understand which parts of words you want done, is hard. Regular expressions are a powerful cross-language tool for parsing and digesting text in a way that a computer can understand.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We&#39;ll look at:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Regular Expression Syntax&lt;/li&gt;
&lt;li&gt;Pattern Matching with Wildcards&lt;/li&gt;
&lt;li&gt;Using character classes to simplify expressions&lt;/li&gt;
&lt;li&gt;Parsing real motion sensor/temp/humidity data using Regexes&lt;/li&gt;
&lt;li&gt;Parsing Advent of Code input using regexes&lt;/li&gt;
&lt;li&gt;And more&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;This week had no slides.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Code&lt;/span&gt;&lt;/h3&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Hello World&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/dfd86950a8b899fcc54193cbfdd1cea5&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;FindIter&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/cff561b3b6b20faff09688ac60affa27&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Special Characters&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/477214b7e01a578392592db527ccd6ef&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Character Classes&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d174c6adf3e01687027f62c30b28fe04&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Wildcards&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/6f8fa6e05b189f367cef34b186a5cf1e&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Character Groups&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/647dccbec80a470def5e6a8ef4cf3033&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;AOC Day 18&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/8cf3a739a7088e5265587cac1897587c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Resources and Links&lt;/h4&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #29 - Programming Challenges Live</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb29/</link>
      <pubDate>Sat, 05 Dec 2020 15:23:35 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb29/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;No, I don&#39;t intend to light my code on fire... but then I didn&#39;t mean to set my circuit board on fire last week, and we saw how that turned out.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;The holidays are here, and with them, the annual Advent of Code challenge! This festive yuletide tradition presents a language-agnostic coding challenge for each of the first 25 days in December. This week, we&#39;ll use the first five challenges as an excuse to talk about problem solving, list comprehension, and iterables in Python. Then we&#39;ll try and solve the Day 6 challenge in real time! Fingers crossed!&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;If you want to read more about my process and thoughts for each of the days, check out the&lt;a href=&#34;https://jeff.glass/tag/codeadvent2020/&#34;&gt; daily incremental blog posts&lt;/a&gt; about all this year&#39;s challenges.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;This week had no slides.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Code&lt;/span&gt;&lt;/h3&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Day 1&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/e68d3c0541a2bb01833440d985bc30a4&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Day 2&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/7e97c17b46a2779e50b9005c27c26c95&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Day 3&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/9dbd5c3977a9ddaa59308001d55dd48a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Day 4&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/cf670f595c99db49b8564cc600ce26c6&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/de08f5f205eddaccbe56980f9b3d4d29&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Day 5&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/a233c4ef04fc5eb9422bebf8b0106770&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Day 6&lt;/h3&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;em&gt;To be written live!&lt;/em&gt;&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Resources and Links&lt;/h4&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #28 - &#39;Saving&#39; the Day</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb28/</link>
      <pubDate>Sun, 22 Nov 2020 18:24:05 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb28/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;Doncha hate it when you do a bunch of calculations, download a bunch of data, or generate a ton of useful python objects, only for them to vanish when your program ends? Wouldn&#39;t it be nice if there was a way to preserve data on some kind of physical media in-between program runs, so you could save and reuse data? Or even make use of data that other people had created before? If only...&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Is reading and writing data from files the &lt;em&gt;sexiest&lt;/em&gt; thing you can do with code? No. Is it one of the most useful? Oh yeah. We&#39;ll look at:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Reading and writing plain text in files&lt;/li&gt;
&lt;li&gt;Reading and writing structured data using JSON&lt;/li&gt;
&lt;li&gt;Reading and writing raw python objects using Pickle&lt;/li&gt;
&lt;li&gt;Strategies to avoid re-generating data when not necessary&lt;/li&gt;
&lt;li&gt;How to avoid using too much web data my caching locally&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XSCGv1GA0TqZyBLJIC2vE6mSLl3NhDBwvhX5iVlyLy0/edit?usp=sharing&#34;&gt;&lt;br/&gt;&lt;/a&gt;&lt;strong&gt;This week&#39;s class had no slides.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Code&lt;/span&gt;&lt;/h3&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;File-Helloworld&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/add684c8351dc591c2f459575851c6d5&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;With.py&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/e4413161de791113323efb1bc3aedf85&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Scrambled Read&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/814a097b04b72c07d4441e848a4e040c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Scrambled Tuples&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/70782b986b94c272c400244bf27a2307&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Pickle Save&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/033ea22cd983ca8744ad6358af2deb0c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Pickle Load&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/0f9eb2cd153a297000a6ae0cc72cdef0&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;JSON Save&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/9090645d7cd1140e5227def2f252f832&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;JSON Load&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/da4f37ca090343bc67988ed0e869dcd6&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Henry V&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/b2b157727697854eb091549c5a91a6f2&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;File Existence Test&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/1c2343d8d56d55253ee6986c57bfc72a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Resources and Links&lt;/h4&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #27 - Graphical User Interfaces</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb27/</link>
      <pubDate>Sun, 08 Nov 2020 03:07:49 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb27/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;Sick and tired of typing? Bored of button mashing? Tucked out by using the terminal? What if you could interact with your programs using a graphical user interface you designed yourself? This week, we&#39;ll look at using TK/TKinter to build simple graphical interfaces to underlying Python programs. &lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Topics Include:
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;The structure of a TKinter GUI program&lt;/li&gt;
&lt;li&gt;Various TKinter widgets&lt;/li&gt;
&lt;li&gt;Layering a TKinter program over your existing code&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XSCGv1GA0TqZyBLJIC2vE6mSLl3NhDBwvhX5iVlyLy0/edit?usp=sharing&#34;&gt;&lt;br/&gt;&lt;/a&gt;&lt;strong&gt;This week&#39;s class had no slides.&lt;/strong&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Code&lt;/span&gt;&lt;/h3&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Hello World&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/27b880df435c332ef5e2e16888662d49&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Frame&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/290cbf7ae042ed9c6425f8af45b8fee8&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Labels&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/e0f3e397ba756ec6cad8274272932f3d&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Button&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/bd072764c154559a9399388370a36315&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;More Buttons&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/72ef4375268e8e5b226fb083bf4935e4&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Font&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/4ab233ea89711fcc89ddf7c0c2787bf9&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Changing Properties&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/7307b47a46350f4b71a61f1ba35a1bcf&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Variables&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/08fe7438de7b1adb751c7b95e308209e&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Grid&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/bf094ca2309fd87c705638bf12c1f7b1&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Lots of Widgets&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/ba12d6bc5fc2cfabec93e8b6d2f85ebf&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Traffic Light&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/50ba8c7f8a9315a1b13162ba5390f0ff&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Resources and Links&lt;/h4&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #26 - Pumpkin Pi</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb26/</link>
      <pubDate>Sat, 24 Oct 2020 18:17:57 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb26/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;Jinkies! What&#39;s that over there? It looks like a Raspberry Pi... but headless! Let&#39;s get out of here!&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;No worries gang, it&#39;s just our regular old Raspberry Pi python programs in a mask. This week, we&#39;ll built a spooky Halloween prop, incorporating some of the skills we&#39;ve learned so far. We&#39;ll drive a couple of servo motors, some LEDs for the eyes, playback sound, and link it all to the internet so we can tell when the sun goes down and things should get spooky.&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Topics Include:
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Sound Playback&lt;/li&gt;
&lt;li&gt;Sunset/Sunrise API&lt;/li&gt;
&lt;li&gt;The polling loop&lt;/li&gt;
&lt;li&gt;Multitasking&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XSCGv1GA0TqZyBLJIC2vE6mSLl3NhDBwvhX5iVlyLy0/edit?usp=sharing&#34;&gt;&lt;br/&gt;&lt;/a&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/16nHRGNi0r36f_LcgVWdqjFu8wG2XcIcFm560RomTFJ8/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Schematic&lt;/span&gt;&lt;/h3&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;em&gt;This is the schematic we will be working from today, showing two LEDs connected to the Raspberry Pi via two MOSFETS, and two servo motors. Note that utility connections to the Pi, like keyboard, mouse, monitor, etc are not shown.&lt;/em&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/10/schematicPIR-1.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-3304 size-full post-img&#34; height=&#34;794&#34; src=&#34;schematicPIR-1.png&#34; width=&#34;1692&#34;/&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Code&lt;/span&gt;&lt;/h3&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Play Sound Test&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/c742dfe204a2c89e4559ee828fa46f3d&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LED Test&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/346f126e541c55233f0e20d320ce90a0&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Servo Test&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/66bd6fab908a47724fcfbea44288a3d2&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Sunrise Sunset API Test&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/90cb36ab7918529accbee8a53ad68a08&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;PIR Motion Sensor Test&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/db75ebebda4c81ffaa901582f544ba12&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;All Together Test&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/524baf12a5984a36af98a221e357c24a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Pumpkin Pi Basic&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/a6611e10af3ab4d9a2a27ef7445f2baa&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;PumpkinPi.py&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/b4c5d59578f6d7db972cd448dca0891f&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Resources and Links&lt;/h4&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #25- Object Oriented Programming</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb25/</link>
      <pubDate>Sat, 10 Oct 2020 14:10:27 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb25/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;What is an object? Is it just a list of numbers, strings, and data? Not at all - each thing has its own unique behavior, identity, its core, its platonic ideal of &#34;thing&#34;-ness. And we can represent the true nature of each thing by using Object Oriented Programming approaches.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Too abstract? Yeah maybe. Come join us for this week&#39;s lesson, I promise things will make more sense.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Python classes&lt;/li&gt;
&lt;li&gt;Using existing classes&lt;/li&gt;
&lt;li&gt;Creating our own classes and instances&lt;/li&gt;
&lt;li&gt;Using classes to organize behavior&lt;/li&gt;
&lt;li&gt;Making a simple game with PyGame and OOP&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XSCGv1GA0TqZyBLJIC2vE6mSLl3NhDBwvhX5iVlyLy0/edit?usp=sharing&#34;&gt;&lt;br/&gt;&lt;/a&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1wZmenBW8s39omjXk_Z7WKJM9hhXBxO5SfbhOVolq8JE/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Code&lt;/span&gt;&lt;/h3&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LED Minimum Code&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/afefe826cdf6620f897aec6ab450f314&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LED Annotated&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/abfdce24cde5bd145c204bb532a84ad0&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Requests: Hello World&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/384c508c40524601cc0f346b818107a4&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Pygame Basic Code&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/1a6a216b7bafc8bc3f42f4479f40d634&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Treasure&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d0871b5ec73c6ff89a5b40b7a0ddcfb6&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Treasure for Pygame&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/b66d601fd807c407ee5f26caca40dd58&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Resources and Links&lt;/h4&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #24- Visual Displays in Python</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb24/</link>
      <pubDate>Sun, 27 Sep 2020 20:15:19 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb24/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;Some get into programming computers to look at data on a chart, but let&#39;s be real - we want to make shiny things in lots of pretty colors! Today we&#39;re looking at how to use a fundamental graphics library to make visual displays in Python on the Raspberry Pi.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;The PyGame library&lt;/li&gt;
&lt;li&gt;Drawing to the Screen&lt;/li&gt;
&lt;li&gt;Primative objects (lines, rectangles, circles)&lt;/li&gt;
&lt;li&gt;Including images&lt;/li&gt;
&lt;li&gt;The perpetual loop&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1XSCGv1GA0TqZyBLJIC2vE6mSLl3NhDBwvhX5iVlyLy0/edit?usp=sharing&#34;&gt;&lt;br/&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Code&lt;/span&gt;&lt;/h3&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Pygame - Hello World&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/0d567e03e97e5dc3b5cff8aeb23addf0&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Pygame - Draw Circle&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/32f23a86fbe56483cedd2d39e6cd0ea2&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Pygame - Draw Rectangle&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/db0393ae4b6ded6ec79904068a5e08bb&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Pygame - Draw Primitives&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/408753eb92d00ce355256802ad3a6760&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Text&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/5b9790e08452e86aa9a2f223a45665de&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;First Movement&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d531b9b4493e490470b74abe05884627&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Keyboard Movement&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/430d103dab90f5242a67dac7f8a6affb&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Clock&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/8d98082d25f886f6566026c8a8d23fb6&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Mouse&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/fab718cf5661cb08bbcb81007e77c447&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Mouse Squares&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/451f57ee0a2d168e4cfa09e5dbf066c8&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Minesweeper Starter&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/65485c02c67d3e89f68298038d8c6dd3&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Resources and Links&lt;/h4&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #23- Raspberry Pi and the Internet</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb23/</link>
      <pubDate>Fri, 11 Sep 2020 00:34:56 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb23/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;One computer isn&#39;t cool. You know what&#39;s cool? A billion computers. &lt;br/&gt;And a few million other computers to connect them together.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week, we&#39;ll continue delving into programming on the Raspberry Pi with Python, and how we can connect to the internet to receive data, scrape websites, and influence our programs with online data.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Getting web data with the Requests library&lt;/li&gt;
&lt;li&gt;Parsing HTML using Beautiful Soup&lt;/li&gt;
&lt;li&gt;Python Dictionaries&lt;/li&gt;
&lt;li&gt;API&#39;s - what are they and how can we use them?&lt;/li&gt;
&lt;/ul&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li style=&#34;list-style-type: none;&#34;&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1d1s_s6DpyLb_blnCC_PKhdf5O93vWxgav6ujIJjjaBM/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Code&lt;/span&gt;&lt;/h3&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Requests - Hello World&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/384c508c40524601cc0f346b818107a4&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Beautiful Soup - Hello World&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/12015ee098ef43bdaafe59a642e9e465&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Beautiful Soup - Get List&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/f61731bd75061bfb179e3dbec197e2d3&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Beautiful Soup - Get E-Bash Links&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/03630df2d49dfed4957de1e93c874cde&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;CTA - Naive&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/463d5b78b7ea1a6f359ed30cc5c96dc4&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;CTA API Basic&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/027b960df39fef24e373256f0eadaeeb&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;CTA Arrivals&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/b2af700280110114b352f1dda0f60421&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;CTA Pygame Display&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d45610bb0b03366bee3d9117d73c6a77&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;YouTube Stats&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/1589951eba50d2b3a0aacbe47da7d914&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Resources and Links&lt;/span&gt;&lt;/h3&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #22- Inputs and Outputs</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb22/</link>
      <pubDate>Sun, 30 Aug 2020 02:37:04 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb22/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;So the Raspberry Pi is just a computer, right? A nice cheap computer, but just a computer... except this computer makes it really easy to tap into low-level GPIO interface lines to respond to buttons and switches and show its state on outputs like LEDs and speakers.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week, we&#39;ll continue delving into programming on the Raspberry Pi with Python to make things blink, flash, and respond.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;-GPIO Core Concepts:
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Voltages&lt;/li&gt;
&lt;li&gt;Currents&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Flashing, blinking, and dimming external LEDs&lt;/li&gt;
&lt;li&gt;Responding to button and switch inputs&lt;/li&gt;
&lt;li&gt;Python tidbits like:
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;importing other modules&lt;/li&gt;
&lt;li&gt;user-defined functions&lt;/li&gt;
&lt;li&gt;The time, gpiozero, sys, and random modules&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1BRCjhmZW7lA_2fMoq755pXWOXm-8Je3ICrlRdiHrD20/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Code&lt;/span&gt;&lt;/h3&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Led Minimum&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/7a64ab44154622dc40d2645deadd85a9&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;GPIO Basic&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/0f673f4b41429b3323efe8c626b27896&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;GPIO Dimming&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/87f1457e215fd410af224049d04e8f95&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;GPIO Button&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/de444e6b7ebf80dccb9adfa73c37a22b&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Bargraph&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/1cbf07a64ec5d6c3cb9119ee32e25256&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Bargraph Dimming&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/9997dfcf9ecb8ebfc6e88284538d8b95&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Reaction Game&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/2fa65651739f62f6cf3511b1a1073290&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Prime Numbers&lt;/h4&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/2c38eefc2b8464310fb0162803177b7c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;System Monitor&lt;/h3&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/2f00055507645a03431b1d8438268415&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Resources and Links&lt;/span&gt;&lt;/h3&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #21- Python and Pi</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb21/</link>
      <pubDate>Sun, 16 Aug 2020 00:44:12 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb21/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;There are many ways of getting your Raspberry Pi to do things on its own - different languages, different scripts, different schedulers. Let&#39;s introduce a simple but powerful language - Python - that will form the core of our interactivity on our devices.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;What is Python?&lt;/li&gt;
&lt;li&gt;Programming in Python on the Pi&lt;/li&gt;
&lt;li&gt;Basic program structure and commands&lt;/li&gt;
&lt;li&gt;Interpreted vs. Compiled Languages&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1LKgsGEqQ7vS_hmOF5KiKVSzMfejcmJA1bK8e1uKIOs8/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Resources and Links&lt;/span&gt;&lt;/h3&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Links and Resources:&lt;br/&gt;Raspberry Pi Homepage: &lt;a href=&#34;https://www.raspberrypi.org/&#34;&gt;https://www.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Raspberry Pi OS: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;MagPi Magazine: &lt;a href=&#34;https://magpi.raspberrypi.org/&#34;&gt;https://magpi.raspberrypi.org/&lt;/a&gt;&lt;br/&gt;Python Reference: &lt;a href=&#34;https://docs.python.org/3/tutorial/index.html&#34;&gt;https://docs.python.org/3/tutorial/index.html&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Getting Started:&lt;br/&gt;Raspberry Pi Imager: &lt;a href=&#34;https://www.raspberrypi.org/downloads/&#34;&gt;https://www.raspberrypi.org/downloads/&lt;/a&gt;&lt;br/&gt;Troubleshooting Guide: &lt;a href=&#34;https://www.raspberrypi.org/learning/troubleshooting-guide/&#34;&gt;https://www.raspberrypi.org/learning/troubleshooting-guide/&lt;/a&gt;&lt;br/&gt;Display Troubleshooting: &lt;a href=&#34;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&#34;&gt;https://www.raspberrypi.org/documentation/hardware/display/troubleshooting.md&lt;/a&gt;&lt;br/&gt;Starting w/o a Monitor: &lt;a href=&#34;https://bit.ly/33IvKCc&#34;&gt;https://bit.ly/33IvKCc&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Materials:&lt;br/&gt;Video on Raspberry Pi Supplies: &lt;a href=&#34;https://youtu.be/zeHvQZzkxbk&#34;&gt;https://youtu.be/zeHvQZzkxbk&lt;/a&gt;&lt;br/&gt;Raspberry Pi 4: &lt;a href=&#34;https://www.adafruit.com/product/4292&#34;&gt;https://www.adafruit.com/product/4292&lt;/a&gt;&lt;br/&gt;Power Supp;y: &lt;a href=&#34;https://amzn.to/2PiU6u6&#34;&gt;https://amzn.to/2PiU6u6&lt;/a&gt;&lt;br/&gt;MicroSD Card: &lt;a href=&#34;https://amzn.to/2EHfHdA&#34;&gt;https://amzn.to/2EHfHdA&lt;/a&gt;&lt;br/&gt;MicroSD Card Reader: &lt;a href=&#34;https://amzn.to/2EEmNiR&#34;&gt;https://amzn.to/2EEmNiR&lt;/a&gt;&lt;br/&gt;Micro HDMI to HDMI Cable: &lt;a href=&#34;https://amzn.to/3jWffYW&#34;&gt;https://amzn.to/3jWffYW&lt;/a&gt;&lt;br/&gt;Keyboard and Mouse: &lt;a href=&#34;https://amzn.to/39LRX3v&#34;&gt;https://amzn.to/39LRX3v&lt;/a&gt;&lt;br/&gt;Cat5 Cable: &lt;a href=&#34;https://amzn.to/2EzoJcm&#34;&gt;https://amzn.to/2EzoJcm&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Some of the above links are Amazon affiliate links - ordering products through these links provides a small amount of support to the channel at no cost to you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #20- What is Raspberry Pi</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb20/</link>
      <pubDate>Mon, 03 Aug 2020 17:40:08 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb20/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;The Raspberry Pi is the most popular single board computer, and has opened up an enormous landscape of the kinds of projects that are accessible to hobbyists, robotics, educators, and tinkerers. But what exactly is a Raspberry Pi? And where do you get started with one? That&#39;s where we&#39;ll dive in this week, at the very beginning.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;What is a Raspberry Pi?&lt;/span&gt;&lt;/li&gt;
&lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;What is it useful for?&lt;/span&gt;&lt;/li&gt;
&lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;How is it different from Arduino?&lt;/span&gt;&lt;/li&gt;
&lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Where to start?&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1GTQoiolsU8qgUpKJlv6boci-cFFadjz9Bh1HwEZlQwk/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Resources and Links&lt;/span&gt;&lt;/h3&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;/dl&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #19- Fantastic Parts and Where to Find Them</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb19/</link>
      <pubDate>Sat, 25 Jul 2020 17:56:53 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb19/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;How do you find just the right part for your electronics project? What even is the right part? And where can you find it? This week, we&#39;ll be exploring a to of electronics suppliers, from those who focus on hobbyist materials to professional electronics vendors,. We&#39;ll look at the various product lines, Arduino variants, sensor families, and so on that they bring to the market, so you can find the best parts for you.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Hobbyist Suppliers&lt;/span&gt;&lt;/li&gt;
&lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Overseas Internet Suppliers&lt;/span&gt;&lt;/li&gt;
&lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Warehouse Suppliers&lt;/span&gt;&lt;/li&gt;
&lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Professional Hardware Suppliers&lt;/span&gt;&lt;/li&gt;
&lt;li style=&#34;font-weight: 400;&#34;&gt;&lt;span style=&#34;font-weight: 400;&#34;&gt;Professional Parts Suppliers&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;The &lt;a href=&#34;#link-list&#34;&gt;&lt;strong&gt;big list of all the links from this episode&lt;/strong&gt;&lt;/a&gt; is below!&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1jXMUeCxj0Yu9V7cpWTmrUrj7uLV0x_q4HAXZNlnPNBw/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:html --&gt;
&lt;h2 class=&#34;post-h2&#34; id=&#34;link-list&#34;&gt;Big List of Links&lt;/h2&gt;
&lt;!-- /wp:html --&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;span style=&#34;color: inherit; font-size: 1.56em;&#34;&gt;Hobby Electronics&lt;/span&gt;&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/&#34;&gt;Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.sparkfun.com/&#34;&gt;SparkFun Electronics&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://shop.evilmadscientist.com/&#34;&gt;Evil Mad Scientist&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.pololu.com/&#34;&gt;Pololu Robotics and Electronics&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://store.arduino.cc/usa/&#34;&gt;Arduino Official Store | Boards Shields Kits Accessories&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://hobbyking.com/&#34;&gt;Radio Control Planes, Drones, Cars, FPV, Quadcopters and more - Hobbyking&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.seeedstudio.com/&#34;&gt;Seeed Studio Bazaar, The IoT Hardware enabler.&lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Adafruit - Arduino&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/171&#34;&gt;Boards : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/2488&#34;&gt;Adafruit METRO 328 - Arduino Compatible - with Headers [ATmega328] ID: &lt;/a&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/2488&#34;&gt;2488 - $17.50 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/815&#34;&gt;Compatibles : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Adafruit - Gemma/Flora&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/868&#34;&gt;Flora &amp;amp; Gemma : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3501&#34;&gt;Adafruit GEMMA M0 - Miniature wearable electronic platform ID: 3501 - $9.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/659&#34;&gt;FLORA - Wearable electronic platform: Arduino-compatible [v3] ID: 659 - $14.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Adafruit - Trinket&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/261&#34;&gt;Trinkets : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/1501&#34;&gt;Adafruit Trinket - Mini Microcontroller - 5V Logic ID: 1501 - $6.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/2590&#34;&gt;Adafruit Metro Mini 328 - Arduino-Compatible - 5V 16MHz ID: 2590 - $12.50 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3500&#34;&gt;Adafruit Trinket M0 - for use with CircuitPython &amp;amp; Arduino IDE ID: 3500 - $8.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Adafruit - Particle&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/771&#34;&gt;Particle : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3998&#34;&gt;Particle Boron LTE - nRF52840 with Mesh and LTE Cellular Modem ID: 3998 - $55.00 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3997&#34;&gt;Particle Argon - nRF52840 with Mesh and WiFi ID: 3997 - $27.50 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/2722&#34;&gt;Particle Photon without Headers ID: 2722 - $19.00 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Adafruit - Feather&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/777&#34;&gt;Feather : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/835&#34;&gt;Boards : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3458&#34;&gt;Adafruit Feather 328P - Atmega328P 3.3V @ 8 MHz ID: 3458 - $12.50 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/2829&#34;&gt;Adafruit Feather 32u4 Bluefruit LE ID: 2829 - $29.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4062&#34;&gt;Adafruit Feather nRF52840 Express ID: 4062 - $24.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/814&#34;&gt;Wings : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/2884&#34;&gt;FeatherWing Proto - Prototyping Add-on For All Feather Boards ID: 2884 - $4.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3201&#34;&gt;Adafruit Ethernet FeatherWing ID: 3201 - $19.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3191&#34;&gt;Adafruit Power Relay FeatherWing ID: 3191 - $9.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/2890&#34;&gt;FeatherWing Doubler - Prototyping Add-on For All Feather Boards ID: 2890 - $7.50 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Adafruit - Microbit/CLUE&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/932&#34;&gt;micro:bit Add-ons &amp;amp; Compatibles : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3530&#34;&gt;BBC micro:bit ID: 3530 - $14.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4500&#34;&gt;Adafruit CLUE - nRF52840 Express with Bluetooth LE ID: 4500 - $39.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4324&#34;&gt;KittenBot Meowbit - Codable Console for MakeCode Arcade ID: 4324 - $39.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Adafruit - Circuit Playground&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/888&#34;&gt;Circuit Playground : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3333&#34;&gt;Circuit Playground Express ID: 3333 - $24.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3000&#34;&gt;Circuit Playground Classic ID: 3000 - $19.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4333&#34;&gt;Circuit Playground Bluefruit - Bluetooth Low Energy ID: 4333 - $24.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/1592&#34;&gt;Short Wire Alligator Clip Test Lead (set of 12) ID: 1592 - $3.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3448&#34;&gt;Small Alligator Clip to Male Jumper Wire Bundle - 6 Pieces ID: 3448 - $3.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3517&#34;&gt;Circuit Playground Express - Base Kit ID: 3517 - $29.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://learn.adafruit.com/adafruit-circuit-playground-express/overview&#34;&gt;Overview | Adafruit Circuit Playground Express | Adafruit Learning System&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Adafruit - Shields&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/category/21&#34;&gt;Shields : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/94&#34;&gt;Adafruit Wave Shield for Arduino Kit [v1.1] ID: 94 - $22.00 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/1651&#34;&gt;2.8 TFT Touch Shield for Arduino with Resistive Touch Screen ID: 1651 - $34.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/772&#34;&gt;LCD Shield Kit w/ 16x2 Character Display - Only 2 pins used! [BLUE AND WHITE] ID: 772 - $19.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/1430&#34;&gt;Adafruit NeoPixel Shield for Arduino - 40 RGB LED Pixel Matrix ID: 1430 - $27.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4229&#34;&gt;Adafruit 2.7 Tri-Color eInk / ePaper Shield with SRAM [Red Black White] ID: 4229 - $39.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Connectors&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/?q=stemma&amp;amp;p=5&#34;&gt;Search : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/3893&#34;&gt;STEMMA JST PH 3-Pin to Male Header Cable - 200mm ID: 3893 - $1.25 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4431&#34;&gt;STEMMA Wired Tactile Push-Button Pack - 5 Color Pack ID: 4431 - $7.50 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4527&#34;&gt;SparkFun STEMMA QT / Qwiic Adapter ID: 4527 - $1.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4688&#34;&gt;SparkFun Qwiic / STEMMA QT HAT for Raspberry Pi ID: 4688 - $7.50 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4515&#34;&gt;SparkFun Qwiic / Stemma QT FeatherWing (Shield for Thing Plus) ID: 4515 - $4.95 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.adafruit.com/product/4463&#34;&gt;SparkFun Qwiic or Stemma QT SHIM for Raspberry Pi / SBC ID: 4463 - $1.50 : Adafruit Industries, Unique &amp;amp; fun DIY electronics and kits&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.sparkfun.com/qwiic#products&#34;&gt;Qwiic Connect System - SparkFun Electronics&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.sparkfun.com/products/15123&#34;&gt;SparkFun RedBoard Qwiic - DEV-15123 - SparkFun Electronics&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.sparkfun.com/products/15454&#34;&gt;SparkFun Thing Plus - XBee3 Micro (Chip Antenna) - WRL-15454 - SparkFun Electronics&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://learn.adafruit.com/introducing-adafruit-stemma-qt&#34;&gt;What is STEMMA? | Adafruit STEMMA &amp;amp; STEMMA QT | Adafruit Learning System&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.sparkfun.com/news/3336&#34;&gt;101 Qwiic Boards - News - SparkFun Electronics&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Pro Hardware&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.mcmaster.com/&#34;&gt;McMaster-Carr&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.grainger.com/&#34;&gt;Grainger Industrial Supply - MRO Products, Equipment &amp;amp; Tools&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Pro Componnets&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.digikey.com/&#34;&gt;DigiKey Electronics - Electronic Components Distributor&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.mouser.com/&#34;&gt;Electronic Components Distributor - Mouser Electronics&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.newark.com/homeb?adobe_mc_ref=https%3A%2F%2Fwww.google.com%2F&#34;&gt;Electronic Components, Supplies, and Accessories at Newark&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://lcsc.com/&#34;&gt;Electronic Components Distributor | JLCPCB &amp;amp; EasyEDA Parts Online store - LCSC.COM&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.findchips.com/&#34;&gt;FindChips: Electronic Components, Distributor Inventories, Datasheets&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://octopart.com/&#34;&gt;Datasheets, Electronic Parts, Components, Search - Octopart&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Overseas Supplies&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://aliexpress.ru/home.htm&#34;&gt;AliExpress - интернет-магазин электроники, модных новинок, товаров для дома и сада, игрушек, товаров для спорта, автотоваров и многого другого | АлиЭкспресс&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.banggood.com/?version=2&amp;amp;akmClientCountry=America&#34;&gt;Banggood: Online Shopping for RC Cars, 3D Printer, Apparel &amp;amp; Home Decors&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.alibaba.com/&#34;&gt;Alibaba.com: Manufacturers, Suppliers, Exporters &amp;amp; Importers from the world&#39;s largest online B2B marketplace&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://aliexpress.ru/store/701799&#34;&gt;Ray wu&#39;s store&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;dt&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Warehouse Suppliers&lt;/h3&gt;
&lt;dl&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.allelectronics.com/&#34;&gt;All Electronics | Electronic and Electro-Mechanical Parts and Supplies at Discount Prices&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.goldmine-elec-products.com/&#34;&gt;Electronic Goldmine&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.jameco.com/&#34;&gt;Jameco Electronics - Electronic Components Distributor&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.bgmicro.com/&#34;&gt;BGMicro Electronics - Parts, Kits, Projects, Surplus, DIY, Hobby&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;/dt&gt;
&lt;dt&gt;&lt;a href=&#34;https://www.maplin.co.uk/maker-stem/hobby-electronics&#34;&gt;Hobby Electronics&lt;/a&gt;&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;/dl&gt;
&lt;/dt&gt;
&lt;/dl&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #18- Timers</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb18/</link>
      <pubDate>Fri, 17 Jul 2020 17:59:04 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb18/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;To this point, we&#39;ve been handling all of the timing and timekeeping in our Arduino programs by hand. If &lt;em&gt;the-next-thing&lt;/em&gt; needs to happen at a specific time, or a specific number of milliseconds from now, we&#39;ve been tracking all that with variables and millis() statements and so on. What if there wa a way for that all to be taken care of in the background, automatically? And what if it was something we&#39;d been doing all along without our knowing it?&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Timers in the ATmega328&lt;/li&gt;
&lt;li&gt;Timer Interrupts and Configuration&lt;/li&gt;
&lt;li&gt;Timers and built-in Functions (AnalogWrite, Tone, Millis, Delay, Servo)&lt;/li&gt;
&lt;li&gt;Using timers to build new code&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/12NmXO_QC_IcRNuBTLT_QfMICteMSnsxTFcEZSW-EALA/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Print Timer&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/40b7da2534643cc746d476ef2e6dd43c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Print Timer Interrupts&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/4bfe3386a4296776ff01405bd725a302&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Blink Interrupts&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/c2c0cd166f761aeafc6d758e0bb728e3&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Adjustable Speed Blink&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/5a7e8e80e1b16d8ec155957587872179&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:image {&#34;id&#34;:1246,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1246 post-img&#34; src=&#34;Circuit2.png&#34;/&gt;&lt;figcaption&gt;&lt;em&gt;The following code will make use of the above circuit diagram&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Tone Interrupts &lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/2a738a20cbb8fe0ad787376e8603b793&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Tone Interrupts - Serial&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/b5c1f50322fc783dfd0c197b2a718960&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Tone List&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/859ca5e330a0097f2e67b0ae1d2585ba&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Pitches.h&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/0bffa59877a9b294d8100cc1d112e600&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:image {&#34;id&#34;:1247,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1247 post-img&#34; src=&#34;circuit3-1024x498.png&#34;/&gt;&lt;figcaption&gt;&lt;em&gt;The following code will make use of the above circuit diagram&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;SnakeMusic.ino&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/ba9f6cd684c054a2195c3065b72487f9&#34;&gt;Click here to view code on Github&lt;/a&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #17- Control Registers</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb17/</link>
      <pubDate>Fri, 10 Jul 2020 17:26:37 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb17/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;The code we write for an Arduino is ultimately meant to get certain bits and bytes into the microprocessor so that it does what we want. This week, we&#39;ll continue to peek behind the curtain and see how standard Arduino code represents modifications to various places in the microprocessor&#39;s memory, and how we can directly access those places to gain faster, tighter, more precise control of the Arduino.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;The Three Types of Memory&lt;/li&gt;
&lt;li&gt;What is a register?&lt;/li&gt;
&lt;li&gt;Register Access&lt;/li&gt;
&lt;li&gt;Bitwise Math&lt;/li&gt;
&lt;li&gt;Introduction to Timers?&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1bRhNjCdpqHvl5MuUABQ_WOVwLo8lz6vGY08ljQdl7NQ/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:1217,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1217 post-img&#34; src=&#34;Circuit1-3.png&#34;&gt;&lt;figcaption&gt;&lt;em&gt;The following code will make use of the above circuit diagram&lt;/em&gt;&lt;/figcaption&gt;&lt;/img&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;LED Button&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/079c1e65c036b832eddc9ede633fadf6&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;LED Button Registers&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/bd18eb18531842e1972756e11faee020&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;LED Button Registers with with Bitshifting&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/1c0022579329665c0abe2f47c9aecf81&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;LED Button Registers with with Bitshifting&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/6ee3fe087f98e82401f1d9dba57ce8d3&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Pin Change Interrupts&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/4570f0a24cfaa5683aec3a3bb9d1b916&#34;&gt;Click here to view code on Github&lt;/a&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #16- Hardware Interrupts</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb16/</link>
      <pubDate>Thu, 02 Jul 2020 04:25:05 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb16/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;Writing interactive code without interrupts can be like waiting for a letter to come - you have to keep checking the mailbox to see if any new info has arrived. Interrupts are like an alarm on your mailbox that draws your attention so you don&#39;t need to keep checking. They&#39;re powerful, useful, and a little finicky - they&#39;ll be our subject this week.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Interrupts&lt;/li&gt;
&lt;li&gt;ISRs&lt;/li&gt;
&lt;li&gt;The &#39;volatile&#39; quantifier&lt;/li&gt;
&lt;li&gt;Timers&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1YVEvLJoVoGsIPAuT9Ar3hdOvS-RqhaX9LRw6Xq_qhZU/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code Libraries&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week we’ll be making extensive use of the &lt;strong&gt;&lt;a href=&#34;http://EnableInterrupt&#34;&gt;EnableInterrupt Library&lt;/a&gt;&lt;/strong&gt; to to handle Pin Change interrupts. You can download it from the link above. &lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:1189,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1189 post-img&#34; src=&#34;circuit1-2.png&#34;&gt;&lt;figcaption&gt;&lt;em&gt;The following code will make use of the above circuit diagram&lt;/em&gt;&lt;/figcaption&gt;&lt;/img&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Interrupts Basic&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/27cbbfae209b5249c651fdc724834ea5&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Interrupts Serial&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/ac5cfd15028a9b3821f22de20f4f8090&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Interrupts Serial Debounce&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/743e027480bf6242785807943669e768&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Interrupts Array&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/4619128ef5bb9c6073b6d36d3ffe785c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Enable Interrupts - Simple Example&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/9fae9ea101527b53a0f457cea576711f&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #15 - Long Distance Signals</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb15/</link>
      <pubDate>Thu, 25 Jun 2020 18:42:15 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb15/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;We&#39;ve got a couple ways to pass signals between Arduinos sitting next to each other on the workbench now, or even 50&#39; away via a wireless dongle. But what if you need to get signals from 1000&#39; away or more?&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;That&#39;s where a robust wired system based on RS485 can help. As a physical protocol, RS485 won&#39;t get you there alone - you&#39;ll need a communications protocol built on top of it to actually pass data. This week, we&#39;ll look at DMX, the most common control protocol in the entertainment lighting field, how it relates to DMX , and how you can use both to pass messages long distances.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;RS485 fundamentals&lt;/li&gt;
&lt;li&gt;The OSI Model&lt;/li&gt;
&lt;li&gt;DMX (Digital Multiplex)&lt;/li&gt;
&lt;li&gt;Network Topologies&lt;/li&gt;
&lt;li&gt;Singalling and Addressing schemes&lt;/li&gt;
&lt;li&gt;Transmission lines, impedance, and ternimation&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1mUfrtoUimWKvEugg14u3TcMzDIElqnyp0GQiXtUTvM0/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code Libraries&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week we’ll be making extensive use of the &lt;strong&gt;&lt;a href=&#34;https://sourceforge.net/p/dmxlibraryforar/wiki/Home/&#34;&gt;Conceptinetics DMX Library&lt;/a&gt;&lt;/strong&gt; to handle DMX  communication. You can download it from the link above. There are several published libraries that handle DMX, but this is the one I&#39;ve had the most success with.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:1161,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1161 post-img&#34; src=&#34;Circuit-1.png&#34;/&gt;&lt;figcaption&gt;&lt;em&gt;The following code will make use of the above circuit diagram&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:image {&#34;id&#34;:1164,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1164 post-img&#34; src=&#34;Circuit2.png&#34;/&gt;&lt;figcaption&gt;&lt;em&gt;This following code will also be used with this circuit diagram.&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Basic Send&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/4efd794c7a227cfeebd9c92d933e38e3&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Basic Receive&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/4daf277dcac7af15ef9136d841e857bb&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Knob Send&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/74d5dd576b9c60b31b19328b7f7dc4a4&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:image {&#34;id&#34;:1165,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1165 post-img&#34; src=&#34;Circuit3-1024x577.png&#34;/&gt;&lt;figcaption&gt;&lt;em&gt;The following code will use the above circuit diagram&lt;/em&gt;&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;DMX Basic Send&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/6ea35c97865250c2ad364ec7f1ca0e71&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;DMX Basic Receive&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/0022785de33a09fc98922f900f6437e1&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;DMX Knob Send&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/9131a459a086335d33972074f69c29b9&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;DMX Knob Send Dual&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d6b3f781cfb864adc307f8a3850a0fab&#34;&gt;Click here to view code on Github&lt;/a&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #14 - Wireless Signals</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb14/</link>
      <pubDate>Fri, 19 Jun 2020 18:54:28 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb14/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;Wires? Where we&#39;re going we don&#39;t need... wires.... Except for power, ground, programming, buttons, others sensors, etc....&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week, we&#39;re continuing our looking at the Arduino, the most popular microcontroller platform on the planet. We&#39;ll be introducing the versatile Radiohead library, and using it to drive some inexpensive ASK/OOK 433 MHz modules to pass lightweight wireless signals between two Arduinos.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Topics Include:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Radio fundamentals&lt;/li&gt;
&lt;li&gt;ASK/OOK&lt;/li&gt;
&lt;li&gt;Working with the Radiohead library&lt;/li&gt;
&lt;li&gt;*Pointers&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1KkPRHpl2aZRjoBa_3cQKJKXnuQVXYOOha1RWx4fgRL0/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code Libraries&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week we&#39;ll be making extensive use of the &lt;strong&gt;&lt;a href=&#34;https://bit.ly/2NgOeAn&#34;&gt;Radiohead Library&lt;/a&gt;&lt;/strong&gt; to handle wireless communication. You can download it from the  link above. Notice that if you Google &#34;Radiohead Library&#34; you also will see github links to Sparkfun&#39;s fork of this library, which doesn&#39;t seem to be as up to date - I recommend using the source from Airspayce above.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:1106,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1106 post-img&#34; src=&#34;OOK-Schmeatics-1024x677.png&#34;&gt;&lt;figcaption&gt;&lt;em&gt;The following code will make use of the above circuit diagram&lt;/em&gt;&lt;/figcaption&gt;&lt;/img&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;ASK Transmitter&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/6d358a211ab7334abeffe4817d8654dc&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;ASK Receiver&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/ed77ed05da5cf72c7ad2d691a13d4e0b&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;ASK Transmit Integers&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/67186cf663bb1dcc88ace005c98a6dea&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;ASK Receive Integers&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/5bc494575ff316cc029615e748136e73&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;ASK Receiver Servo&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/b7ad7122a0fe94cbd0dc4772d9280601&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;ASK Transmitter Servo&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/5d776714a3468446427dbe59fa7b2e02&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;ASK Receiver Servo and LED&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/0d067c8bd49e4dd68e1ab33a9f6ff49c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;ASK Transmitter Servo and LED&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/31c9d3356bc00a115386162ad49c52d0&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Local Variables Example&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d00c403bf9163c991f80c4e3cf451373&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Pointers as Arguments Example&lt;/strong&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/f6f668dae6f0e81dbbd4091279330470&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Binary/Hex Slider Example&lt;/strong&gt; (Processing)&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/460b0f6c282c25e2d26dbf067f33a2ab&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #13 - Creating a Printed Circuit Board</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb13/</link>
      <pubDate>Sun, 14 Jun 2020 02:13:32 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb13/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;Hand soldering a prototype is all well and good. Heck, making two or three of a thing isn&#39;t too bad. But what if you need ten widgets, all wired together the same way? Or a hundred? Or you&#39;re using parts too small to be wired to perfboard? These are situations where an inexpensive Printed Circuit Board (PCB) comes in handy.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;PCBs are easier to design, order, and use than ever! In this session we&#39;ll look at:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Schematic Capture (getting your circuit design into the computer)&lt;/li&gt;
&lt;li&gt;Circuit board layout&lt;/li&gt;
&lt;li&gt;Creating custom parts and part footprints from a datasheet&lt;/li&gt;
&lt;li&gt;Ordering a circuit board from an online board house&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/14XRTPYtzxukoKsrHpHj5DpUNNwybVjdJfbq03zMuWS4/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Eagle&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This weeks PCB design session will use &lt;a href=&#34;https://www.autodesk.com/products/eagle/overview?plc=F360&amp;amp;term=1-YEAR&amp;amp;support=ADVANCED&amp;amp;quantity=1&#34;&gt;AutoDesk&#39;s Eagle PCB Design software&lt;/a&gt;, a free version of which is available for hobbyists and home users. You will need to activate an AutoDesk account to use it.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - #12 - Soldering</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb12/</link>
      <pubDate>Thu, 04 Jun 2020 04:15:38 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb12/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/06/6-7-Thumb-Bash.jpg&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1072 size-large post-img&#34; height=&#34;405&#34; src=&#34;6-7-Thumb-Bash-1024x576.jpg&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;You now what&#39;s really good at sticking two pieces of metal together so they make good electrical contact? No, not glue. Not tape. Not chewing gum. More metal melted and flowed with a hot iron, that&#39;s what!&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week&#39;s stream fill focus on soldering - the fundamental act of bonding metal parts together. It&#39;s easy to do well... and easy to do poorly. We&#39;ll cover topics like:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Hand soldering skills&lt;/li&gt;
&lt;li&gt;Types and mixes of solder&lt;/li&gt;
&lt;li&gt;Soldering iron and tip species&lt;/li&gt;
&lt;li&gt;Soldering thru-hole and surface-mount parts&lt;/li&gt;
&lt;li&gt;Soldering safety&lt;/li&gt;
&lt;li&gt;Hot air and soldering rework&lt;/li&gt;
&lt;li&gt;Desoldering with hot air, solder braid, and solder suckers&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. You can expect the code and formatting here to change up to a couple hours before the stream as the plan for the evening comes together.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1RuxpWDWi4WSFjHV0dpGmse9jZiytomlHGQVIBQFgI40/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Materials&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Really, you should just read the soldering section of &lt;a href=&#34;https://jeff.glass/2019/12/01/electronics-lab-tools/&#34;&gt;my writeup from the fall on my preferred electronics workbench tools&lt;/a&gt;. But here are some specific supplies that I suspect I&#39;ll be referencing:&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:3} --&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Soldering Irons:&lt;/h3&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://amzn.to/2U597Cf&#34;&gt;Hakko FX-888D&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/305Kf13&#34;&gt;Inexpensive Soldering Station&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/2AGnKFe&#34;&gt;Inexpensive Station w/ Hot Air&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/3ctF7Xm&#34;&gt;TS-100 Mini Iron&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:3} --&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Solder:&lt;/h3&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://amzn.to/2U2KXIP&#34;&gt;Kester 60-40 .031&#34;&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/2XsCQHA&#34;&gt;Kester 63-37 .020&#34;&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/2U5mrqA&#34;&gt;Kester Lead-Free .031&#34;&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:3} --&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Soldering Accessories:&lt;/h3&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://amzn.to/3dxl6jN&#34;&gt;Circuit Board Holder&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://www.thingiverse.com/thing:21357&#34;&gt;3D Printed Circuit Board Holder&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/2AzBRwc&#34;&gt;Octopus Vise&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/2ACml2N&#34;&gt;Solder Reel Holder&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://www.thingiverse.com/thing:960103&#34;&gt;3D Printed Solder Reel Holder&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/3eMUP17&#34;&gt;Fume extractor&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/2MoenwO&#34;&gt;Solder Flux Pens&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/2XZuKoP&#34;&gt;Desoldering Braid&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/2YcZB1x&#34;&gt;Solder Sucker&lt;/a&gt; &lt;br/&gt;&lt;a href=&#34;https://amzn.to/2Uai9Oq&#34;&gt;Thru-Hole Solding Practice Kit&lt;/a&gt;&lt;br/&gt;&lt;a href=&#34;https://amzn.to/2Y0QtwC&#34;&gt;SMD Soldering Practice Kit&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:1047,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1047 post-img&#34; src=&#34;BuildTogether_5-24-759x1024.png&#34;/&gt;&lt;figcaption&gt;The following pieces of code will make use of this circuit&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Expository writing goes here&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Code heading&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;And some more details about some code to come.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/af9bc2787a64b8431aab1c97208db99a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - Arduino #11 - Making it Permanent</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb11/</link>
      <pubDate>Mon, 25 May 2020 16:18:58 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb11/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/05/5-31-20-Thumb.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1052 size-large post-img&#34; height=&#34;405&#34; src=&#34;5-31-20-Thumb-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;So you&#39;ve made a cool thing with an Arduino Uno that works fine on the workbench. But when you try to install it somewhere for long term use - wires start falling out, components come out of the breadboard, it&#39;s a big ole mess. There must be a better way to make Arduino projects more permanent.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week&#39;s stream will continue our look at Arduino, the most popular microcontroller on the planet. We&#39;ll focus on ways of turning a transitory and experimental Arduino project into a more permanent installation, including:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Working with sodler-able perfboard/protoboard&lt;/li&gt;
&lt;li&gt;Transferring the Microprocessor itself from the Arduino to a breadboard/protoboard&lt;/li&gt;
&lt;li&gt;Programming microprocessors without the Arduino itself&lt;/li&gt;
&lt;li&gt;Working with smaller/cheaper microprocessors (ATMEGA, ATTINY) to cut down pricing on large-scale projects&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. You can expect the code and formatting here to change up to a couple hours before the stream as the plan for the evening comes together.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1T6Ya-daIRirTFU2-05KNZdzAPZL2i8UZvr9b3GWKMGw/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Materials&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week&#39;s episode will involve programming several microcontroller chips outside of the Arduino itself. If you&#39;re looking to purchase some of the these chips (and the other supporting materials), you have a couple options of where to purchase. &lt;strong&gt;Amazon&lt;/strong&gt;, of course, is ubiquitious but there are relatively few options available, it&#39;s typically more expensive per unit, and you run the risk of counterfit chips. &lt;strong&gt;&lt;a href=&#34;https://www.digikey.com/&#34;&gt;DigiKey&lt;/a&gt;&lt;/strong&gt;, an online electronics catalog, is much better populated and usually cheaper per unit price, but you will pay for shipping (usually $5 flat rate USPS works fine for ICs). You can choose which is better for you.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:3} --&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Micrcontrollers&lt;/h3&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;These are the brains of the operation - literally. They are the heart and sole of the Arduino, the chip that you write your code to and that carries the program forward. The first chip in the list is exactly what&#39;s on, say, an Arduino Uno - the others are variants in size/scope/price.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;I should say - there are lots of lots of different microcontrollers in the &lt;a href=&#34;https://en.wikipedia.org/wiki/ATtiny_microcontroller_comparison_chart&#34;&gt;ATtiny family&lt;/a&gt; and &lt;a href=&#34;https://www.futurlec.com/ICAtmel_ATMega_Comparison.shtml&#34;&gt;ATmega family&lt;/a&gt; - this is just a (semi)representative sampling based on a few different IC sizes/scopes.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:4} --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;ATmega328P-PU&lt;/h4&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;align&#34;:&#34;right&#34;,&#34;width&#34;:125,&#34;height&#34;:125} --&gt;
&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;alignright is-resized&#34;&gt;&lt;img alt=&#34;ATMEGA328P-PU Microchip Technology | ATMEGA328P-PU-ND DigiKey Electronics&#34; class=&#34;post-img&#34; height=&#34;125&#34; src=&#34;28-PDip.jpg&#34; width=&#34;125&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is literally the exact chip that&#39;s present on the Arduino Uno, and can be&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt; turned into a breadboard equivalent by moving the chip off the Uno. Note that the Amazon chips come pre-loaded with the bootloader, which isn&#39;t really necessary - we&#39;ll be looking at how to load the bootloader onto the chips ourselves. (The bootloader is a tiny bit of code that helps the Arduino IDE load code onto the Chip.)&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Amazon:&lt;/strong&gt; &lt;a href=&#34;https://amzn.to/3eerFrB&#34;&gt;$13.97 for 4&lt;/a&gt; or &lt;a href=&#34;https://amzn.to/2zlRkjo&#34;&gt;$29.98 for 10&lt;/a&gt; (bootloader pre-loaded)&lt;br/&gt;&lt;strong&gt;Digikey: &lt;/strong&gt;&lt;a href=&#34;https://www.digikey.com/product-detail/en/microchip-technology/ATMEGA328-PU/ATMEGA328-PU-ND/2271026&#34;&gt;$1.90 each&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:4} --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;ATtiny44a&lt;/h4&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;align&#34;:&#34;right&#34;,&#34;width&#34;:135,&#34;height&#34;:135} --&gt;
&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;alignright is-resized&#34;&gt;&lt;img alt=&#34;ATTINY44A-PU Microchip Technology | ATTINY44A-PU-ND DigiKey Electronics&#34; class=&#34;post-img&#34; height=&#34;135&#34; src=&#34;14PDIP.jpg&#34; width=&#34;135&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Somewhat more compact that than the ATMEGA but still with 12 General Purpose Input/Output (GPIO) pins, these is a nice step down in price and complexity from a full ATmega328. Useful in cases where you&#39;re doing some heavy lifting, but down need, say, a full 32K of program space.&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Amazon:&lt;/strong&gt;&lt;a href=&#34;https://amzn.to/2ywDr1j&#34;&gt; $20 for 5&lt;/a&gt;&lt;br/&gt;&lt;strong&gt;Digikey: &lt;/strong&gt;&lt;a href=&#34;https://www.digikey.com/products/en/integrated-circuits-ics/embedded-microcontrollers/685?k=attiny44a&amp;amp;k=&amp;amp;pkeyword=attiny44a&amp;amp;sv=0&amp;amp;pv69=411897&amp;amp;sf=0&amp;amp;quantity=&amp;amp;ColumnSort=0&amp;amp;page=1&amp;amp;pageSize=25&#34;&gt;$1.11 each&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:4} --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;ATtiny85-20PU&lt;/h4&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;align&#34;:&#34;right&#34;,&#34;width&#34;:127,&#34;height&#34;:127} --&gt;
&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;alignright is-resized&#34;&gt;&lt;img alt=&#34;ATTINY85-20PU Microchip Technology | ATTINY85-20PU-ND DigiKey Electronics&#34; class=&#34;post-img&#34; height=&#34;127&#34; src=&#34;8-DIP.jpg&#34; width=&#34;127&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Now we&#39;re getting really small - this guy comes in a DIP-8 package less than 1/2&#34; wide and long, though with only 8 pins, it&#39;s I/O capabilities are of course somewhat limited.&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Amazon:&lt;/strong&gt; &lt;a href=&#34;https://amzn.to/2ZxWGTe&#34;&gt;$10.35 for 5&lt;/a&gt;&lt;br/&gt;&lt;strong&gt;Digikey: &lt;/strong&gt;&lt;a href=&#34;https://www.digikey.com/product-detail/en/microchip-technology/ATTINY85-20PU/ATTINY85-20PU-ND/735469&#34;&gt;$1.20 each&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:4} --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;ATtiny13&lt;/h4&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;The cheapest of the lot of the lot - comes in an 8-pin DIP package less than 1/2&#34; wide and long. It&#39;s capabilities (clock speed, program storage, flash memory, long-term EEPROM storage) are quite small compared to the AMTEGA328 we&#39;re used to, but if price-per-unit is a serious concern, you can push it way down by using something that just barely fills your needs&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Amazon:&lt;/strong&gt; &lt;a href=&#34;https://amzn.to/3eerFrB&#34;&gt;$19.50 for 20&lt;/a&gt;&lt;br/&gt;&lt;strong&gt;Digikey:&lt;/strong&gt; &lt;a href=&#34;https://www.digikey.com/product-detail/en/microchip-technology/ATTINY13A-PU/ATTINY13A-PU-ND/1914671&#34;&gt;$0.82 Each&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:3} --&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;Ancillaries&lt;/h3&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:heading {&#34;level&#34;:4} --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Crystal Oscillator&lt;/h4&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;align&#34;:&#34;right&#34;,&#34;width&#34;:148,&#34;height&#34;:148} --&gt;
&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;alignright is-resized&#34;&gt;&lt;img alt=&#34;9B-16.000MBBK-B TXC CORPORATION | 887-2015-ND DigiKey Electronics&#34; class=&#34;post-img&#34; height=&#34;148&#34; src=&#34;9B-SERIES.jpg&#34; width=&#34;148&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;For any of the ATtiny options, we can run our processors either from the an internal oscillator or an external crystal. For the ATmega328, in order to respond appropriately to the Arduino bootloader, we&#39;ll need to have a 16Mhz crystal oscillator present, with a pair of 22pF capacitors that help the crystal to oscillate. Thankfully, both of these parts are really inexpensive:&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;span style=&#34;text-decoration: underline;&#34;&gt;&lt;strong&gt;Crystal:&lt;/strong&gt;&lt;/span&gt;&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Amazon:&lt;/strong&gt; &lt;a href=&#34;https://amzn.to/3c2aE24&#34;&gt;$4.27 for 10&lt;/a&gt; or &lt;a href=&#34;https://www.amazon.com/a14073000ux0239-Profile-Crystal-Oscillator-Replacements/dp/B00SWK2HCO/ref=sr_1_5?crid=1QY2RBG38FD4K&amp;amp;dchild=1&amp;amp;keywords=16mhz+crystal&amp;amp;qid=1590428554&amp;amp;sprefix=16mhz%2Caps%2C164&amp;amp;sr=8-5&#34;&gt;$7.60 for 20&lt;/a&gt;&lt;br/&gt;&lt;strong&gt;Digikey: &lt;/strong&gt;&lt;a href=&#34;https://www.digikey.com/product-detail/en/txc-corporation/9B-16-000MBBK-B/887-2015-ND/3522089&#34;&gt;$0.30 each or $2.50 for 10&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;&lt;span style=&#34;text-decoration: underline;&#34;&gt;&lt;strong&gt;Capacitors:&lt;/strong&gt;&lt;/span&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:image {&#34;align&#34;:&#34;right&#34;,&#34;width&#34;:91,&#34;height&#34;:91} --&gt;
&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;alignright is-resized&#34;&gt;&lt;img alt=&#34;C317C220J2G5TA KEMET | 399-4220-ND DigiKey Electronics&#34; class=&#34;post-img&#34; height=&#34;91&#34; src=&#34;Goldmax,-300.jpg&#34; width=&#34;91&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Amazon: &lt;/strong&gt;&lt;em&gt;If you&#39;re going to buy discrete capacitors from Amazon, I think this is a great opportunity to buy yourself an inexpensive capacitor assortment&lt;/em&gt; - &lt;em&gt;it will have lots of uses and opportunities for experimentation. Here&#39;s a kit that&#39;s &lt;/em&gt;&lt;a href=&#34;https://amzn.to/3eli6Ht&#34;&gt;$5.99 for 300 pcs&lt;/a&gt;&lt;br/&gt;&lt;strong&gt;Digikey: &lt;/strong&gt;&lt;a href=&#34;https://www.digikey.com/product-detail/en/kemet/C317C220J2G5TA/399-4220-ND/817996&#34;&gt;$1.26 for 10 or $6.38 for 100&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:4} --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Smoothing Capacitors&lt;/h4&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:image {&#34;align&#34;:&#34;right&#34;,&#34;width&#34;:90,&#34;height&#34;:90} --&gt;
&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;alignright is-resized&#34;&gt;&lt;img alt=&#34;UVR1V100MDD Nichicon | 493-1077-ND DigiKey Electronics&#34; class=&#34;post-img&#34; height=&#34;90&#34; src=&#34;VR%20SERIES%20YELLOW%20HIGHLIGHT%20990-992.jpg&#34; width=&#34;90&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;While not strictly necessary, as we&#39;ve discussed in previous episodes, having a (fairly) large capacitor near the point where your circuit is consuming power can help smooth over gaps in the power supply when your circuit asks for a lot of current. Like I say, if this is just for a lark, don&#39;t worry too much about this, but if you&#39;re interested in pursuing the idea of moving Arduinos into the world (or honestly, if you&#39;re interested in circuitry in general) this is a good excuse to buy an inexpensive electrolytic capacitor assortment - here&#39;s one that&#39;s &lt;a href=&#34;https://amzn.to/2zjXDnB&#34;&gt;$10.31 for 240pcs&lt;/a&gt;.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;em&gt;Can i just use the capacitor assortment I bought for the crystals? &lt;/em&gt;Unfortunately no - you&#39;ll notice that the crystal-related capictors have values in the picofarad (pF) range, and the electrolytics are in the microfarad range (μF) - 1,000,000 times larger! They serve two different purposes in our circuitry, and so are of two massively different scales.&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading {&#34;level&#34;:4} --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Power &lt;/h4&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;align&#34;:&#34;right&#34;,&#34;width&#34;:162,&#34;height&#34;:162} --&gt;
&lt;div class=&#34;wp-block-image&#34;&gt;&lt;figure class=&#34;alignright is-resized&#34;&gt;&lt;img alt=&#34;NCP7805CTG Rochester Electronics, LLC | 2156-NCP7805CTG-ON-ND DigiKey Electronics&#34; class=&#34;post-img&#34; height=&#34;162&#34; src=&#34;TO-220-3.jpg&#34; width=&#34;162&#34;/&gt;&lt;/figure&gt;&lt;/div&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;In our examples together, we&#39;ll be using one of our existing Arduino Unos to provide power to our off-board microprocessors at 5V, but as we discussed two weeks ago in the &lt;a href=&#34;https://jeff.glass/electronics-bash/electronics-bash-arduino-9-batteries/&#34;&gt;Batteries episode&lt;/a&gt;, sometimes you&#39;ll need a voltage regulator to provide 5V power to your device in you&#39;re moving it out into the real world. (You could, of course, also power it directly from a &lt;a href=&#34;https://amzn.to/3bZ0H5O&#34;&gt;5V power brick&lt;/a&gt;) The 7805 is most basic example:&lt;br/&gt;&lt;br/&gt;&lt;strong&gt;Amazon: &lt;/strong&gt;&lt;a href=&#34;https://amzn.to/2AUhEBm&#34;&gt;$6.99 for 15&lt;/a&gt;&lt;br/&gt;&lt;strong&gt;Digikey: &lt;/strong&gt;&lt;a href=&#34;https://www.digikey.com/product-detail/en/rochester-electronics-llc/NCP7805CTG/2156-NCP7805CTG-ON-ND/11545790&#34;&gt;$0.25 Each&lt;/a&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:1047,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1047 post-img&#34; src=&#34;BuildTogether_5-24-759x1024.png&#34;/&gt;&lt;figcaption&gt;The following pieces of code will make use of this circuit&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Expository writing goes here&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Code heading&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;And some more details about some code to come.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/af9bc2787a64b8431aab1c97208db99a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - Arduino #10 - Write Better Code</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb10/</link>
      <pubDate>Sun, 24 May 2020 15:28:02 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb10/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/05/5-24-Thumb-Correct.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1043 size-large post-img&#34; height=&#34;405&#34; src=&#34;5-24-Thumb-Correct-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;In this stream, we&#39;ll be focusing on useful coding structures and practices, including:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Arrays are your friend&lt;/li&gt;
&lt;li&gt;Using delta-time avoids delay()&lt;/li&gt;
&lt;li&gt;Switching program modes&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. You can expect the code and formatting here to change up to a couple hours before the stream as the plan for the evening comes together.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1Ix-fKJYUhf3mcSDUeTMwofDjEBjcRxef8k1f3QAYfzA/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Batteries&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;None of the code related to battery usage will be terribly complicated - we&#39;ll be mostly making use of the Analog Read function and the Serial monitor.&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Build Together - Sensor Monitor&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:1047,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1047 post-img&#34; src=&#34;BuildTogether_5-24-759x1024.png&#34;&gt;&lt;figcaption&gt;The following pieces of code will make use of this circuit&lt;/figcaption&gt;&lt;/img&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Next week, we&#39;ll be looking at some fundamental coding patterns using some simple components that everyone should have in their starter kit, plus one additional sensor or switch. Below is a bit of starter code to test root components (LEDs, buttons, potentiometer) as a place to start&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LED Testing&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Try this code after installing the 5 LEDs and their resistors, to make sure they all work:&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/af9bc2787a64b8431aab1c97208db99a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LEDs and Inputs&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Once the LEDs, buttons, and potentiometer are installed, this bit of code tests them all. The 5 LEDs should chase a a speed determined by the position of the potentiometer, and the buttons should set the direction of the chase:&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/8773bf13e2f15eb18747b7e3a2eb8da8&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;hr/&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Final Fire Alarm Code&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the code we wrote over the course of the evening&#39;s stream - it includes mapping sensor readings to individual threshhold levels, triggering an alarm state after being at a high level for a certain amount of time, and multiple conditions for exiting the alarm state back to the normal sensing state.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/086e84b1ec8de7ba9e52809df4d348d7&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - Arduino #9 - Batteries</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb9/</link>
      <pubDate>Fri, 15 May 2020 02:04:08 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb9/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/05/5-17-20-Thumb.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1031 size-large post-img&#34; height=&#34;405&#34; src=&#34;5-17-20-Thumb-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;In this stream, we&#39;ll be looking at:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Different battery chemistries, and their ramifications for portability, charging, weight, and output &lt;/li&gt;
&lt;li&gt;Advantages and disadvantages for each type in an Arduino project&lt;/li&gt;
&lt;li&gt;Using voltage regulators to provide a stable voltage to your Arduino&lt;/li&gt;
&lt;li&gt;Using voltage dividers to measure voltages higher than 5V.&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. You can expect the code and formatting here to change up to a couple hours before the stream as the plan for the evening comes together.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1oL2FDY_DL9War-k1j4HSDLH9Y3Bp9cH7Ev-PDYrHMXM/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Batteries&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;None of the code related to battery usage will be terribly complicated - we&#39;ll be mostly making use of the Analog Read function and the Serial monitor.&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Build Together - Sensor Monitor&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:1039,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-1039 post-img&#34; src=&#34;BuildTogether1-759x1024.png&#34;/&gt;&lt;figcaption&gt;The following pieces of code will make use of this circuit&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Next week, we&#39;ll be looking at some fundamental coding patterns using some simple components that everyone should have in their starter kit, plus one additional sensor or switch. Below is a bit of starter code to test root components (LEDs, buttons, potentiometer) as a place to start&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LED Testing&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Try this code after installing the 5 LEDs and their resistors, to make sure they all work:&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/af9bc2787a64b8431aab1c97208db99a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LEDs and Inputs&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Once the LEDs, buttons, and potentiometer are installed, this bit of code tests them all. The 5 LEDs should chase a a speed determined by the position of the potentiometer, and the buttons should set the direction of the chase:&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/8773bf13e2f15eb18747b7e3a2eb8da8&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - Arduino #8- Remote Control with Infrared</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb8/</link>
      <pubDate>Sat, 09 May 2020 00:23:16 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb8/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/05/5-10-Thumb.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1016 size-large post-img&#34; height=&#34;405&#34; src=&#34;5-10-Thumb-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;In this stream, we&#39;ll be looking at:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Controlling the Arduino with an Infrared remote control, either a &#34;basic&#34; one (pictured above) or any old TV remote.&lt;/li&gt;
&lt;li&gt;Using the Arduino to control Infrared devices (TV&#39;s, stereos, LED candles, etc)&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. You can expect the code and formatting here to change up to a couple hours before the stream as the plan for the evening comes together.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1oL2FDY_DL9War-k1j4HSDLH9Y3Bp9cH7Ev-PDYrHMXM/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Infrared Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;IRlib2&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This week we&#39;ll be making extensive use of the IRlib2 Arduino library to both receive commands from an infrared remote control, and to send commands back our to infrared devices. You can &lt;a href=&#34;https://github.com/cyborg5/IRLib2&#34;&gt;download the library from its GitHub page&lt;/a&gt; by clicking on &lt;strong&gt;Clone or Download&lt;/strong&gt; in the upper-right corner. You can add this library to your sketch in the Arduino IDE by selecting Sketch &amp;gt; Include Library &amp;gt; Add .Zip Library from the menus, and selecting the downloaded Zip file.&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Examples&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We&#39;ll be making use of a number of the examples that come with the IRLib2 library this week, namely the &lt;strong&gt;dump, send, rawRecv, and rawSend&lt;/strong&gt; examples. These will be our starting point for exploring IR transmission and reception.&lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LCD_RGB&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We&#39;ll modify the code we finished with last week to control an RGB LED with our infrared remote, and display the levels of the red, green, and blue components on an LCD screen&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/e60951492760d652061459b1d855e749&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;p class=&#34;post-paragraph&#34;&gt; &lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LCD_RGB_Type&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We&#39;ll further modify our setup by adding the number keys to our remote,  allowing the user to &#34;type&#34; in a specific value for the red, green, and blue values&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/92b51b09b79b2d760b432f4363951523&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;p class=&#34;post-paragraph&#34;&gt; &lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;DVD_Control_Raw.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We demonstrate the capture and replay of raw timing values to capture parameters from an unknown remote, to replay its value back into a DVD player.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/0d167d5033b9db5e4e6707fb6d262700&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;p class=&#34;post-paragraph&#34;&gt; &lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;DVD_Control_Values.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We demonstrate capturing decodable values from a remote, and playing them back to control the DVD player from the Arduino.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/8cf578a56c52bdc295601f4c68e8eeff&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;p class=&#34;post-paragraph&#34;&gt; &lt;/p&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LED Candles&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We&#39;ll walk through the code used to read a DMX input and transmit IR commands to control a series of candles. Hopefully we can do this as a physical demo as well...&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;IR-Sketch.ino&lt;/strong&gt;&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/29924af2805b960019974ea8772ba6b7&#34;&gt;Click here to view code on Github&lt;/a&gt;

&lt;p class=&#34;post-paragraph&#34;&gt;&lt;strong&gt;Dmx-Receive.ino&lt;/strong&gt;&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/ce06b0f4a82e494ac1bd0e248aab8bd3&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - Arduino #7- Text Displays and Multicolor LEDs</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb7/</link>
      <pubDate>Fri, 01 May 2020 20:07:23 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb7/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/05/5-3-20-Thumb.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-1006 size-large post-img&#34; height=&#34;405&#34; src=&#34;5-3-20-Thumb-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;In this stream, we&#39;ll be looking at:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Driving Arduino text displays based around the popular H44780 display IC&lt;/li&gt;
&lt;li&gt;Driving multicolor LEDs (bi-color, RGB) and strategies for managing and transitioning color.&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. You can expect the code and formatting here to change up to a couple hours before the stream as the plan for the evening comes together.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1PjtHKvp7Qh1Hk2GHOO__g8GiA1lD9Cfapu5nrv6jnkE/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;LED Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;RGB_Set.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;A basic bit of code to send Red, Green, and Blue values to an RGB LED.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/e832b2774b1c55804f11faea0cc3d30c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;RGB_Color Wheel.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Contains a basic function to map an angle between 0 and 360 degrees on the color-wheel to an output value on an RGB LED.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/90849853bccd09b9b0ad975dca5f4479&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;RGB_HSV.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Demonstrates an algorithm to map Hue/Saturation/Value colors to RGB ones&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/514798642f0496ef7959c0e8575a7386&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Bicolor_Step.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Steps back and forth between the two colors in a (multi-lead) bicolor LED.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/14953e2ef1e9f01678470f27d84a607a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Bicolor_Fade&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Fades back and forth between the two colors of a (multi-lead) bi-color LED.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/a0becbbe1b4742a869bede9ee6ebe575&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;LCD Display Code&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LCD_HelloWorld.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Initializes our LCD display and prints a simple message and timeclock on it. The HelloWorld example from the Arduino IDE.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/5376848b02dc5be623d9bb4e9dd553dd&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LCD_MockInterface.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;A fake display for the RPM of a motor - we generate the data randomly, but could easily be adapted to show the value from a sensor or potentiometer.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/57d1df7c233ecf5459db35c3225ef09e&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LCD_CustomChar_Intro.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Introduces the idea of adding custom characters to the LCD, and doing some fun things with them.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/ea7dbfc15f7125230d85e7939b46641d&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LCD_Character_Sets&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Rolls through all the printable characters in a given LCD module, to help identify which kind of module/font you have.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d19a2110eb8de4122cf7f6c553e2ae02&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LCD_ProgessBarNums.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;A simple progress bar graphic using 5 custom symbols to fill up a line from left to right.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/512416bca5d2c517024fa2dd8068286a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LCD_WaveDemo.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Creates a wave which rolls back and forth across the display using 8 characters.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d00082c8df1bf931befaf706e9ae6b75&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;LCD_RGB.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Combining our two topics for tonight, we&#39;ll use the LCD to show us the values that are being output to our RGB LED.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/8e5eed0e46c455d0c51db57fe9e23e10&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - Arduino #6- Putting it Together</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb6/</link>
      <pubDate>Wed, 22 Apr 2020 20:57:52 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb6/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/04/Putting-it-Together-Thumb.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-992 size-large post-img&#34; height=&#34;405&#34; src=&#34;Putting-it-Together-Thumb-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;In this stream, we&#39;ll be looking at:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Driving LED Matrices&lt;/li&gt;
&lt;li&gt;Using Shift registers to expand input and output capabilities&lt;/li&gt;
&lt;li&gt;Tying together input, output, and processing into a cohesive game&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. You can expect the code and formatting here to change up to a couple hours before the stream as the plan for the evening comes together.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1qYqruQui8BE8nnygL2KKB7LVhQR-CeZr3u7R5vYw3Sg/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Shift Register Demos&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:984,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-984 post-img&#34; src=&#34;Scm_Reg1-1024x459.png&#34;/&gt;&lt;figcaption&gt;This circuit will be used for the following code examples:&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;shiftBasic&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Demonstrates the basic usage of the shiftOut() function to send a byte of data out to a shift register.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/20596cf3ab00792508f9e556d1aad62b&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;shiftFunction&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We&#39;ll wrap our shiftOut() usage into a function we&#39;ve written to keep things clean and concise.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/c419c96dfb558c0fd08fb105a5a2b32e&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:image {&#34;id&#34;:985,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-985 post-img&#34; src=&#34;Scm_Reg2-1024x642.png&#34;/&gt;&lt;figcaption&gt;This circuit will be used for the following code examples:&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;shiftInt&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;When writing out two bytes in a row, we can do two things. First, we can store both bytes as an int to keep them together by multiplying one of the bytes by 256. Second, we can delay latching the data in until both bytes are written using a new function called sendIntOut() that we&#39;ve written.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/394a5bf559b92c9bfa1bbef253ba0c28&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;LED Matrix and Gameplay&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:991,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-991 post-img&#34; src=&#34;scm_Arduino_matrix-1024x400.png&#34;/&gt;&lt;figcaption&gt;This circuit will be used for the following code examples:&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;A_Pins.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Take our basic display code with shift registers as a starting point for our game code.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/cf8b5b6acd961fe6634c7a37cf93b3a4&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;B_DisplayConstants.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Add some implementation-specific definitions for which bit on our shift register is connected to which Row/Column of the matrix. Includes a 2D array as well.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/4bb3e0abafc955b2ca9a735dcf62f731&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;TwoD_Array.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;A small bit of code to illustrate 2D arrays, since this is the first time we&#39;re seeing them.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/7ae59891d270ce37fe5703be0da2a16b&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;C_Multiplex.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Create a full 8x8 LED display by sequentially running displaying each row of the display at high speed.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/dab381b4c9fadfe8785158a2628acef5&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;D_Gamestart.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We start to build the code for our actual game - thinking about how we&#39;ll represent our game within our 2D array data structure, and what variables we&#39;ll need to use to capture that data. Also we start thinking about initializing that data at the start of the game.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the point where our little Snake will start moving (in one direction) around the display!&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/a82a1bcaa3bf1c5f35c919445ca1fd96&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;E_Input.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We write some simple code to accept input from 4 directional buttons&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/4ccf855ede2b2c04240e85504a4cad52&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;F_Input2.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;We tidy up the previous code using a new function that will set the direction of our snake for us.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/0bacf7d822368d16772182f9e2583fb8&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;G_Food.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Now the board has a piece of food on it for our snake to see (but not yet eat). We modify the gameplay and display code to account for this, and make use of the random() function to put the food in a random place each time.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/6ef4fc474e37bec29ebdf1d57035bded&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;H_Eatfood.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Now the snake can eat the food! We modify our gameplay code, and show how we can reuse the function that originally placed our food to give it a new spot on the board. We also add a function to allow our snake to grow by 1 each time we eat a piece of food.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/44a7763831574c84cee5646ef6f0a111&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;I_Walls.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Up till now, the snake could slide right off the board at any time. We add a new function, isValidPosition(), to see if the snake should be able to move ot its next position before it actually moves tehre.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/61034bb4cfc500cb2051aea2a8b887c2&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;J_Gameover.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;A game isn&#39;t much of a game without a fail state. We&#39;d add some checking so that if the snake collides with itself, it&#39;s gameover and we see a frowny face.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/2428de6e1d84eb0fc7a08bf03ad43a26&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;K_RandomStart.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Rather than start in the same place each time, we&#39;ll incorporate some more randomness to have the snake start in a random position. We&#39;ll use a loop structure that picks a starting position and direction for the snake, sees if it&#39;s valid, and if it&#39;s not, pick a new one!&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/5e7ad35042fd94b2480ff7fe1316ec92&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;L_Cornerfix.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;One last pernicious bug - when our snake is in a corner, the input-logic allows it to &#34;turn,&#34; but then it&#39;s still stuck. The new logic eliminates this edge case.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/b29377bf7ec62ea386778e499cc1fd2f&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Z_Final.ino&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;The completed snake game! If you&#39;re interested in just browsing the completed code, you can find it here.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/747dac815e41b2adedc32973bf979031&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;https://jeff.glass/electronics-bash/&#34;&gt;&amp;lt;&amp;lt; Return to all Electronics Bash Information&lt;/a&gt;&lt;/h3&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - Arduino #5 - Transistors and FETs</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb5/</link>
      <pubDate>Wed, 15 Apr 2020 19:38:42 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb5/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/04/4-19-2020-Thumb.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-936 size-large post-img&#34; height=&#34;405&#34; src=&#34;4-19-2020-Thumb-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;In this stream, we&#39;ll be looking at:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Using transistors and FETs, including:
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;What the heck are they?&lt;/li&gt;
&lt;li&gt;How can they be used to drive: LEDs, lamps, motors, ETC&lt;/li&gt;
&lt;li&gt;How to hook them up to an Arduino&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Higher voltage inputs using resistor dividers&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. You can expect the code and formatting here to change up to a couple hours before the stream as the plan for the evening comes together.&lt;br/&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1OplYHV6XrdVYj9kiXdESbnMUgHYRSgnMB3K1EN8cI8I/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Bipolar Transistors&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:946,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-946 post-img&#34; src=&#34;trans_circuit1.png&#34;/&gt;&lt;figcaption&gt;This circuit will be used for the following code examples:&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Blink&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Literally just the blink example straight from the Arduino IDE:&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/35610b2cccc2f75b447e98f91368d63c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:image {&#34;id&#34;:949,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-949 post-img&#34; src=&#34;pnp-demo.png&#34;/&gt;&lt;figcaption&gt;This circuit will be used for the following code examples:&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Blink&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Literally just the blink example straight from the Arduino IDE:&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/35610b2cccc2f75b447e98f91368d63c&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:image {&#34;id&#34;:951,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-951 post-img&#34; src=&#34;hbridge-1024x520.png&#34;/&gt;&lt;figcaption&gt;This circuit will be used for the following code examples:&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;H-Bridge&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code controls the H-bridge circuit above. It will rotate the motor in each direction for 1 second in alternation.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/782cb526999f86f06bc6d38bf89e9b75&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:image {&#34;id&#34;:953,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-953 post-img&#34; src=&#34;arduino-7-segment-display-4-digit-uno-1024x570.png&#34;/&gt;&lt;figcaption&gt;This circuit will be used for the following code examples:&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;4 Digit 7-Segment Display&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code will drive a 4-digit 7-segment display wired (mostly) as above. &lt;strong&gt;Note: &lt;/strong&gt;you can connect the PNP transistors and the current limiting resistors/cathodes to any 12 digital pins you like, but be sure to match the connections in your code. &lt;em&gt;The pins in the code below do not necessarily match the diagram.&lt;/em&gt;&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/4cc20e38c403c60a5a080361561bf6a6&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;https://jeff.glass/electronics-bash/&#34;&gt;&amp;lt;&amp;lt; Return to all Electronics Bash Information&lt;/a&gt;&lt;/h3&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - Arduino #4- Electricity Fundamentals</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb4/</link>
      <pubDate>Wed, 08 Apr 2020 19:25:14 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb4/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/04/4-12-Thumb.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-908 size-large post-img&#34; height=&#34;405&#34; src=&#34;4-12-Thumb-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;In this stream, we&#39;ll be looking at the fundamentals of working with electricity, including essential principles like: voltage, current, power, and resistance. We&#39;ll be demonstrating these physical phenomena using practicals examples with freeform circuits as well as doing some examples with the Arduino.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. You can expect the code and formatting here to change up to a couple hours before the stream as the plan for the evening comes together.&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;For the first part of this evening, &lt;strong&gt;all the the circuit diagrams can be found in the slides:&lt;/strong&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://docs.google.com/presentation/d/1ET123r7AsD3VfesjJZ6-QZW63ZZ89ZypRsw0MYdNY7w/edit?usp=sharing&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter wp-image-921 post-img&#34; height=&#34;214&#34; src=&#34;streamslides.png&#34; width=&#34;500&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;7-Segment Display Driving&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;em&gt;The following code examples will use the following circuit layout&lt;/em&gt;:&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;!-- wp:paragraph --&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;&lt;img class=&#34;post-img&#34; height=&#34;365px;&#34; src=&#34;77GlbVvGl5NWPjTbnXNGmqVeaQ8zqqd0XEofnJAxRHY-A0eJCTi5G_hoM7Gia6Br1Pp8q_GOtGILbp1gRolVH1phKePl9988VyloOAx9UwKVN1jWURnCh-qNtZZHD54ZTZuHnP8GD24&#34; width=&#34;748px;&#34;/&gt;&lt;/p&gt;
&lt;!-- /wp:paragraph --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;7-Segment Manual Contral&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Shows the basic driving of a single, common anode 7-segment display. Not a recommended way of driving these, but a starting place for illustration purposes. This demo makes use of a common-anode LED display - if using a common-cathode display, replace all instances of LOW with HIGH and HIGH with LOW.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d743be0cbea01ab9d3de0f52f358389d&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;7-Segment w/ Arrays&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Shows the basic driving of a single, common anode 7-segment display - exactly the same functionality as the code above, but making use of an array of the pin numbers to radically condense and simplify the code.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/92c4782010eb1ab9c8edca681750474a&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;7-Segment Digits - Basic&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Starting to display digits on a single 7-segment display using hardcoded digitalWrite commands to display each digit. Again, not a recommended method, but a building block for what comes later.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/3a56c3eea1f5c03f8167b63a0a9dd1c0&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;7-Segment Digits - Bytes&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Starting to display digits on a single 7-segment display, but with the segment data encoded into an array of bytes. &lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/51d8fa112491b6c8575aa18358ad51f0&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;https://jeff.glass/electronics-bash/&#34;&gt;&amp;lt;&amp;lt; Return to all Electronics Bash Information&lt;/a&gt;&lt;/h3&gt;</description>
      &lt;
    </item>
    
    <item>
      <title>Electronics Bash - Arduino #3 - Steppers and Servos</title>
      <link>https://jeff.glass/project/electronics-bash/ebash-pages/eb3/</link>
      <pubDate>Fri, 03 Apr 2020 02:59:36 -0500</pubDate>
      
      <guid>https://jeff.glass/project/electronics-bash/ebash-pages/eb3/</guid>
      <description>&lt;p class=&#34;post-paragraph&#34;&gt;&lt;a href=&#34;https://jeff.glass/wp-content/uploads/2020/04/4-5-Thumb.png&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;aligncenter size-large wp-image-854 post-img&#34; height=&#34;405&#34; src=&#34;4-5-Thumb-1024x576.png&#34; width=&#34;720&#34;/&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;In this stream, we&#39;ll be looking at:&lt;/p&gt;
&lt;ul class=&#34;post-ul&#34;&gt;
&lt;li&gt;Stepper motor control&lt;/li&gt;
&lt;li&gt;Serial control&lt;/li&gt;
&lt;li&gt;The DO...WHILE loop&lt;/li&gt;
&lt;li&gt;randomness and the random() funciton&lt;/li&gt;
&lt;li&gt;Probably more!&lt;/li&gt;
&lt;/ul&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This is the space where I&#39;ll be posting code samples and circuit layouts sometime in advance of the stream, for those who want to follow along more directly. This is the first stream I&#39;ll be doing this for, so you can expect the formatting and content here to change significantly over time as I figure out how to lay out this space.&lt;/p&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Servo Motor Control&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image {&#34;id&#34;:882,&#34;width&#34;:343,&#34;height&#34;:163,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large is-resized&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-882 post-img&#34; height=&#34;163&#34; src=&#34;image-e1586031462784-1024x489.png&#34; width=&#34;343&#34;&gt;&lt;figcaption&gt;This circuit will be used for the following code examples:&lt;/figcaption&gt;&lt;/img&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Servo Basic&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;Shows the basic functionality of a Servo attached to pin 9. Steps from 0, to 90 degrees, to 180 degrees and back, pausing for 1 second in between each position.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/9ccac54534bc9c9303a7365ed2416668&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Servo Sweep&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code will sweep the Servo attached to pin 9 back and forth between 0 and 180 degrees using a pair of FOR loops. This is literally the Servo &amp;gt; Sweep example from the Servo library.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/d49f7b5426ecf138f127a5de79077074&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;
&lt;!-- wp:image {&#34;id&#34;:883,&#34;width&#34;:357,&#34;height&#34;:156,&#34;sizeSlug&#34;:&#34;large&#34;} --&gt;
&lt;figure class=&#34;wp-block-image size-large is-resized&#34;&gt;&lt;img alt=&#34;&#34; class=&#34;wp-image-883 post-img&#34; height=&#34;156&#34; src=&#34;image-1-1024x450.png&#34; width=&#34;357&#34;/&gt;&lt;figcaption&gt;SERVO CIRCUIT 2. This circuit will be used for the following examples:&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Servo Knob&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code will control the position of a Servo attached to pin 9 using the position of a potentiometer attached to pin A0. This is literally the Servo &amp;gt; Knob example from the Arduino IDE.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/fc745949d8419b95136de417fd7d45b4&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Servo Random&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code will control the position of a Servo attached to pin 9 in a random fashion, demonstrating the random() and randomSeed() functions to generate random numbers:&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/6a78ebd8bb5141ae5a250a4d08f0ea38&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:heading --&gt;
&lt;h2 class=&#34;post-h2&#34;&gt;Stepper Motor Control&lt;/h2&gt;
&lt;!-- /wp:heading --&gt;
&lt;!-- wp:image --&gt;
&lt;figure class=&#34;wp-block-image&#34;&gt;&lt;img alt=&#34;Arduino bipolar stepper motor control circuit&#34; class=&#34;post-img&#34; src=&#34;arduino-bipolar-stepper-motor-control-circuit-1024x471.png&#34;/&gt;&lt;figcaption&gt;This circuit will be used for the following test code:&lt;/figcaption&gt;&lt;/figure&gt;
&lt;!-- /wp:image --&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Stepper Knob&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code will control the position of a stepper attached to pins 8, 9, 10, and 11 as shown in the diagram above, using the attached potentiometer. This is literally the Stepper &amp;gt; MotorKnob example from the Arduino IDE.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/84932eca87b63deee58aa4f2d2042ffb&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Stepper Speed Control&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code will control the position of a stepper attached to pins 8, 9, 10, and 11 as shown in the diagram above, using the attached potentiometer to control the speed. This is literally the Stepper &amp;gt; speedControl example from the Arduino IDE.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/e198178f9ed1943d7c2724f9f390d600&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Stepper Homing&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code will control the position of a stepper attached to pins 8, 9, 10, and 11 as shown in the diagram above, using a microswitch attached to pin D4 to set a &#34;home&#34; position:&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/2776e68550f046925634ed6dc486d7d8&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Button Drive &lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code will control the position of a stepper attached to pins 8, 9, 10, and 11 as shown in the diagram above, using a pair of buttons attached to pins 6 and 7.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/9025c83d9b3a6fa06c4a400b2b4e5296&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;h4 class=&#34;post-h4&#34;&gt;Button Go-Stop&lt;/h4&gt;
&lt;p class=&#34;post-paragraph&#34;&gt;This code will control the position of a stepper attached to pins 8, 9, 10, and 11 as shown in the diagram above, using a pair of buttons attached to pins 6 and 7. It will turn in one direction when one button is pressed, turn the other when the other button is pressed, and stop when both buttons are pressed.&lt;/p&gt;
&lt;a href=&#34;https://gist.github.com/JeffersGlass/6c6ab91ab82add57f3eb3be09d5c3620&#34;&gt;Click here to view code on Github&lt;/a&gt;
&lt;!-- wp:separator --&gt;
&lt;hr class=&#34;wp-block-separator&#34;/&gt;
&lt;!-- /wp:separator --&gt;
&lt;h3 class=&#34;post-h3&#34;&gt;&lt;a href=&#34;https://jeff.glass/electronics-bash/&#34;&gt;&amp;lt;&amp;lt; Return to all Electronics Bash Information&lt;/a&gt;&lt;/h3&gt;</description>
      &lt;
    </item>
    
  </channel>
</rss>