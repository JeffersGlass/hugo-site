<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

	<!-- generator="WordPress/5.8.2" created="2021-11-23 18:36" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.2/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.2/"
>

<channel>
	<title>JeffJeffGlassGlass</title>
	<link>https://jeff.glass</link>
	<description>Projects and experiments in 3D printing, amateur radio, technical theatre, and more.</description>
	<pubDate>Tue, 23 Nov 2021 18:36:18 +0000</pubDate>
	<language>en-US</language>
	<wp:wxr_version>1.2</wp:wxr_version>
	<wp:base_site_url>https://jeff.glass</wp:base_site_url>
	<wp:base_blog_url>https://jeff.glass</wp:base_blog_url>

		<wp:author><wp:author_id>1</wp:author_id><wp:author_login><![CDATA[JGlass]]></wp:author_login><wp:author_email><![CDATA[admin@jeff.glass]]></wp:author_email><wp:author_display_name><![CDATA[JGlass]]></wp:author_display_name><wp:author_first_name><![CDATA[]]></wp:author_first_name><wp:author_last_name><![CDATA[]]></wp:author_last_name></wp:author>

				
	<generator>https://wordpress.org/?v=5.8.2</generator>

<image>
	<url>https://jeff.glass/wp-content/uploads/2020/12/cropped-FrontalP-1-32x32.jpg</url>
	<title>JeffJeffGlassGlass</title>
	<link>https://jeff.glass</link>
	<width>32</width>
	<height>32</height>
</image> 

		<item>
		<title><![CDATA[Collins 250kc Filter]]></title>
		<link>https://jeff.glass/?p=220</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=220</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>220</wp:post_id>
		<wp:post_date><![CDATA[2018-05-25 05:45:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-05-25 05:45:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-05-25 05:45:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="filter"><![CDATA[Filter]]></category>
		<category domain="post_tag" nicename="ham-radio"><![CDATA[Ham Radio]]></category>
		<category domain="post_tag" nicename="homebrew-radio"><![CDATA[Homebrew Radio]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[sACN Level Monitor]]></title>
		<link>https://jeff.glass/?p=246</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=246</guid>
		<description></description>
		<content:encoded><![CDATA[A few weeks ago, a colleague down at Santa Fe opera reached out to me with an interesting challenge: could I build an sACN level display for their spotlight operators?

For background: the lighting department had purchased a number of network-attached slider controls that attached to their lighting network that lived at their spot-op stations. The sliders control the spotlight dimmers over the network, which means the the spots can also be optionally controlled by the light board as well. But this meant that the level of the spot wasn't necessarily directly related to the physical position of the sliders any more. Thus, the need for a digital device that would read the spot level off the network and pop it up on a local display.

<strong>A little primer on sACN and DMX:</strong>

The network protocol in question is known as Streaming <a href="https://en.wikipedia.org/wiki/Architecture_for_Control_Networks">Architecture for Control Networks</a>, or sACN, or sometimes E1.31 after the <a href="http://tsp.esta.org/tsp/documents/docs/E1-31-2016.pdf">ESTA standard</a>. sACN is essentially a wrapperfor <a href="https://en.wikipedia.org/wiki/DMX512">DMX512</a>-style data

The DMX512 dates back to the early 90's, and it defines both the physical interface and the signal specificiations by which lighting data is distributed. In DMX512, a single, serial-like stream of up to 512 8-bit values is carried within a given "Universe." Up until 10 years ago, almost all lighting data was run over 5-wire cables via the DMX protocol, where a single cable would carry one Universe of information. Even today, most endpoint lighting devices (moving lights, etc) expect to receive data in this serial-like protocol, as opposed to over a network. A common lighting data distribution system, then, consists of a widely distributed Ethernet network to which "DMX Nodes" are attached, which convert sACN traffic on the network into "hard" DMX on a five-wire cable.

Of course, if you have a device that can slurp data straight off a lighting network and you have plenty of network distribution onsite, it's typically much cheaper to tap into the network than invest in the (somewhat bespoke) hardware to convert that data back to DMX.

<strong>Back to the Build</strong>:

After a couple of false starts, the final build centers around an Arduino Mega 2560, an <a href="https://www.adafruit.com/product/2971">Arduino Network Shield v2 (</a>with the W5500 chipset), and a <a href="https://www.adafruit.com/product/2719">128x64 monochrome display</a>. I originally had used an Arduino Uno, but quickly ran out of both program memory (with both the networking and graphics library squeezed in) and SRAM (trying to buffer the display of 2^13 pixels), so I moved up to a Mega.

I originally planned on using the <a href="https://github.com/forkineye/E131">E1.31 Library</a> that I'd used previously to transmit sACN, only to discover that multicast sACN reception was yet-to-be-implemented! D'oh!

<img class="aligncenter size-full wp-image-247" src="https://jeff.glass/wp-content/uploads/2018/08/dang.png" alt="" width="489" height="89" />

Thankfully, Claude Heintz's excellent <a href="https://github.com/claudeheintz/LXDMXEthernet_library">LXDMX library</a> is kitted out with that ability, and worked well pretty much out of the box, once the appropriate modifications to the Ethernet library were made, WITH ONE KEY FLAW (see below). The <a href="https://learn.adafruit.com/adafruit-gfx-graphics-library">Adafruit_GFX library </a>provides the basis for the graphical display.

While originally we had planned on having the parameters of the device (spot number, DMX universe, and DMX address) be hardcoded separately and uploaded into each device, I ended up implementing a basic menu system to allow users to set those parameters on the fly. Currently, the only legwork that needs to be done at compile-time is to enter the MAC address of Ethernet hardware and select whether the device should have a static IP or get one via DHCP.

Here's a short video of the prototype.

xxxxxxxxx

<strong>A Key Flaw</strong>

Once the bulk of the coding on this project was complete and preliminary testing was done, I elected to test the device for a couple more edge cases. And I'm glad I did! I caught a subtle and interesting bug in the LXDMX library relating to how HTP-behavior was being handled.

HTP, or <em>Highest Takes Precedence</em>, is one way of resolving the issue of having multiple]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>246</wp:post_id>
		<wp:post_date><![CDATA[2018-08-30 13:20:24]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-08-30 13:20:24]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-08-30 18:20:24]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="3d-printing"><![CDATA[3D Printing]]></category>
		<category domain="post_tag" nicename="arduino"><![CDATA[Arduino]]></category>
		<category domain="post_tag" nicename="dmx"><![CDATA[DMX]]></category>
		<category domain="post_tag" nicename="sacn"><![CDATA[sACN]]></category>
		<category domain="post_tag" nicename="theater"><![CDATA[Theater]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Particle Xenon and Argon]]></title>
		<link>https://jeff.glass/?p=271</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=271</guid>
		<description></description>
		<content:encoded><![CDATA[Unboxed

Pretty packaging - love the look and feel. The resealable backs are somewhere between paper and plastic, very satisfying.

Quickstart was easy to find

Set up through App on the phone.

Asked to update firmware, that was painless

Asked to connect to mesh network, but I hadn't created any yet. "Select Mesh Network to Join" on screen with spinning circle.

Perhaps doing Argon setup first.

Argon - plugged in uFL connector (TINY!), also did firmware update. Took about  5 minutes to update firmware.

Asked if wanted to create mesh network? Yes.

"Woohoo! This network is on us" 10 Free gateway networks

(From reading forums, only 1 gateway per network for now, "High Availability" (multiple gateway) networks coming soon)

Paired Xenon to the same network

Open web IDE, opened blink sketch. Had to refresh page to get the device list.

Select a device with it's Star. Has an option to flash the LED on the device (NICE!)

The Lightnight button is the FLASH button, but if you have noo devices selected, it also opens the Devices window without telling you it's the devices window, which is confusing the first time.

Flashed program - took about 8 seconds, worked! Switched to argon, flashed, also success.

Web Connected LED: Go to Console, go to Devices, Select the Device. Lower right hand side of the screen has a Functions window with an input box. Input "on" and hit enter, LED turns on! Woohoo!

Uploaded function variable. Display in console did not auto-update.]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>271</wp:post_id>
		<wp:post_date><![CDATA[2018-12-01 07:13:22]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2018-12-01 07:13:22]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2018-12-01 13:13:22]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Lighting Control Protocols]]></title>
		<link>https://jeff.glass/?p=306</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=306</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>The world of stage lighting - from skits in a 20-seat house to giant stadium tours -</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>First, some terminology:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li><strong>Dimmer:</strong> A device with an electrical input and output, which controls the amount of current flowing through it in response to external control (physical, electrical, electronic, etc.) EX: <a href="https://www.etcconnect.com/Support/Dimming-Switching/Sensor/">Sensor</a>/<a href="https://www.strandlighting.com/global/products#page=1&amp;filters=Lighting+category%2FPower+and+Dimming%2C">Strand </a>dimming; <a href="https://en.wikipedia.org/wiki/Potentiometer#Rheostat">rheostat dimming</a>.</li><li><strong>Lamp</strong>: A fancy word for light bulb. Usually refers to a bulb made specifically for stage use, as opposed to household 'bulbs.'</li><li><strong>Parameter:</strong> A single axis of control, with respect to one lighting fixture.  Often specified within a one-byte range (for reasons which will become clear), so a parameter often has 256 possible values. </li><li> <strong>Lighting Fixture or Instrument:</strong> A device which emits light. Usually refers to a product specifically made for stage usage, i.e. a table lamp is a 'light,' a <a href="https://www.etcconnect.com/Products/Lighting-Fixtures/Source-Four/">Source 4</a> is an 'instrument.') <ul><li><strong>Conventional Lighting Instrument: </strong>A fixture which consists of a lamp (usually tungsten-based) and a housing or lenses to shape the output of that lamp, with no other controllable or moving parts. Often powered by a dimmer to provide variation in brightness. Often abbreviated to just 'conventional.' </li><li>Intelligent Lighting Fixture: A fixture which has multiple parameters, some of which are</li></ul></li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>306</wp:post_id>
		<wp:post_date><![CDATA[2019-02-18 10:27:40]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-02-18 10:27:40]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-02-18 16:27:40]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Touchscreen Lighting Controller]]></title>
		<link>https://jeff.glass/?p=363</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=363</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p>Getting the Touchscreen working:</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This Touchscreen:  <br><a href="https://www.aliexpress.com/item/3-2-3-2-inch-240X400-TFT-LCD-Touch-Screen-Expansion-Shield-LED-Display-Module-5V/32892795591.html?spm=a2g0s.9042311.0.0.69664c4dxMFgL2">https://www.aliexpress.com/item/3-2-3-2-inch-240X400-TFT-LCD-Touch-Screen-Expansion-Shield-LED-Display-Module-5V/32892795591.html?spm=a2g0s.9042311.0.0.69664c4dxMFgL2</a> </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Download OPENSMART-TFT library here:  <br><a href="https://github.com/fdufnews/OPENSMART_TFT">https://github.com/fdufnews/OPENSMART_TFT</a> </p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Include mcufriend_Shield.h</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>363</wp:post_id>
		<wp:post_date><![CDATA[2019-04-10 23:56:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-04-10 23:56:13]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-04-11 04:56:13]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Chester Electrnoics Display]]></title>
		<link>https://jeff.glass/?p=623</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=623</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
 	<li>4 @ <a href="file:///C:/Users/robos/Downloads/LC9401D_v.pdf">Sanyo LC79401 / 1FBV Chips</a>
<ul>
 	<li>Display Driver, latches 80 bits of data in 4-bit parallel transfer</li>
 	<li>Appear to be directly connected to "rows"</li>
</ul>
</li>
 	<li>3 @ <a href="http://dtsheet.com/doc/309499/sanyo-lc79400">LC79430 / 1DGB Chips</a>
<ul>
 	<li>Display Driver, latches 80 bits of data in 4-bit parallel transfer</li>
 	<li>Appear to be directly connected to "columns"</li>
</ul>
</li>
 	<li>2 @ MT62C256F-70LL Chips
<ul>
 	<li><a href="https://www.bonanza.com/listings/GM76c256CLLFW-55W-Hyundai-256K-32Kx8-Static-RAM-MT62C256-62C256-SOP-28-IC-10pcs/654805849?goog_pla=1&amp;gpid=293946777986&amp;keyword=&amp;goog_pla=1&amp;pos=2o3&amp;ad_type=pla&amp;gclid=Cj0KCQiA2b7uBRDsARIsAEE9XpEBDmU79Iu51I78GiPD9ronrF37DFrCR5wTWzIdJbJXXxbKOa9b9McaAvFwEALw_wcB">Maybe 256K, 32K x 8 static ram??</a></li>
</ul>
</li>
 	<li>2 @ 74HC245 Chips
<ul>
 	<li>Tri-State Octal bus Transceiver/buffer</li>
</ul>
</li>
 	<li>2 @ LV244
<ul>
 	<li><a href="https://assets.nexperia.com/documents/data-sheet/74LV244.pdf">Tri-state octal buffer</a></li>
</ul>
</li>
 	<li>"CPU"
<ul>
 	<li>Label says D1C202A10 / M423-GB</li>
</ul>
</li>
 	<li>Text on white Sticker:
<ul>
 	<li>1C290503A320</li>
 	<li><a href="https://detail.en.china.cn/provide/pic114899569.html">LMDDCS423CK</a></li>
</ul>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>623</wp:post_id>
		<wp:post_date><![CDATA[2019-11-16 20:46:38]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-11-16 20:46:38]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-11-17 02:46:38]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Backup]]></title>
		<link>https://jeff.glass/?p=629</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=629</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've been trying to count how many times I've set up an electronics workbench. Between 10 years working in lighting, video and special effects in theater, three home-moves and two <a href="https://jeff.glass/2019/03/03/home-office-overhaul/">independent bench-revemps</a>, and my new-this-month position as an Exhibit Engineer at a major Midwest science museum... it's quite a few. So on this long weekend, I've compiled the tools I think are most useful when building up a workspace for electronics construction and troubles</p>
<p>Between 10 years working in stage lighting, live video, and theatrical special effects; three moves and two <a href="https://jeff.glass/2019/03/03/home-office-overhaul/">home workbench-overhauls; </a>and my new-this-month position as an Exhibit Engineer at a major Midwest science museum, I've planned and kitted-out many electronics workbenches over the years. For those interested in getting involved in hobby or professional electronics work, I've compiled the tools I think are most useful when building up a workspace for electronics construction and troubleshooting.</p>
<p>I'm going to specifically focus on tools and support-hardware this time around, and not dive too deep into supplies and consumables, purely to maintain focus. The parts and pieces you need will be wildly different if your specific focus is <a href="https://twitter.com/jeriellsworth/status/1195900908049072128">scratch-building accelerometers</a> vs <a href="https://jeff.glass/2019/05/23/dmx-mini-moving-light-shield-v0-3/">twitter-connected instant cameras</a>, say. But in the wide and deep pool of 'working with electronics,' here are some flotation aids that will keep your head above water most of the time.</p>
<h3>Soldering</h3>
<p>As both hobbyists and professionals, we are often looking not for the best tool, but one that's good enough for the job without breaking the bank. If there's one tool that I'd recommend getting the 'good' versus the 'good enough' version, it's a <strong>soldering iron</strong>. I thought for years I was just bad at soldering. Nope, just a crappy $25 Radio Shack soldering iron that was doing me no favors.</p>
<p>Not that 'good' has to mean 'super expensive.' In my home shop and my current shop at work, I used the <a href="https://amzn.to/2DuvecD">Hakko 888D</a>, which has proved reliable and durable, even if the interface is a little unintuitive. For less than $100, that's a darn good iron. The shop at my previous job has a <a href="https://amzn.to/2OWP8CF">cheapie 3-in-1 soldering/hot-air-rework/power supply station</a>, and for most things that was just <em>fine. </em>They're such a huge leap above a 'soldering pencil,' and they'll last for years,</p>
[caption id="attachment_673" align="aligncenter" width="225"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8929-rotated.jpg"><img class="wp-image-673 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8929-225x300.jpg" alt="Hakko 888D" width="225" height="300" /></a> The trust Hakko 888D. I now have one of these at home and one at work, and they're a very nice little iron.[/caption]
<p>Whatever iron you choose, you'll want some <strong>additional tips</strong> to go with it. While you could get the <a href="https://amzn.to/2P5kC9Q">pack of every tip imaginable</a>, I find myself using either the medium chisel or the fine-conical %99.9 of the time, so <a href="https://amzn.to/2r2h4Nj">a smaller assortment</a> is probably fine.</p>
<p>As far as <strong>solder</strong>, while there are good environmental reasons to go with lead-free solder, there's nothing quite so good to work with as classic <a href="https://amzn.to/2OBtjcX">Kester rosin-core 60/40, nice and thin</a>. A one-pound reel of that stuff will last most people <em>years</em>. While you could buy a <a href="https://amzn.to/2DCC53L">solder-reel stand</a>, I've found a <a href="https://jeff.glass/2019/03/09/3d-printing-in-the-home-workshop/">3D-printed design</a> that I really like (credit to <a href="https://www.thingiverse.com/thing:960103">Phredie on Thingiverse</a>).</p>
[caption id="attachment_674" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8948.jpg"><img class="wp-image-674 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8948-300x225.jpg" alt="Roll of Solder on 3D Printed Stand" width="300" height="225" /></a> One pound of Kester 60/40 in my favorite 3D printed holder. As busy as we are, I might actually make in through this roll in a year or two.[/caption]
<p>You'll also want some <strong>flux</strong>, either <a href="https://amzn.to/35T3lHl">as a paste</a> or in my preferred form <a href="https://amzn.to/2rHoJk2">as a solder pen</a>. While rosin-core solder has flux built-in, any time you're doing rework, SMD work, or just taking a little longer to deal with a tricky part, flux makes sure your surfaces are clean and ready to accept the molten solder.</p>
<p>Speaking of keeping things clean, let's talk about <strong>cleaning your soldering iron tip</strong>. The sponge and <a href="https://amzn.to/35SyYkD">wire-wool cleaner</a> than come with your iron are plenty, if you treat your iron right. More aggressive chemical fluxes like those found in "<a href="https://amzn.to/33wfVLn">tip-tinners and cleaner</a>" are meant to remove long-built-up oxidation on your iron tip, and are overkill for routine tip-cleaning. I was taught to dab the iron in the wire-wool between each joint (realistically, between every several joints), and wipe on the sponge before the iron goes back in the stand. That should be all you need.</p>
<p>To remove solder from things other than your iron may take some special tools. <strong><a href="https://amzn.to/2DyQTQZ">De-soldering braid</a></strong> is a great tool - its a woven copper ribbon impregnated with flux, that, when heated against a solder joint, sucks the molten solder up via capilary action. For getting the last little bit of solder out of through-hole pads, <a href="https://amzn.to/2OYKgwL">a <strong>solder-sucker</strong></a> is the tool - find yourself a cheap one, they're all pretty much the same. At my last job, we purchased a <a href="https://amzn.to/2OYjkgL">cheap vacuum desoldering station</a>, which was fine, but mostly could have been replaced by solder-wick in 90% of applications. Perhaps a <a href="https://amzn.to/2Du8FoA">brand-name vacuum desoldering station</a> would have done the job better, but in any case when setting up my shop at the new job, I passed on this tool. For more thoughts on all these tools/techniques, <a href="https://www.youtube.com/watch?v=UwsGnO630vY">W2AEW</a> has a great video on desoldering if you find yourself in a pinch.</p>
<p>Whether your soldering or desoldering, you're going to be making some nasty fumes melting all that flux, so get yourself some kind of <strong>filtering fan</strong>. I've got a <a href="https://amzn.to/2L8wGpv">dirt-cheap Aoyue filter-fan</a> on my home bench, and both a <a href="https://amzn.to/2rCkS8b">cheap Kotto</a> and an<a href="https://amzn.to/2OXIlZo"> expensive Hakko</a> on my bench at work now, and they're all about as good as each other, and they all suck (not in the way you want a filter fan to suck). I replaced the fan in my Aoyue with a <a href="https://amzn.to/35PoTVm">120V 4" Muffin fan</a> (pulled from an closing musical's fog-distribution system, in my case), and it's made a world of difference, I highly recommend upgrading. Just be careful, those fans bite.</p>
[caption id="attachment_675" align="aligncenter" width="300"]<img class="wp-image-675 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8927-300x225.jpg" alt="Hakko FA-400 Fan" width="300" height="225" /> Now that's a big fan! Inherited from a previous museum exhibit.[/caption]
<p>There are about as many different kinds of <strong>work-holding clamps</strong> as there are people who solder, but my two favorites are this <a href="https://www.thingiverse.com/thing:21357">3D-printed PCB vise</a> for flat-work and these <a href="https://amzn.to/2R8qkdl">octopus-style 3rd-hands for other unusual shapes</a>. I've used the <a href="https://amzn.to/2R6nWDX">classic Panavise clamps</a>, and for a shared-shop environment I'd recommend them for their sturdy build quality. But I find them to be a little bit too bulky and their jaws not quite wide enough for the work I find myself doing, so I opt for other solutions in my just-for-me setups. You do you though.</p>
[caption id="attachment_687" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00056-scaled.jpg"><img class="size-medium wp-image-687" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00056-300x169.jpg" alt="" width="300" height="169" /></a> Almost 6" of jaw space on this 3D printed workholder. You can tell I ran out of grey filament halfway through printing the parts.[/caption]
<h3>Electronic Test and Measurement</h3>
<p>The two big items in this category are multimeters and oscilloscopes. Let's take a look at both of them first before we get into some more specialized tools.</p>
<p>There are lots and lots of good-enough <strong>multimeters</strong> in the world today, of all kinds of different brands, and they're pretty much going to all be OK. Rather than try and pick out specific ones from Amazon, here are the features I'd look for if I was looking to add a decent multimeter to my bench today:</p>
<ul>
<li>The basics: AC/DC Voltage, AC/DC Current (up to 10A is useful), resistance (to 0.1Ω and 1 MΩ is nice).</li>
<li>Continuity test- this is the most useful setting on a multimeter. Using this setting and touching a wire/component/circuit with the probes will tell you if there's a low impedance path between the two points; i.e., if they're connected. Super useful.</li>
<li>Auto power-off. Doesn't seem like much, but it's real easy to kill batteries without it.</li>
<li>4-digit precision (some cheap meters only give 3)</li>
</ul>
<p>The other features a meter might have include: temperature measurement, diode-forward-voltage measurement, True RMS AC measurement, frequency (power line), duty-cycle, capacitance, transistor hFE, illumination... the list goes on. I've appreciated having a true RMS measurement in tricky AC power situations, and having an easy frequency-check can be handy, but for the rest of these, I'd rather rely on a purpose-made tool like a thermometer, <a href="https://amzn.to/2OXmoty">lightmeter</a>, or <a href="https://amzn.to/2r2n6NX">transistor checker</a>, rather than something built into my multimeter.</p>
[caption id="attachment_688" align="aligncenter" width="169"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00059-scaled.jpg"><img class="wp-image-688 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00059-169x300.jpg" alt="Multimeter" width="169" height="300" /></a> I got this meter almost 8 years ago in a moment of need, at a Menards if memory serves, and it's worked swell ever since.[/caption]
<p>If you've got the cash and are looking for something to last 20 years, the <a href="https://amzn.to/2sy0SUz">Fluke 117</a> is a really solid primary meter. Fluke has been <em>the</em> brand name in quality meters for the past lots-of-years - well made, reliable, accurate. Not super cheap, but you do get what you pay for. My current department has standardized on them, and that's been swell. For most things, we don't need <a href="https://amzn.to/2Y0Q90F">the $300+ meter</a> (which gives you min/max tracking and microAmp measurement) or <a href="https://amzn.to/2OSDNmQ">the $500 meter</a> (with its fancy clamps and probes). In fact, a <a href="https://amzn.to/2DA9tZ9">basic $40 meter</a> is going to be fine for almost everything you do.</p>
<p>A little aside - why are there no benchtop-multimeters in the super-affordable price range? When you can get a passable, portable multimeter for $20, why are even the<a href="https://amzn.to/34BhIA5"> cheapie-versions of a benchtop meter</a> still $150? I think there would be a strong market for a $60, benchtop form-factor, ok-ish meter. I have an old Simpson 460-6 at work that I love using, not because it's the world's most amazing meter, but just because it's always <em>there</em> and the form factor is right. How about it, AliExpress?</p>
[caption id="attachment_689" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8937-rotated.jpg"><img class="size-medium wp-image-689" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8937-300x225.jpg" alt="Simpson 460-6" width="300" height="225" /></a> Now can I get this form factor, with a little adorable LED display, for less than $200?[/caption]
<p>Moving on to <strong>oscilloscopes</strong>, I think there are some who would say they aren't essential for electronics work - after all, if you end up working mostly with digital signals, or analog-voltages that don't change over time, is it really worth it? I would counter that the oscilloscope is your eyes into the realm of what your electronics are doing, and is a vitally useful tool in many situations. If you've never used an oscilloscope, may I once again recommend <a href="https://www.youtube.com/watch?v=067W7h1BhxE">a video by W2AEW.</a></p>
<p>Scopes are another arena where you don't need to break the bank to get something decent enough to use. My first scope was a well-aged <a href="https://www.scribd.com/document/364412737/BK-Precision-1535a">BK-Precision 1535A</a> 35Mhz analog scope that a bought from a guy on Craigslist for about $40. For basic electronics work, 20Mhz or so is plenty - you're most likely going to working at slower speeds (audio to 20Khz, maybe 250kHz for serial or RS485) or much, much higher (HDMI, USB, etc) where a scope really isn't the right tool in most cases anyway. Or at least, once you've progressed to the level where you're worrying about measuring GHz signals, you've likely acquired more specialized tooling along the way.</p>
[caption id="attachment_690" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00061-scaled.jpg"><img class="size-medium wp-image-690" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00061-300x169.jpg" alt="" width="300" height="169" /></a> This old thing is still puttering away on my workbench. Still worked just fine for most things I'd care to do with it.[/caption]
<p>I think a decent analog scope is a really good place to start if you've never used a scope before - better to tackle the fundamentals of the tool before having to learn how to use a particular menu structure as well. The shop at my new job came with a <a href="https://www.allaboutcircuits.com/test-measurement/oscilloscopes/compactscope-series-v-1565/">Hitachi V1565 100MHz analog scope</a> with measurement capability that I've been very happy with - the ability to add cursors to an analog display to measure voltage, time, or duty cycle is handy. At home I've now also got an <a href="https://amzn.to/35O2ZBV">Owon PDS5022T</a> 25MHz digital scope that was gifted to me - I like the tools having a digital scope provides, but I find it significantly more clunky than either of the classic analog scopes in my life.</p>
[caption id="attachment_676" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8930.jpg"><img class="wp-image-676 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8930-300x225.jpg" alt="Hitachi 1565" width="300" height="225" /></a> The "new" (to me) oscilloscpe I have at work. 100MHz bandwidth is overkill for anything I can think we'll run into, but you never know...[/caption]
<p>So, if you're looking for a bench scope and you've never used one before, I'd say start analog. I see on eBay right now you can buy a gently-loved 2-channel analog scope for around $50-60 (plus $40 shipping, those things aren't light). Not a bad way to go.</p>
<p>Something my accomplice at my old job turned me on to is <a href="https://www.amazon.com/s?k=portable+oscilloscope">small, portable oscilloscopes</a>. I don't have a specific model to recommend, but they can be useful in specific circumstances - not so much to actually interrogate the characteristics of a signal, but more as a signal checker. Do I have AC here, do I have something that looks like RS-485 there, etc? If you do buy one, make sure you get one with an integrated battery (not all do) - getting one that still has to be plugged in makes it far less useful.</p>
<p>There are some more niche electronic tools that I make use of on my bench, but mostly because of my <a href="https://kk9jef.wordpress.com/">ham radio background</a>. A decent <strong>frequency counter</strong> is useful in that arena - I've got a classic <a href="https://www.youtube.com/watch?v=okMwS4IXz5E">Heathkit IM-2420</a> that I picked up at a swap-meet, but I'm really intrigued by the new wave of <a href="https://amzn.to/2L8CJdv">inexpensive benchtop frequency counters</a> that have popped up in the past couple years that claim to do 0.1Hz-2.4GHz for only $70. A <strong>signal genetor</strong> is also really useful in my work - I <a href="https://kk9jef.wordpress.com/2017/07/10/si5351-signal-generator/">built my own</a> around an Si5351 and an Arduino, but you can buy a <a href="https://www.amazon.com/Generator-KKmoon-Precision-Dual-Channel-Arbitrary/dp/B071HJ31WN/ref=sr_1_7?keywords=function+generator&amp;qid=1575140813&amp;sr=8-7">0-25Mhz</a> or <a href="https://amzn.to/35QquKJ">0-60Mhz arbitrary function generator</a> for not a lot of cash these days, and I have colleagues who speak highly of both. Since my last job was more lighting-focused, we purchased an<a href="https://amzn.to/2rFIskp"> Extech <strong>digital lightmeter</strong></a> for a specific project - sometime I'd love to get into why that specific meter and the challenges of metering LED sources, but that discussion is too long for this margin to contain.</p>
[caption id="attachment_692" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00063-scaled.jpg"><img class="size-medium wp-image-692" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00063-300x169.jpg" alt="" width="300" height="169" /></a> Some specialized tools for specialized circumstances. A sweep generator, frequency counter, DC power supply, oscilloscope, and homebrew frequency generator.[/caption]
<h3>Electrical Power</h3>
<p>A source of consistant, controlled <strong>DC power</strong> is vital for electronics work, since most projects are going to be some flavor of DC-powered. For basic logic-level type work, the least-expensive option is probably an <a href="https://amzn.to/2Y3Rvre">ATX computer power supply</a> with an <a href="https://amzn.to/2OCwelj">ATX breakout board</a>, which will at least provide +3.3, +5, +12 and -12V, which suffices for a lot of Arduino+sensors or Raspberry Pi+breakouts type projects. There are a thousand flavors of those breakout boards, so make sure you find one with the ATX connector type that matches your power supply. There are also screw terminal and terminal lug versions, if you have strong feelings either way.</p>
<p>If your work is less module-oriented and more about building up circuits in a more from-scratch way, a <strong>current-limited bench power supply</strong> is key. A decent power supply will supply relatively low-ripple DC voltage from 0 to 20 or 30 or 50 volts, at 5 or 10 amps max, commonly. What's more, you can set a current-limit such that, when your project runs away and tries to turn itself into a pile of smoke, at least it does so more slowly - the power supply will typically fold back its output voltage to keep the output current below the value you specify. Some fancier models also have the option to just cut off current entirely until the power supply is reset.</p>
[caption id="attachment_700" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00064-scaled.jpg"><img class="size-medium wp-image-700" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00064-300x169.jpg" alt="DC power Supply" width="300" height="169" /></a> Versions of this Yescom power supply are available all over the internet at around the $50 price point.[/caption]
<p>My current recommended inexpensive bench power supply is the <a href="https://amzn.to/33AshSr">Hanmatek HM305P</a>, for a couple reasons - having a digital display so you can set the output voltage at, say, exactly 5V, is handy. As are the six front-panel preset buttons that allow you to jump to commonly-used voltage/current limit combinations that you specify. That said, at home I have a <a href="https://amzn.to/2RaiPmy">Yescom power supply</a> with a somewhat higher output current that's useful for <a href="https://jeff.glass/2018/08/25/50w-qrp-amplifier-schematic-pcb-ver-1/">testing RF amplifiers</a>, and its analog controls make it somewhat easier to smoothly vary to the output voltage and see how a circuit/amplifier reacts. If I had to choose only one, I'd get the Hanmatek (or one of its many clones), but an analog-controlled meter is handy for certain situations. (I got by with an <a href="https://www.ebay.com/p/581276384?iid=183982778513&amp;chn=ps&amp;norover=1&amp;mkevt=1&amp;mkrid=711-117182-37290-0&amp;mkcid=2&amp;itemid=183982778513&amp;targetid=596465712468&amp;device=c&amp;mktype=pla&amp;googleloc=9021730&amp;poi=&amp;campaignid=6470719577&amp;mkgroupid=81597521270&amp;rlsatarget=aud-649939740844:pla-596465712468&amp;abcId=1140476&amp;merchantid=6296724&amp;gclid=CjwKCAiA5o3vBRBUEiwA9PVzav8LHOT-RAFp0R2EWk4GEyvkj8gsyByKg8dUNdnkEM4ogZbQpqIXsBoCiwkQAvD_BwE" rel="noopener noreferrer">Elenco Precision XP-656</a> 500mA 0-30V DC supply as my primary current-limited supply for <em>years</em>.)</p>
[caption id="attachment_702" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8925.jpg"><img class="size-medium wp-image-702" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8925-300x225.jpg" alt="Hanmatek Power Supply" width="300" height="225" /></a> The Hanmatek interface (top right) is a little unintuitive, but the manual is decently written. It's sitting on top of an older tri-voltage power supply.[/caption]
<p>To connect your power supply to your board, you're going to need an <strong>assortment of wires and connectors</strong>. A handful of the typical USB cable types (A-to-Mini, A-to-B, A-to-Micro) is useful, and you probably already have them floating around in your sock drawer. Generic <a href="https://amzn.to/2DA4987">alligator clips</a> are always handy. <a href="https://amzn.to/34GIOpA">Mini-grabber style test leads</a> are great for hooking to component leads on a breadboard, though they're not rated for much current - in those cases, a <a href="https://amzn.to/2DA4Jmj">beefier clip lead</a> is a better choice.</p>
<p>While most projects are going to be DC powered, having enough AC outlets to have all of your test gear plugged in all the time, plus plenty of outlets for temporary plugs, plus a few more, is a tremendous timesaver. You can snag a<a href="https://amzn.to/35Sd0xW"><strong> multi-outlet power strip</strong></a> for relatively cheap these days, but they're also really easy to find at garage sales, fleamarkets, and swapmeets. The <a href="https://www.amazon.com/AmazonBasics-6-Outlet-Protector-2-Pack-2-Foot/dp/B014EKQ5AA/ref=sr_1_4?keywords=power+strip&amp;qid=1575221486&amp;sr=8-4">Amazon Basics 6-plug power strips</a> used to be dirt-cheap, like $3 for a two-pack, but as of this writing they're now $10 for two... a bummer, those used to be a real steal.</p>
<p>If you're ever in doubt about the functionality of an AC outlet, or if you're going to be taking your work to a place where AC wiring may be questionable, a<a href="https://amzn.to/2Ldtglr"><strong> cheap outlet tester</strong></a> is useful - it will confirm the presence of AC voltage, whether the hot/neutral are reversed, and other incorrect-wiring hazards. If you just need to confirm whether an AC circuit is hot, a <a href="https://amzn.to/35UMWm6"><strong>non-contact voltage detector pen</strong></a> is the easiest tool to use - just hold the on-button and place the non-conducting tip near the (potential) AC voltage. If it beeps and lights up, there's some AC present. Be warned though - the presence of AC-something is not a guarentee of 120 volts or 15 amps or whatever you actually need, just that there's some fluctuating voltage nearby. Just last week I watched an electrician get mislead by his NCV on a three-phase system - his pen told him all 3 phases had AC, but when he got around to actually sticking his meter probes in the test points, one of the phases was only "33V" to ground (i.e. the system had dropped a phase). You've been warned!</p>
<h3>Power Tools</h3>
<p>While I don't often use a <strong>power drill</strong> for actual workbench projects, the ability to stick a screw in a wall or quickly knock a hole in something is nice. I received a <a href="https://amzn.to/384LNdw">cordless Black and Decker 20V drill</a> as a gift years ago, and its been sufficient for my home purposes ever since. Sure, at the point in my career where I was putting 3/8" lag bolts into 2" of plywood, the building had standardized on <a href="https://amzn.to/35LJU3g">Ryobi impact drivers</a>, which are much stout-er. But the're also more expensive, and for home-use, I just don't usually need that much firepower.</p>
<p>My old accomplice turned my on to the virtues of an <strong>electric screwdriver</strong>. Why would you need an electric screwdriver when you have a high-torque, high speed, large battery drill? Exactly because the electric screwdriver is lightweight, low-speed, and easy to transport - you're not using it to drive screw into material, you're using it to take machine screws out of an electrical panel, say. Or install a hundred rack-mount screws. Or take out and reinstall a Euro-rack module 60 times. The light weight and ease-of-use of the screwdriver limits fatigue over long projects like these. <a href="https://amzn.to/34QiAAI">Black and Decker</a> makes a fine, inexpensive model.</p>
<p>We'll get into the virtues of heat shrink tubing some later day when we dive into materials, but an inexpensive <strong>heat gun</strong> is the appropriate tool for using it. I started with a $10 model from Harbor Frieght which lasted 5 years, and then bought another $10 to replace it. The trouble with all heat guns under $100, it seems, is ergonomics. After you've used the gun for a couple minutes and brought the metal tip to a searing-hot temperature, what do you do with it? This <a href="https://amzn.to/2L9m2yU">Porter-Cable model</a>, with a flat-but you can stand up on your workbench, is the best solution I've seen. (<a href="https://amzn.to/2OBWEnm">Professional models</a> have a flat or angled plate on the back to stand up in just this way.) </p>
<h3>Hand Tools</h3>
<p>A few basic hand tools will go a long way in making your workbench serviceable and ready to tackle common challenges - some are worth a little investment, while others are prime fodder for the cheapo <a href="https://www.harborfreight.com/">Harbor Freight</a> model. And thankfully, there are a number of tools where jumping from the $5 version to the $10 version makes a world of difference, and is worth the Lincoln.</p>
<p>There are lots of different tools to strip insulation off of wire - manual strippers, semi-automated strippers, fully automated stripers, a par of cutting pliers, a knife, your teeth... not that I would recommend all of those. But you can't really go wrong with a basic set of <strong>wire strippers</strong> that covers gauges from 10 to 30 AWG. These <a href="https://amzn.to/35PRzO1">Paladin wire strippers</a> were our go to at my last job, and they fit the bill just fine. The curved handle takes a little getting used to, but it actually makes them pretty ergonomic, which is nice if you're splicing a couple hundred bits of wire to LEDs in an afternoon, say. </p>
<p>A decent set of <strong>flush cutters</strong> is also worth a minor investment - not more than $7-8 a pair, mind, just don't get the $3 ones or they'll fall apart. Flush cutters are the tool of choice for trimming the leads on components, say, but they're also great for getting a clean end-cut on a piece of wire, or trimming flashing off of 3D-printed models. On the advice of my accomplice at my old job, we'd order <a href="https://amzn.to/34BH3Kg">5-packs of Hakko-brand flush cutters</a> regularly, and they served us well. For less critical cuts, <a href="https://amzn.to/37T349j">a couple pairs of scissors</a> is handy, though for papercraft I prefer <a href="https://amzn.to/2qTnEG9">single-edge razor blades</a>.</p>
<p><strong>Small pliers</strong> are something you can go the inexpensive route on - Harbor Freight or eBay ones would be fine, you're usually not going to be putting so much force on them that you're in danger of damaging them. This set of <a href="https://amzn.to/2rGDvHY">6 assorted pliers for $20</a> I ordered for my new workbench has been pretty solid - the extra long, extra thin needle-nose pliers I keep near my 3D printer for pulling ooze off the nozzle right before a print. Having a few <strong>heavier duty pliers</strong> around is often helpful - just a basic <a href="https://amzn.to/2OVtkqM">lineman's pliers</a> for when you need to put some force into the work would be a good place to start.</p>
[caption id="attachment_693" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00065-scaled.jpg"><img class="size-medium wp-image-693" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00065-300x169.jpg" alt="Long nose pleirs" width="300" height="169" /></a> One of my favorite pairs of pliers - long thin nose, good grip, and $2 at the hardware store.[/caption]
<p>I must confess - I don't find the sets of "<a href="https://amzn.to/2qTHalR">one small screwdriver handle and 1700 bits</a>" to be terribly practical. They're great to have around for special projects, but the extra time spent swapping bits back and forth for every project/object/screw is  wearisome. As daily driver<strong> small screwdrivers</strong>, I much prefer a set of basic jewelers screwdrivers in philips, flat, and hex. This <a href="https://amzn.to/33BHZgf">Wera 12-piece</a> set is my go-to recommendation these days, and the carrying-case is nice if you don't have permanent storage set up yet or if you're throwing your screwdrivers in a toolbag.</p>
[caption id="attachment_694" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8950.jpg"><img class="size-medium wp-image-694" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8950-300x225.jpg" alt="Wera Screwdrivers" width="300" height="225" /></a> Decent screwdrivers that don't strip themselves instantly, in a nice carrying case too.[/caption]
<p>A basic <a href="https://amzn.to/2q84g7G">6-in-1 screwdriver</a> suffices for most <strong>large screwdriver</strong> needs. That link is the cheapest one I could find on Amazon, but honestly, they're often between $1 and $3 at any hardware store, grab a couple then next time you see one.</p>
<p>It's amazing how cheap <strong>digital calipers</strong> have become - less than $20 for a <a href="https://amzn.to/2szYVae">decent 6" caliper</a> that does decimal inches, fractional inches, and millimeters. The calipers are among the top-five most commonly used tools on my bench, along with the soldering iron, pliers, and screwdrivers. You can measure interior dimensions, exterior dimensions, depth, diameter, all with a precision unmatched by analog means. Get yourself a set, it will change your bench. For larger measurements, a <a href="https://amzn.to/2P1jL9R">basic <strong>tape</strong></a><strong><a href="https://amzn.to/2P1jL9R"> measure</a> </strong>is handy - no need to get a fancy one unless your carpenter-ing regularly.</p>
[caption id="attachment_695" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00067-scaled.jpg"><img class="size-medium wp-image-695" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00067-300x169.jpg" alt="Digital Calipers" width="300" height="169" /></a> 20 years ago, these would have been a multi-hundred dollar item. Now they're basically disposable.[/caption]
<h3>Adhesives</h3>
<p>I wish I had a more in-depth knowledges of adhesives, epoxies, and glues. The properties department at the theater I used to work at maintained an encyclopedic knowledge of which glues were best of which applications, which chemicals were safe for which materials, which drying-times would lead to problems with material interactions... it was stunning. For my general purposes though, there a few basic adhesives that get me through the day more often than not.</p>
<p><strong>Hot</strong> <strong>Glue</strong> is a tremendously versatile material - you can stick most (rough) surfaces together with it, you can build up gussets and supports with it, you mold it to shape a little, and it removes easily from most things except paper. And did you know <a href="https://amzn.to/2OFzInj">it comes in black</a>? A <a href="https://amzn.to/2Dw73uD">decent 100W hot-glue gun</a> is a great "well this just has to hold a little while" solution.</p>
<p>For more permanent fixes, <strong>cyanoacrylate glue </strong>(also known as CA glue or the brand names <strong><a href="https://amzn.to/33Hf7Db">Super Glue</a> </strong>or <strong>Crazy Glue</strong>) is a good go-to - it bonds to most things with a slightly-rough surface (so roughing up, say, metal with a file first is a good idea). It hardens in the presence of moisture - atmospheric humidity is enough, but if you put a big glob on something, the outside layer will start to set first and slow the setting process of the inside. Use only a thin layer to reduce this issue - in the right circumstances, the glue will set in a matter of seconds. If you need a little bit more working time or pliability, <strong><a href="https://amzn.to/2Y69opn">E6000 Adhesive</a></strong> is a better choice.</p>
<p>Very High Bond <strong>double-sided tape</strong> (VHB) is an amazing product (well, line of products) from 3M. They give you the versatility of double-stick tape with some crazy adhesive capabilities. <a href="https://www.3m.com/3M/en_US/vhb-tapes-us/">3M's full catalog of adhesive tapes</a> is worth browsing if you're into that sort of thing. As a good default, their <a href="https://amzn.to/2Lr96EL">RP62 foam-tape</a> is strong, slightly spongy (good for bridging irregular surfaces), and relatively inexpensive.</p>
<p>For adhering large sheets of goods together, especially paper products, some kind of <strong>spray adhesive </strong>is going to be easier to use than a brush-on or dab-on variety. <a href="https://amzn.to/2OGOqut">3M's Super 77</a> is the de-facto standard spray adhesive for light- and medium-duty applications - adhering paper to paper for scrapbooking, or laminates to sheet goods. Simply spray Super 77 onto one of the surfaces, wait 60-90 seconds for the adhesive to become slightly tacky, then smoothly lay the second material onto the first. For heavier applications, there's a <a href="https://amzn.to/2L9STDw">High Strength 90 spray adhesive</a> that works much the same.</p>
<p>I'd be remiss if I didn't mention <a href="http://www.thistothat.com/">thistothat.com</a>, a website that generates recommendations if you want to glue <em>this material</em><em> </em>to <em>that material</em>. Want to stick ceramic to rubber? They've got a solution to that, and lots of other combinations as well. Well worth a look.</p>
<h3>3D Printing</h3>
<p>I know I said I wouldn't get too far into specific materials or specific arenas of work, but having a 3D printer in your electronics workshop opens up a whole world of mechanical possibilities. Whether its <a href="https://jeff.glass/2018/08/28/50w-qrp-amplifier-3d-printed-case-design-and-livestream/">custom enclosures for new projects</a> or <a href="https://jeff.glass/2019/03/09/3d-printing-in-the-home-workshop/">quality of life improvements</a> for the shop or project mockups or practical tools, the sky's the limit of what you can accomplish. Getting started in 3D printing could be a whole series of articles in and of itself, but for the moment let me confine myself to some recommendations of tools to facilitate the practical use of 3D printing on an electronics workbench.</p>
<p><img class="aligncenter wp-image-351 size-medium" src="https://jeff.glass/wp-content/uploads/2019/03/PSU_1-300x225.jpg" alt="" width="300" height="225" /></p>
<p>To start, the printer itself. I don't have any experience with <a href="https://www.youtube.com/watch?v=8a2xNaAkvLo">SLA 3D printing</a>, only the more traditional <a href="https://www.youtube.com/watch?v=3lRhZTdafE4">FDM method</a>. An FDM 3D printer is essentially a fancy robotic hot-glue gun on rails, that moves precisely around a 3D space squirting out hot plastic as it goes, which sets into shape as it rapidly cools down. This is a relatively speedy way of printing an object, but the spatial resolution of the resulting object is limited by the resolution of both the stepper motors that push the print-nozzing around and the diameter of the print nozzle. Still, with a stock 0.4mm nozzle and a basic machine, some <a href="https://www.youtube.com/watch?v=Dss1yUHH-QY">really beautiful things</a> are possible.</p>
[caption id="attachment_704" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00071-small.png"><img class="wp-image-704 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00071-small-300x169.png" alt="Wall Thermostat Tag" width="300" height="169" /></a> How do YOU control your hot-end?[/caption]
<p>If I were to recommend a first FDM 3D printer to someone today, it would be the <a href="https://www.prusa3d.com/original-prusa-mini/">Original Prusa MINI</a>. Josef Prusa was one of the original movers and shakers when the hobbyist 3D printer train was getting rolling in early 2010s, and his i3 model is perhaps the most popular 3D printer in the world. With a reputation for a great product and great customer service, the release of a printer at that key $350 price point that's become so popular, with mesh bed leveling, a heated bed with removable build-sheets, ethernet connectivity with WiFi upgrade possibilities, an option filament run-out sensor... I'm very excited for this thing. It's currently on pre-order for $350 US to start shipping around the end of the year, and I think it's going to be a slam dunk. When I think that i paid about that much for my <a href="https://www.monoprice.com/product?p_id=13860">Monoprice Maker Select V2.1</a> only 3 years ago, it's amazing to think how far the technology has come.</p>
[caption id="attachment_705" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00072-scaled.jpg"><img class="size-medium wp-image-705" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00072-300x169.jpg" alt="3D Printer" width="300" height="169" /></a> This printer took a few mods to make the frame rock-solid. Amazing what 3 years progress looks like.[/caption]
<p>Of course, all of the specific nozzles, filaments, and accessories you need will be specific to your printer and your projects. But I can recommend a couple of tools that will be useful to all FDM 3D-printing setups, the first being a <a href="https://amzn.to/2DLYOuF">set of 3D printing spatulas.</a> Most printers ship with a <a href="https://amzn.to/33Cfxeh">putty knife</a> as their print-removal-tool, which is an excellent way to gouge a hole in your print surface (or your hand!). Since receiving a set of these spatulas as a present for Christmas last year, they've easily become the tool I keep closest to the printer.</p>
[caption id="attachment_706" align="aligncenter" width="169"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00073-scaled.jpg"><img class="size-medium wp-image-706" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00073-169x300.jpg" alt="3D Printing Spatulas" width="169" height="300" /></a> These were definitely sitting on a shelf somewhere as palette knives and someone thought "you know what we could sell those as? 3D printing spatulas!" But they work, so who cares.[/caption]
<p>Second, while there are lots of methods of <a href="https://www.youtube.com/watch?v=AaF28dnDgKA">getting your 3D print to stick to the print bed</a>, keeping the bed itself clean of oils and debris goes a long way toward success. I keep a bottle of <a href="https://amzn.to/2rFOu4y">high-strength isopropyl alcohol</a> and some lint-free clothes nearby to wipe down the bed between every few prints, just to make sure the residual oils from printing and from my hands don't cause premature liftoff from the print bed.</p>
<h3>Software</h3>
<p>In this digital age, MS Paint is just as practical a tool as a paintbrush. So let's not leave out the digital tools that we use to make, track, distribute, and record projects on the workbench.</p>
<p>For <strong>2D drafting</strong>, my two primary tools are <a href="https://www.autodesk.com/products/autocad/overview">AutoCAD</a> and <a href="https://www.vectorworks.net/en-US">Vectorworks</a>. AutoCAD (made by AutoDesk) is an incredibly powerful CAD program, and it's been around forever. Want to model a bracket, or a whole airplane, or design a building, or pocket watch? AutoCAD can do it. It does have a fairly-steep learning curve - there are folks who make entire careers out of just working in AutoCAD - but it gives you a lot of power for your trouble. Vectorworks is a less-commonly-used program that I became very familiar with in my years as a stage lighting technician; due to its excellent stage-lighting plugins, it's the de-facto standard for theater lighting. And where AutoCAD focuses on building a "model" and having you derive drawings from that model, Vectorworks focuses on the drawing itself as <em>the thing to be made</em>. It might seem like a semantic difference, but the way that those philosophies influence the workflow of the two programs means that Vectorworks is often my choice for creating 2D draftings.</p>
<p>For <strong>3D drafting</strong>, my go-to software is <a href="https://www.autodesk.com/products/fusion-360/overview-b">Fusion360</a>, also from AutoDesk. Fusion is a timeline-centric, parametric drafting program, which allows you to go 'back in time' to an earlier moment of a design, make changes, and see them ripple through to the current version of the design. It's a very powerful program, though not without its own learning curve. For someone just diving into 3D modeling for the first time, I'd recommend starting with something like <a href="https://www.tinkercad.com/">Tinkercad,</a> a cloud-based modelling program that centers around adding and subtracting primitive objects from each other to build up a more complicated design. I've also had friends work in <a href="https://www.sketchup.com/">SketchUp</a>, which tries to blend Fusion's 2D sketch capabilities with the ease of Tinkercad. Unfortunately, SketchUp seems to have trouble successfully exporting STL files for printing, so I can't recommend it as a strong starting point.</p>
[caption id="attachment_717" align="aligncenter" width="265"]<a href="https://jeff.glass/wp-content/uploads/2019/12/FusionCapture2.png"><img class="size-medium wp-image-717" src="https://jeff.glass/wp-content/uploads/2019/12/FusionCapture2-265x300.png" alt="Fusion 360 Screenshot" width="265" height="300" /></a> Fusion is a very powerful, very worth-learning program.[/caption]
<p>Once you have your 3D model and you're ready to print it, you'll need a <strong>slicer program</strong> to turn the model into a series of step-by-step instructions that the printer can actually follow. ("<em>Move to such-and-such coordinates in so-many seconds while extruding this-amount of plastic</em>". Repeat x10000). I personally use <a href="https://ultimaker.com/software/ultimaker-cura">Cura</a>, now from Ultimaker. It's straightforward to use, and has all the options and customizability I've found a need for. I know lots of folks who have good opinions about the open source <a href="https://slic3r.org/">Slic3r project</a> as well.</p>
<p><strong>Programming and text editing </strong>may or may not be a part of your electronics hobby, but if they are, having simple straightforward tools is a good way to get more productivity out of your text-based time. Of course for programming Arduinos, the <a href="https://www.arduino.cc/en/main/software">Arduino IDE</a> is a perfectly good place to start. It's not fully featured in an respect, but it just works, you can write code in it and plonk it on an Arduino, and that's all most people care about. I use <a href="https://www.sublimetext.com/">Sublime Text</a> as my main text editor and sometimes basic dev environment (when writing things in <a href="https://love2d.org/">Love2D</a>, for example). </p>
<p>For projects that are just too detailed to lay out by hand, I <strong>design circuit boards</strong> in AutoDesk's <a href="https://www.autodesk.com/products/eagle/overview">Eagle</a> software, though there are some who would say I'm a heathen for not using the open source <a href="https://www.kicad-pcb.org/">KiCad</a>. To be honest, I don't have strong feelings about either software either way - Eagle was just the first one I used and I've become used to its workflow and design choices, but I know there are die-hards on both sides of this river. Regardless, to live in an age where a maker has multiple, quality options for free PCB design software is amazing.</p>
[caption id="attachment_383" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/05/V03-Board.png"><img class="size-medium wp-image-383" src="https://jeff.glass/wp-content/uploads/2019/05/V03-Board-300x285.png" alt="DMX Circuit Board" width="300" height="285" /></a> I would never in a million years be able to achieve this level of miniaturization with a hand-fabricated board.[/caption]
<p>Of course, once you've designed a circuit board, you're going to need to make it, somehow. While they're not software per-say, the growth of <strong>PCB shopping cart</strong> <strong>websites</strong> over the past few years has really opened up what's possible for the solo electronics workshop. No more sweating with getting tiny wires soldered to tiny chips to break them out to veroboard; you can just spin a PCB with the proper footprint, or indeed the whole circuit. Any of these services will let you upload your circuit board design, and for a very modest fee spin you up 3 or 5 or 500 copies. <a href="https://oshpark.com/">OSHPark</a> really started the whole small-batch-PCB movement, and their service has always been great, reliable, and high quality. I've also used <a href="https://jlcpcb.com/">JLCPCB</a> for somewhat larger runs. If you're interested in looking at many, many options, <a href="https://pcbshopper.com/">PCBShopper</a> is an aggregator that lets you compare prices, lead times, and options across almost two dozen shopping cart-style manufacturers.</p>
<h3>Safety</h3>
<p>Just because you may not have a <a href="https://www.youtube.com/watch?v=UwzwzobO5rs">giant 5-axis robot in your workshop</a> doesn't mean you shouldn't take safety seriously. Whether your workshop is in your home, an outside shop, or your workplace, a few basic safety precautions could mean the difference between peaceful Thursday and a trip to the ER.</p>
<p><strong>Smoke and carbon monoxide detectors </strong>should be present in several places in your home or office already, but having one in the workshop is a good idea, especially if you have any hot-tools (soldering iron, heat gun, 3D printer). They're so <a href="https://amzn.to/2RfwNDH">inexpensive and easy to install</a>, it's a no-brainer to pick one up. A <strong>fire extinguisher<em> </em></strong>should also be on your list - and if you ever have the opportunity to get a little training on how to properly use one, it's well worth it. Make sure to mount your <a href="https://amzn.to/2La7TkI">fire extinguisher</a> where you could actually get to it, if the things that are most likely to start a fire, did.</p>
[caption id="attachment_707" align="aligncenter" width="169"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00074-scaled.jpg"><img class="wp-image-707 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00074-169x300.jpg" alt="Fire extinguisher" width="169" height="300" /></a> I put my fire extinguisher right by the door to my workshop, so I can grab it on the way in, or on the way out.[/caption]
<p>While we're thinking about fire, consider whether your workshop needs a <strong>flammables cabinet</strong>. If you're storing more than a few things of paint, spray paint, spray adhesives, solvents, cleaners, etc, it's worth thinking about what would happen if they were to catch a little on fire. It's not usually worth buying on online - the shipping is killer- but cabinets pop up on Craigslist, auctions, and industrial surplus all the time. <a href="https://www.go-dove.com/">Go Industry Dove Bid</a> is a good online collector of industrial surplus auctions, but be sure to check out your local city/state surplus resources as well.</p>
<p>Finally, <strong>safety glasses</strong>. Just wear them, even when you think you don't have to. About 4 years ago, while soldering "just one more joint" on a PCB before going to bed, a piece of hot solder popped up and got me in the lower-left eyelid. A quarter-inch higher and it would have been right in my eye, with who knows what consequences. I'm not always perfect about this myself, but I do keep a pair of safety glasses right on my workbench to remind myself that if I want to take a risk, it's my own damn fault. Get <a href="https://amzn.to/2LbC37b">a pair of glasses that are comfortable</a> so you're more likely to wear them. </p>
<h3>Organization</h3>
[caption id="attachment_711" align="aligncenter" width="225"]<a href="https://jeff.glass/wp-content/uploads/2019/12/Resistors-1.jpg"><img class="wp-image-711 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/Resistors-1-225x300.jpg" alt="Resistor Bins" width="225" height="300" /></a> No such thing as too organized.[/caption]
<p>I've come to realize something over the past 10 years - the most volume I'm willing to rummage through for a tool, part, or piece is about 500 cubic inches, or a around 10 liters. Any more volume than that, especially for small parts, and there's just too many potential places where a small object can hide. So standardizing on a <strong>storage bin</strong> that's slightly smaller than this makes good sense. At home, I use<a href="https://www.menards.com/main/storage-organization/storage-totes-bins/storage-totes/bella-storage-solution-6-quart-clear-storage-bin/belmn0105011012/p-1444430572277-c-12667.htm?tid=5967592820392133336&amp;ipos=2"> 6-Quart Bella bins</a> from Menards, while at work I use <a href="https://amzn.to/2YdeLDu">6-Quart Sterilite bins</a>. Once a project or set of components or tools overflows one of these bins, there's probably enough diversity in goods to split it up into two separate bins anyway - i just recently split the <em>Microcontrollers</em> bin into <em>Arduinos </em>and <em>Non-Arduino Microcontrollers</em>, for example. Now both species are easier to find.</p>
[caption id="attachment_708" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00077-scaled.jpg"><img class="wp-image-708 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00077-300x169.jpg" alt="Storage Bins" width="300" height="169" /></a> So many pretty bins, all in a row.[/caption]
<p>I've always loved a good <strong>whiteboard</strong> (I just snagged <a href="https://amzn.to/2Y3JoLk">another 18"x24"</a> one for my office), but I recently stumbled upon these <a href="https://amzn.to/2Y4xoJC">ultra-fine tip whiteboard markers</a>, which I just absolutely love. They allow you to squeeze so much actual detail and small size into a whiteboard doodling project. Not for presenting to a group, mind, just for working through projects on your own or with a partner. (I also 3D printed a cup for them for my kitchen whiteboard calendar, more on that in a future post I think.)</p>
<p><a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00078-scaled.jpg"><img class="aligncenter wp-image-710 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00078-169x300.jpg" alt="Wall Pen Cup" width="169" height="300" /></a></p>
<p>I'm a strong believer in the power of labeling to <a href="https://www.youtube.com/watch?v=oiSn2JuDQSc">make things just so,</a> and a <strong>labelmaker</strong> is a really easy way to help keep things organized. The <a href="https://amzn.to/35TwTEZ">Brother PTD600</a> has been a nice blend between portability and computer control - you get most of the functionality just using it handheld, or you can hook it up to Brother's software on your computer to make more complicated layouts, batch prints, etc. The sound department at the theater I used to work at had a <a href="https://amzn.to/37WFbxN">Rhino BMP21-Plus</a>, which was really awesome at making <a href="https://amzn.to/2qaic17">self-laminating labels</a> to label cables - with the amount of work that went into cable arrangement and maintenance in that place, the self-laminating labels were a godsend. The tape's a little pricey, as is the labeller, so if you're not doing a lot of patch panels, say, I would stick with the Brother and the TZe line of tapes.</p>
<h3>Lighting</h3>
<p>Decent task lighting makes a world of difference - you'll find you're suddenly better at soldering, more deft at assembly, swifter to catch errors and notice mistakes. No sense working in the dark if you don't have to.</p>
<p>I've done a number of lighting setups in my home workshops over time. Right now I have three <a href="https://amzn.to/2P0nUel">24" fluorescent fixture</a>s overhead that were remaindered from a theatre production ages ago (in addition to a basic 100W ceiling light). I've also got a couple of <a href="https://amzn.to/2P1At9l">clip lights</a> with <a href="https://amzn.to/2LcrVeK">100W LED bulbs</a> closer to my actual workbench surface to price more focused task lighting, and a <a href="https://amzn.to/33FODSy">cheap gooseneck light from IKEA</a> sitting on the work surface for when I need really targeted illumination. While I haven't re-installed it since I moved into a new home workshop a few months ago, adding under-shelf lights to my <a href="https://jeff.glass/2019/03/03/home-office-overhaul/">home shelving setup</a> made a big difference in being able to see and find components on the shelves, as well as adding some cheery glow to the workstation. My workshop at work has lots of overhead fluorescent light, and I added a <a href="https://amzn.to/2R9XyZS">positionable jointed lamp</a> for some more focused lighting. </p>
<h3>Your Own Shop</h3>
<p>If you're still reading this 6500 words later, you might thinking - "<em>Holy crap, that's a lot of stuff, I'll never be able to have my own electronics workbench"</em>. But keep in mind - this is the setup and tools that work for me, with what I want to do, that I've built up over a decade of working professionally and as a hobbyist in this arena. Would you look at a professional auto mechanic rebuilding an engine and say "Wow, I'll never open my hood again?" It's all a matter of starting somewhere.</p>
[caption id="attachment_712" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/FirstWorkbench-1.jpg"><img class="wp-image-712 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/FirstWorkbench-1-300x225.jpg" alt="Workbench" width="300" height="225" /></a> Two apartments and many years ago, this is what my "workbench" looked like. And it was still a BLAST.[/caption]
<p>The easiest way to pick a project is to <strong>find a project you want to accomplish and work toward making it happen</strong>. Maybe it's monitoring to see whether your garage door is open or closed. Or what the weather's going to be tomorrow. Maybe your dog needs some entertainment, or you need a new sparkling light over the crib, or the you have an itch to build a radio or a tesla coil or who knows what. Once you find a thing you're excited about building, that will guide you as to which tools to find first, which will lead you to more things you can do with those tools, which will lead to more tools... and so on. </p>
<p>And most importantly - have fun.</p>
<h3>Special Thanks</h3>
<p>I wouldn't have been aware of so many of these tools, ideas, and possibilities without a lot of excellent colleagues and friends. Thank you especially to Kenneth, Palmer, Alec, Joe, Mike, Jabin, Lee, Travis, Chris, and all the other excellent technicians who continue to be an inspiration for excellent technical work.</p>
<p><!-- wp:paragraph --> <!-- /wp:paragraph -->hooting.</p>
<p>I'm going to specifically focus on tools and support-hardware this time around, and not dive too deep into supplies and consumables, purely to maintain focus. The parts and pieces you need will be wildly different if your specific hobby is <a href="https://twitter.com/jeriellsworth/status/1195900908049072128">scratch-building accelerometers</a> vs <a href="https://jeff.glass/2019/05/23/dmx-mini-moving-light-shield-v0-3/">twitter-connected instant cameras</a>, say. But in the wide and deep pool of 'working with electronics,' there are some flotation aids that will keep your head above water most of the time.</p>
<h3>Soldering</h3>
<p>As both hobbyists and professionals, we are often looking not for the best tool, but one that's good enough for the job without breaking the bank. If there's one tool that I'd recommend getting the 'good' versus the 'good enough' version, it's a <strong>soldering iron</strong>. I thought for years I was just bad at soldering. Nope, just a crappy $25 radio shack soldering iron that was doing me no favors.</p>
<p>Not that 'good' has to mean 'super expensive.' In my home shop and my current shop at work, I used the <a href="https://amzn.to/2DuvecD">Hakko 888D</a>, which has proved reliable and durable, even if the interface is a little unintuitive. For less than $100, that's a darn good iron. The shop at my previous job has a <a href="https://amzn.to/2OWP8CF">cheapie 3-in-1 soldering/hot-air-rework/power supply station</a>, and for most things that was just <em>fine. </em>They're such a huge leap above a 'soldering pencil,' and they'll last for years,</p>
[caption id="attachment_673" align="aligncenter" width="225"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8929-rotated.jpg"><img class="wp-image-673 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8929-225x300.jpg" alt="Hakko 888D" width="225" height="300" /></a> The trust Hakko 888D. I now have one of these at home and one at work, and they're a very nice little iron.[/caption]
<p>Whatever iron you choose, you'll want some <strong>additional tips</strong> to go with it. While you could get the <a href="https://amzn.to/2P5kC9Q">pack of every tip imaginable</a>, I find myself using either the medium chisel or the fine-conical %99.9 of the time, so<a href="https://amzn.to/2r2h4Nj"> a smaller assortment</a> is probably fine.</p>
<p>As far as <strong>solder</strong>, while there are good environmental reasons to go with lead-free solder, there's nothing quite so good to work with as classic <a href="https://amzn.to/2OBtjcX">Kester rosin-core 60/40, nice and thin</a>. A one-pound reel of that stuff will last most people <em>years</em>. While you could buy a <a href="https://amzn.to/2DCC53L">solder-reel stand</a>, I've found a <a href="https://jeff.glass/2019/03/09/3d-printing-in-the-home-workshop/">3D-printed design</a> that I really like (credit to <a href="https://www.thingiverse.com/thing:960103">Phredie on Thingiverse</a>).</p>
[caption id="attachment_674" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8948.jpg"><img class="wp-image-674 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8948-300x225.jpg" alt="Roll of Solder on 3D Printed Stand" width="300" height="225" /></a> One pound of Kester 60/40 in my favorite 3D printed holder. As busy as we are, I might actually make in through this roll in a year or two.[/caption]
<p>You'll also want some <strong>flux</strong>, either<a href="https://amzn.to/35T3lHl"> as a paste</a> or in my preffered form <a href="https://amzn.to/2rHoJk2">as a solder pen</a>. While rosin-core solder has flux built-in, any time you're doing rework, SMD work, or just taking a little longer to deal with a tricky part, flux makes sure your surfaces are clean and ready to accept the molten solder.</p>
<p>Speaking of keeping things clean, let's talk about <strong>cleaning your soldering iron tip</strong>. The sponge and <a href="https://amzn.to/35SyYkD">wire-wool cleaner</a> than come with your iron are plenty, if you treat your iron right.More aggresive chemical fluxes like those found in "<a href="https://amzn.to/33wfVLn">Tip-Tinners and Cleaners</a>" are neant to remove long-built-up oxidation on your iron tip, and are overkill for routine tip-cleaning. I was taught to dab the iron in the wire-wool between each joint (realistically, between every several joints), and wipe on the sponge before the iron goes back in the stand. That should be all you need.</p>
<p>To get solder off of things other than your iron may take some special tools. <strong><a href="https://amzn.to/2DyQTQZ">De-soldering braid</a></strong> is a great tool - its a woven copper ribbon impregnated with flux that, when heated against a solder joint, sucks the molten solder up via capilary action. For getting the last little bit of solder out of through-hole pads, <a href="https://amzn.to/2OYKgwL">a <strong>solder-sucker</strong></a> is the tool - find yourself a cheap one, they're all pretty much the same. At my last job, we purchased a <a href="https://amzn.to/2OYjkgL">cheap vacuum desoldering station</a>, which was fine, but mostly could have been replaced by solder-wick in 90% of applications. Perhaps a<a href="https://amzn.to/2Du8FoA"> brand-name vacuum desoldering station</a> would have done the job better, but in any case when setting up my shop at the new job, I passed on this tool. For more thoughts on all these tools/techniques, <a href="https://www.youtube.com/watch?v=UwsGnO630vY">W2AEW</a> has a great video on desoldering if you find yourself in a pinch.</p>
<p>Whether your soldering or desoldering, you're going to be making some nasty fumes melting all that flux, so get yourself some kind of <strong>filtering fan</strong>. I've got a <a href="https://amzn.to/2L8wGpv">dirt-cheap Aoyue filter-fan</a> on my home bench, and both a <a href="https://amzn.to/2rCkS8b">cheap Kotto</a> and an<a href="https://amzn.to/2OXIlZo"> expensive Hakko</a> on my bench at work now, and they're all about as good as each other, and they all suck (not in the way you want a filter fan to suck). I replaced the fan in my Aoyue with a <a href="https://amzn.to/35PoTVm">120V 4" Muffin fan</a> (pulled from an older musical's fog-distribution system, in my case), and it's made a world of difference, I highly recommend upgrading. Just be careful, those fans bite.</p>
[caption id="attachment_675" align="aligncenter" width="300"]<img class="wp-image-675 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8927-300x225.jpg" alt="Hakko FA-400 Fan" width="300" height="225" /> Now that's a big fan! Inherited from a previous museum exhibit.[/caption]
<p>There are about as many different kinds of <strong>work-holding clamps</strong> as there are people who solder, but my two favorites are this <a href="https://www.thingiverse.com/thing:21357">3D-printed PCB vise</a> for flat-work and these <a href="https://amzn.to/2R8qkdl">octopus-style 3rd-hands for other unusual shapes</a>. I've used the <a href="https://amzn.to/2R6nWDX">classic Panavise clamps</a>, and for a shared-shop environment I'd recommend them for their sturdy build quality. But I find them to be a little bit too bulky and their jaws not quite wide enough for the work I find myself doing, so I opt for other solutions in my just-for-me setups. You do you though.</p>
[caption id="attachment_687" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00056-scaled.jpg"><img class="size-medium wp-image-687" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00056-300x169.jpg" alt="" width="300" height="169" /></a> Almost 6" of jaw space on this 3D printed workholder. You can tell I ran out of grey filament halfway through printing the parts.[/caption]
<h3>Electronic Test and Measurement</h3>
<p>The two big items in this cate</p>
<p>Between 10 years working in lighting, video and special effects in theater, three moves and two <a href="https://jeff.glass/2019/03/03/home-office-overhaul/">independent home workbench-revemps</a>, and my new-this-month position as an Exhibit Engineer at a major Midwest science museum, I've laid out and kitted-out many electronics workbenches over the years. For those interested in getting involved in hobby or professional electronics work, I've compiled the tools I think are most useful when building up a workspace for electronics construction and troubleshooting.</p>
<p>I'm going to specifically focus on tools and support-hardware this time around, and not dive too deep into supplies and consumables, purely to maintain focus. The parts and pieces you need will be wildly different if your specific hobby is <a href="https://twitter.com/jeriellsworth/status/1195900908049072128">scratch-building accelerometers</a> vs <a href="https://jeff.glass/2019/05/23/dmx-mini-moving-light-shield-v0-3/">twitter-connected instant cameras</a>, say. But in the wide and deep pool of 'working with electronics,' there are some flotation aids that will keep your head above water most of the time.</p>
<h3>Soldering</h3>
<p>As both hobbyists and professionals, we are often looking not for the best tool, but one that's good enough for the job without breaking the bank. If there's one tool that I'd recommend getting the 'good' versus the 'good enough' version, it's a <strong>soldering iron</strong>. I thought for years I was just bad at soldering. Nope, just a crappy $25 radio shack soldering iron that was doing me no favors.</p>
<p>Not that 'good' has to mean 'super expensive.' In my home shop and my current shop at work, I used the <a href="https://amzn.to/2DuvecD">Hakko 888D</a>, which has proved reliable and durable, even if the interface is a little unintuitive. For less than $100, that's a darn good iron. The shop at my previous job has a <a href="https://amzn.to/2OWP8CF">cheapie 3-in-1 soldering/hot-air-rework/power supply station</a>, and for most things that was just <em>fine. </em>They're such a huge leap above a 'soldering pencil,' and they'll last for years,</p>
[caption id="attachment_673" align="aligncenter" width="720"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8929-rotated.jpg"><img class="wp-image-673 size-large" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8929-768x1024.jpg" alt="Hakko 888D" width="720" height="960" /></a> The trust Hakko 888D. I now have one of these at home and one at work, and they're a very nice little iron.[/caption]
<p>Whatever iron you choose, you'll want some <strong>additional tips</strong> to go with it. While you could get the <a href="https://amzn.to/2P5kC9Q">pack of every tip imaginable</a>, I find myself using either the medium chisel or the fine-conical %99.9 of the time, so<a href="https://amzn.to/2r2h4Nj"> a smaller assortment</a> is probably fine.</p>
<p>As far as <strong>solder</strong>, while there are good environmental reasons to go with lead-free solder, there's nothing quite so good to work with as classic <a href="https://amzn.to/2OBtjcX">Kester rosin-core 60/40, nice and thin</a>. A one-pound reel of that stuff will last most people <em>years</em>. While you could buy a <a href="https://amzn.to/2DCC53L">solder-reel stand</a>, I've found a <a href="https://jeff.glass/2019/03/09/3d-printing-in-the-home-workshop/">3D-printed design</a> that I really like (credit to <a href="https://www.thingiverse.com/thing:960103">Phredie on Thingiverse</a>).</p>
[caption id="attachment_674" align="aligncenter" width="720"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8948.jpg"><img class="wp-image-674 size-large" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8948-1024x768.jpg" alt="Roll of Solder on 3D Printed Stand" width="720" height="540" /></a> One pound of Kester 60/40 in my favorite 3D printed holder. As busy as we are, I might actually make in through this roll in a year or two.[/caption]
<p>You'll also want some <strong>flux</strong>, either<a href="https://amzn.to/35T3lHl"> as a paste</a> or in my preffered form <a href="https://amzn.to/2rHoJk2">as a solder pen</a>. While rosin-core solder has flux built-in, any time you're doing rework, SMD work, or just taking a little longer to deal with a tricky part, flux makes sure your surfaces are clean and ready to accept the molten solder.</p>
<p>Speaking of keeping things clean, let's talk about <strong>cleaning your soldering iron tip</strong>. The sponge and <a href="https://amzn.to/35SyYkD">wire-wool cleaner</a> than come with your iron are plenty, if you treat your iron right.More aggresive chemical fluxes like those found in "<a href="https://amzn.to/33wfVLn">Tip-Tinners and Cleaners</a>" are neant to remove long-built-up oxidation on your iron tip, and are overkill for routine tip-cleaning. I was taught to dab the iron in the wire-wool between each joint (realistically, between every several joints), and wipe on the sponge before the iron goes back in the stand. That should be all you need.</p>
<p>To get solder off of things other than your iron may take some special tools. <strong><a href="https://amzn.to/2DyQTQZ">De-soldering braid</a></strong> is a great tool - its a woven copper ribbon impregnated with flux that, when heated against a solder joint, sucks the molten solder up via capilary action. For getting the last little bit of solder out of through-hole pads, <a href="https://amzn.to/2OYKgwL">a <strong>solder-sucker</strong></a> is the tool - find yourself a cheap one, they're all pretty much the same. At my last job, we purchased a <a href="https://amzn.to/2OYjkgL">cheap vacuum desoldering station</a>, which was fine, but mostly could have been replaced by solder-wick in 90% of applications. Perhaps a<a href="https://amzn.to/2Du8FoA"> brand-name vacuum desoldering station</a> would have done the job better, but in any case when setting up my shop at the new job, I passed on this tool. For more thoughts on all these tools/techniques, <a href="https://www.youtube.com/watch?v=UwsGnO630vY">W2AEW</a> has a great video on desoldering if you find yourself in a pinch.</p>
<p>Whether your soldering or desoldering, you're going to be making some nasty fumes melting all that flux, so get yourself some kind of <strong>filtering fan</strong>. I've got a <a href="https://amzn.to/2L8wGpv">dirt-cheap Aoyue filter-fan</a> on my home bench, and both a <a href="https://amzn.to/2rCkS8b">cheap Kotto</a> and an<a href="https://amzn.to/2OXIlZo"> expensive Hakko</a> on my bench at work now, and they're all about as good as each other, and they all suck (not in the way you want a filter fan to suck). I replaced the fan in my Aoyue with a <a href="https://amzn.to/35PoTVm">120V 4" Muffin fan</a> (pulled from an older musical's fog-distribution system, in my case), and it's made a world of difference, I highly recommend upgrading. Just be careful, those fans bite.</p>
[caption id="attachment_675" align="aligncenter" width="300"]<img class="wp-image-675 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8927-300x225.jpg" alt="Hakko FA-400 Fan" width="300" height="225" /> Now that's a big fan! Inherited from a previous museum exhibit.[/caption]
<p>There are about as many different kinds of <strong>work-holding clamps</strong> as there are people who solder, but my two favorites are this <a href="https://www.thingiverse.com/thing:21357">3D-printed PCB vise</a> for flat-work and these <a href="https://amzn.to/2R8qkdl">octopus-style 3rd-hands for other unusual shapes</a>. I've used the <a href="https://amzn.to/2R6nWDX">classic Panavise clamps</a>, and for a shared-shop environment I'd recommend them for their sturdy build quality. But I find them to be a little bit too bulky and their jaws not quite wide enough for the work I find myself doing, so I opt for other solutions in my just-for-me setups. You do you though.</p>
[caption id="attachment_687" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00056-scaled.jpg"><img class="size-medium wp-image-687" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00056-300x169.jpg" alt="" width="300" height="169" /></a> Almost 6" of jaw space on this 3D printed workholder. You can tell I ran out of grey filament halfway through printing the parts.[/caption]
<h3>Electronic Test and Measurement</h3>
<p>The two big items in this category are multimeters and oscilloscopes. Let's take a look at both of them first before we get into some more specialized tools.</p>
<p>There are lots and lots of good-enough <strong>multimeters</strong> in the world today, of all kinds of different brands, and they're pretty much going to all be OK. Rather than try and pick out specific ones from Amazon, here are the features I'd look for if I was looking to add a decent multimeter to my bench today:</p>
<ul>
<li>The basics: AC/DC Voltage, AC/DC Current (up to 10A is useful), resistance (to 0.1Ω and 1 MΩ is nice).</li>
<li>Continuity test- this is the most useful setting on a multimeter. Using this setting and touching a wire/component/circuit with the probes will tell you if there's a low impedance path between the two points; i.e., if they're connected. Super useful.</li>
<li>Auto power-off. Doesn't seem like much, but it's real easy to kill batteries without it.</li>
<li>4-digit precision (some cheap meters only give 3)</li>
</ul>
<p>The other features a meter might have include: temperature measurement, diode-forward-voltage measurement, True RMS AC measurement, frequency (power line), duty-cycle, capacitance, transistor hFE, illuminate... the list goes on. I've appreciated having a true RMS measurement in tricky AC power situations, and having an easy frequency-check can be handy, but for the rest of these, I'd rather rely on a purpose-made tool like a thermometer, <a href="https://amzn.to/2OXmoty">lightmeter</a>, or <a href="https://amzn.to/2r2n6NX">transistor checker</a>, rather than something built into my multimeter.</p>
[caption id="attachment_688" align="aligncenter" width="169"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00059-scaled.jpg"><img class="wp-image-688 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00059-169x300.jpg" alt="Multimeter" width="169" height="300" /></a> I got this meter almost 8 years ago in a moment of need, at a Menards if memory serves, and it's worked swell ever since.[/caption]
<p>If you've got the cash and are looking for something to last 20 years, the <a href="https://amzn.to/2sy0SUz">Fluke 117</a> is a really solid primary meter. Fluke has really been <em>the</em> brand name in quality meters for the past lots-of-years - well made, reliable, accurate. Not super cheap, but you do get what you pay for. My current department has standardized on them for most work, and that's been swell. For most things, we don't need <a href="https://amzn.to/2Y0Q90F">the $300+ meter</a> (which gives you min/max tracking and microAmp measurement) or <a href="https://amzn.to/2OSDNmQ">the $500 meter</a> (with its fancy clamps and probes). In fact, a <a href="https://amzn.to/2DA9tZ9">basic $40 meter</a> is going to be fine for almost everything you do.</p>
<p>A little aside - why are there no benchtop-multimeters in the super-affordable price range? When you can get a passable, portable multimeter for $20, why are even the<a href="https://amzn.to/34BhIA5"> cheapie-versions of a benchtop meter</a> still $150? I think there would be a strong market for a $60, benchtop form-factor, ok-ish meter. I have an old Simpson 460-6 at work that I love using, not because it's the world's most amazing meter, but just because it's always <em>there</em> and the form facotr is right. How about it, AliExpress?</p>
[caption id="attachment_689" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8937-rotated.jpg"><img class="size-medium wp-image-689" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8937-300x225.jpg" alt="Simpson 460-6" width="300" height="225" /></a> Now can I get this form factor, with a little adorable LED display, for less than $200?[/caption]
<p>Moving on to <strong>oscilloscopes</strong>, I think there are some who would say this isn't essential for electronics work - after all, if you end up working mostly with digital signals, or analog-voltages that don't change over time, is it really worth it? I would counter that the oscilloscope is your eyes into the realm of what your electronics are doing, and is a vitally useful tool in many situations. If you've never used an oscilloscope, may I once again recommend <a href="https://www.youtube.com/watch?v=067W7h1BhxE">a video by W2AEW.</a></p>
<p>Scopes are another arena where you don't need to break the bank to get something decent enough to use. My first scope was a venerable <a href="https://www.scribd.com/document/364412737/BK-Precision-1535a">BK-Precision 1535A</a> 35Mhz analog scope that a bought from a guy on Craigslist for about $40. For basic electronics work, 20Mhz or so is plenty - you're most likely going to working at slower speeds (audio to 20Khz, maybe 250kHz for serial or RS485) or much, much higher (HDMI, USB, etc) where a scope really isn't the right tool in most cases anyway. Or at least, once you're progressing to the level where you're worrying about measuring GHz voltages, you're likely to acquire more specialized tooling along the way.</p>
[caption id="attachment_690" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00061-scaled.jpg"><img class="size-medium wp-image-690" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00061-300x169.jpg" alt="" width="300" height="169" /></a> This old thing is still puttering away on my workbench. Still worked just fine for most things I'd care to do with it.[/caption]
<p>I think a decent analog scope is a really good place to start if you've never used a scope before - better to tackle the fundamentals of the tool before having to learn how to use a particular menu structure as well. The shop at my new job came with a <a href="https://www.allaboutcircuits.com/test-measurement/oscilloscopes/compactscope-series-v-1565/">Hitachi V1565 100MHz analog scope</a> with measurement capability that I've been very happy with - the ability to add cursors to an analog display to measure voltage, time, or duty cycle is handy. At home I've now also got an <a href="https://amzn.to/35O2ZBV">Owon PDS5022T</a> 25MHz digital scope  that was gifted to me - I like the tools having a digital scope provides, but I find it significantly more clunky than either of the classic analog scopes in my life.</p>
[caption id="attachment_676" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8930.jpg"><img class="wp-image-676 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8930-300x225.jpg" alt="Hitachi 1565" width="300" height="225" /></a> The "new" (to me) oscilloscpe I have at work. 100MHz bandwidth is overkill for anything I can think we'll run into, but you never know...[/caption]
<p>So, if you're looking for a bench scope and you've never used one before, I'd say start analog. I see on eBay right now you can buy a gently-loved 2-channel analog scope for around $50-60 (plus $40 shipping, those things aren't light). Not a bad way to go.</p>
<p>Something my accomplice at my old job turned me on to is <a href="https://www.amazon.com/s?k=portable+oscilloscope">small, portable oscilloscopes</a>. I don't have a specific model to recommend, but they can be useful in specific circumstances - not so much to actually interrogate the characteristics of a signal, but more as a signal checker. Do I have AC here, do I have something that looks like RS-485 there, etc? If you do buy one, make sure you get one with an integrated battery (not all do) - getting one that still has to be plugged in makes it far less useful.</p>
<p>There are some more niche electronic tools that I make use of on my bench, but mostly because of my <a href="https://kk9jef.wordpress.com/">ham radio background</a>. A decent <strong>frequency counter</strong> is useful in that arena - I've got a classic <a href="https://www.youtube.com/watch?v=okMwS4IXz5E">Heathkit IM-2420</a> that I picked up at a swap-meet, but I'm really intrigued by the new wave of <a href="https://amzn.to/2L8CJdv">inexpensive benchtop frequency counters</a> that have popped up in the past couple years that claim to do 0.1Hz-2.4GHz for only $70. A <strong>signal genetor</strong> is also really useful in my work - I <a href="https://kk9jef.wordpress.com/2017/07/10/si5351-signal-generator/">built my own</a> around an Si5351 and an Arduino, but you can buy a <a href="https://www.amazon.com/Generator-KKmoon-Precision-Dual-Channel-Arbitrary/dp/B071HJ31WN/ref=sr_1_7?keywords=function+generator&amp;qid=1575140813&amp;sr=8-7">0-25Mhz</a> or <a href="https://amzn.to/35QquKJ">0-60Mhz arbitrary function generator</a> for not a lot of cash these days, and I have colleagues who speak highly of both. Since my last job was more lighting-focused, we purchased an<a href="https://amzn.to/2rFIskp"> Extech <strong>digital lightmeter</strong></a> for a specific project - sometime I'd love to get into why that specific meter and the challenges of metering LED sources, but that discussion is too long for this margin to contain.</p>
[caption id="attachment_692" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00063-scaled.jpg"><img class="size-medium wp-image-692" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00063-300x169.jpg" alt="" width="300" height="169" /></a> Some specialized tools for specialized circumstances. A sweep generator, frequency counter, DC power supply, oscilloscope, and homebrew frequency generator.[/caption]
<h3>Electrical Power</h3>
<p>A source of consistant, controlled <strong>DC power</strong> is vital for electronics work, since most projects are going to be some flavor of DC-powered. For basic logic-level type work, the least-expensive option is probably an <a href="https://amzn.to/2Y3Rvre">ATX computer power supply</a> with an <a href="https://amzn.to/2OCwelj">ATX breakout board</a>, which will at least provide +3.3, +5, +12 and -12V, which suffices for a lot of Arduino+sensors or Raspberry Pi+breakouts type projects. There are a thousand flavors of those breakout boards, so make sure you find one with the ATX connector type that matches your power supply. There are also screw terminal and terminal lug versions, if you have strong feelings either way.</p>
<p>If your work is less module-oriented and more about building up circuits in a more from-scratch way, a <strong>current-limited bench power supply</strong> is key. A decent power supply will supply relatively low-ripple DC voltage from 0 to 20 or 30 or 50 volts, at 5 or 10 amps max, commonly. What's more, you can set a current-limit such that, when your project runs away and tries to turn itself into a pile of smoke, at least it does so more slowly - the power supply will typically fold back its output voltage to keep the output current below the value you specify. Some fancier models also have the option to just cut off current entirely until the power supply is reset.</p>
[caption id="attachment_700" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00064-scaled.jpg"><img class="size-medium wp-image-700" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00064-300x169.jpg" alt="DC power Supply" width="300" height="169" /></a> Versions of this power supply are available all over the internet at around the $50 price point.[/caption]
<p>My current recommended bench power supply is the <a href="https://amzn.to/33AshSr">Hanmatek HM305P</a>, for a couple reasons - having a digital display so you can set the output voltage at, say, exactly 5V, is handy. As are the six front-panel preset buttons that allow you to just to commonly-used voltage/current limit combinations that you specify. That said, at home I have a <a href="https://amzn.to/2RaiPmy">Yescom power supply</a> with a somewhat higher output current that's useful for <a href="https://jeff.glass/2018/08/25/50w-qrp-amplifier-schematic-pcb-ver-1/">testing RF amplifiers</a>, and its analog controls make it somewhat easier to smoothly vary to the output voltage and see how a circuit/amplifier reacts. If I had to choose only one, I'd get the Hanmatek (or one of its many clones), but an analog-controlled meter is handy for certain situations. (I got by with an <a href="https://www.ebay.com/p/581276384?iid=183982778513&amp;chn=ps&amp;norover=1&amp;mkevt=1&amp;mkrid=711-117182-37290-0&amp;mkcid=2&amp;itemid=183982778513&amp;targetid=596465712468&amp;device=c&amp;mktype=pla&amp;googleloc=9021730&amp;poi=&amp;campaignid=6470719577&amp;mkgroupid=81597521270&amp;rlsatarget=aud-649939740844:pla-596465712468&amp;abcId=1140476&amp;merchantid=6296724&amp;gclid=CjwKCAiA5o3vBRBUEiwA9PVzav8LHOT-RAFp0R2EWk4GEyvkj8gsyByKg8dUNdnkEM4ogZbQpqIXsBoCiwkQAvD_BwE" rel="noopener noreferrer">Elenco Precision XP-656</a> .5A 0-30V DC supply as my primary current-limited supply for <em>years</em>.)</p>
[caption id="attachment_702" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8925.jpg"><img class="size-medium wp-image-702" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8925-300x225.jpg" alt="Hanmatek Power Supply" width="300" height="225" /></a> The Hanmatek interface (top right) is a little unintuitive, but the manual is decently written. It's sitting on top of an older tri-voltage power supply.[/caption]
<p>To connect your power supply to your board, you're going to need an <strong>assortment of wires and connectors</strong>. A handful of the typical USB cable types (A-to-Mini, A-to-B, A-to-Micro) is useful, and you probably already have them floating around in your sock drawer. Generic <a href="https://amzn.to/2DA4987">alligator clips</a> are always handy. <a href="https://amzn.to/34GIOpA">Mini-grabber style test leads</a> are great for hooking to component leads on a breadboard, though they're not rated for much current - in those cases, a <a href="https://amzn.to/2DA4Jmj">beefier clip lead</a> is a better choice.</p>
<p>While most projects are going to be DC powered, having enough AC outlets to have all of your test gear plugged in all the time, plus plenty of outs for temporary plugs, plus a few more, is a tremendous timesaver. You can snag a<a href="https://amzn.to/35Sd0xW"><strong> multi-outlet power strip</strong></a> for relatively cheap these days, but they're also really easy to find at garage sales, fleamarkets, and swapmeets. The <a href="https://www.amazon.com/AmazonBasics-6-Outlet-Protector-2-Pack-2-Foot/dp/B014EKQ5AA/ref=sr_1_4?keywords=power+strip&amp;qid=1575221486&amp;sr=8-4">Amazon Basics 6-plug power strips</a> used to be dirt-cheap, like $3 for a two-pack, but as of this writing they're now $10 for two... a bummer, those used to be a real steal.</p>
<p>If you're ever in doubt about the functionality of an AC outlet, or if you're going to be taking your work to a place where AC wiring  may be questionable, a<a href="https://amzn.to/2Ldtglr"><strong> cheap outlet tester</strong></a> is useful - it will confirm the presence of AC voltage, whether the hot/neutral are reversed, and other incorrect-wiring hazards. If you just need to confirm whether an AC circuit is hot, a <a href="https://amzn.to/35UMWm6"><strong>non-contact voltage detector pen</strong></a> is the easiest tool to use - just hold the on-button and place the non-conducting tip near the (potential) AC voltage. If it beeps and lights up, there's some AC present. Be warned though - the presence of AC-something is not a guarentee of 120 volts or 15 amps or whatever you actually need, just that there's some fluctuating voltage nearby. Just last week I watched an electrician get mislead by his NCV on a three-phase system - his pen told him all 3 phases had AC, but when he got around to actually sticking his meter probes in the test points, one of the phases was only "33V" to ground (i.e. the system had dropped a phase). You've been warned!</p>
<h3>Power Tools</h3>
<p>While I don't often use a <strong>power drill</strong> for actual workbench projects, the ability to stick a screw in a wall or quickly knock a hole in something is nice. I received a <a href="https://amzn.to/384LNdw">cordless Black and Decker 20V drill</a> as a gift years ago, and its been sufficient for my home purposes ever since. Sure, at the point in my careers where I was putting 3/8" lag bolts into 2" of plywood, the building had standardized on <a href="https://amzn.to/35LJU3g">Ryobi impact drivers</a>, which are much stout-er. But the're also more expensive, and for home-use, I just don't usually need that much firepower.</p>
<p>My old accomplice turned my on to the virtues of an <strong>electric screwdriver</strong>. Why would you need an electric screwdriver when you have a high-torque, high speed, large battery drill? Exactly because the electric screwdriver is lightweight, low-speed, and easy to transport - you're not using it to drive screw into material, you're using it to take machine screws out of an electrical panel, say. Or install a hundred rack-mount screws. Or take out and reinstall a Euro-rack model 60 times. The light weight and ease-of-use of the screwdriver limits fatigue over long projects like these. <a href="https://amzn.to/34QiAAI">Black and Decker</a> makes a fine, inexpensive model.</p>
<p>We'll get into the virtues of heat shrink tubing some later day when we dive into materials, but an inexpensive <strong>heat gun</strong> is the appropriate tool for using it. I started with a $10 model from Harbor Frieght which lasted 5 years, and then bought another $10 to replace it. The trouble with all heat guns under $100, it seems, is ergonomics. After you've used the gun for a couple minutes and brought the metal tip to a searing-hot temperature, what do you do with it? This <a href="https://amzn.to/2L9m2yU">Porter-Cable model</a>, with a flat-but you can stand up on your workbench, is the best solution I've seen. (<a href="https://amzn.to/2OBWEnm">Professional models</a> have a flat or angled plate on the back to stand up in just this way.) </p>
<h3>Hand Tools</h3>
<p>A few basic hand tools will go a long way in making your workbench serviceable and ready to tackle common challenges - some are worth a little investment, while others are prime fodder for the cheapo <a href="https://www.harborfreight.com/">Harbor Freight</a> model. And thankfully, there are a number of tools where jumping from the $5 version to the $10 version makes a world of difference, and is worth the Lincoln.</p>
<p>There are lots of different tools to strip insulation off of wire - manual strippers, semi-automated strippers, fully automated stripers, a par of cutting pliers, a knife, your teeth... not that I would recommend all of those. But you can't really go wrong with a basic pair of <strong>wire strippers</strong> that covers gauges from 10 to 30 AWG. These <a href="https://amzn.to/35PRzO1">Paladin wire strippers</a> were our go to at my last job, and they fit the bill just fine. The curved handle takes a little getting used to, but it actually makes them pretty ergonomic, which is nice if you're splicing a couple hundred bits of wire to LEDs in an afternoon, say. </p>
<p>A decent set of <strong>flush cutters</strong> is also worth a minor investment - not more than $7-8 a pair, mind, just don't get the $3 ones or they'll fall apart. Flush cutters are the tool of choice for trimming the leads on components, say, but they're also great for getting a clean end-cut on a piece of wire, or trimming flashing off of 3D-printed models. On the advice of my accomplice at my old job, we'd order <a href="https://amzn.to/34BH3Kg">5-packs of Hakko-brand flush cutters</a> regularly, and they served us well. For less critical cuts, <a href="https://amzn.to/37T349j">a couple pairs of scissors</a> is handy, though for papercraft I prefer <a href="https://amzn.to/2qTnEG9">single-edge razor blades</a>.</p>
<p><strong>Small pliers</strong> are something you can go the inexpensive route on - Harbor Freight or eBay ones would be fine, you're usually not going to be putting so much force on them that you're in danger of damaging them. This set of <a href="https://amzn.to/2rGDvHY">6 assorted pliers for $20</a> I ordered for my new workbench has been pretty solid - the extra long, extra thin needle-nose pliers I keep near my 3D printer for pulling ooze off the nozzle right before a print. Having a few <strong>heavier duty pliers</strong> around is often helpful - just a basic <a href="https://amzn.to/2OVtkqM">lineman's pliers</a> for when you need to put some force into the work would be a good place to start.</p>
[caption id="attachment_693" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00065-scaled.jpg"><img class="size-medium wp-image-693" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00065-300x169.jpg" alt="Long nose pleirs" width="300" height="169" /></a> One of my favorite pairs of pliers - long thin nose, good grip, and $2 at the hardware store.[/caption]
<p>I must confess - I don't find the sets of "<a href="https://amzn.to/2qTHalR">one small screwdriver handle and 1700 bits</a>" to be terribly practical. They're great to have around for special projects, but the extra time spent swapping bits back and forth for every project/object/screw is  wearisome. As <strong>daily driver screwdrivers</strong>, I much prefer a set of basic jewelers screwdrivers in philips, flat, and hex. This <a href="https://amzn.to/33BHZgf">Wera 12-piece</a> set is my go-to recommendation these days, and the carrying-case is nice if you don't have permanent storage set up yet or it needs to go in a work bag.</p>
[caption id="attachment_694" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8950.jpg"><img class="size-medium wp-image-694" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8950-300x225.jpg" alt="Wera Screwdrivers" width="300" height="225" /></a> Decent screwdrivers that don't strip themselves instantly, in a nice carrying case too.[/caption]
<p>A basic <a href="https://amzn.to/2q84g7G">6-in-1 screwdriver</a> suffices for most <strong>large-screwdriver</strong> needs. That link is the cheapest one I could find on Amazon, but honestly, they're often between $1 and $3 at any hardware store, grab a couple then next time you see one.</p>
<p>It's amazing how cheap <strong>digital calipers</strong> have become - less than $20 for a <a href="https://amzn.to/2szYVae">decent 6" caliper</a> that does decimal inches, fractional inches, and millimeters. The calipers are among the top-five most commonly used tools on my bench, along with the soldering iron, pliers, and screwdrivers. You can measure interior dimensions with one, exterior dimensions, depth, radii, all with a precision unmatched by analog means. Get yourself a set, it will change your bench. For larger measurements, a <a href="https://amzn.to/2P1jL9R">basic <strong>tape</strong></a><strong><a href="https://amzn.to/2P1jL9R"> measure</a> </strong>is handy - no need to get a fancy one unless your carpenter-ing regularly.</p>
[caption id="attachment_695" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00067-scaled.jpg"><img class="size-medium wp-image-695" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00067-300x169.jpg" alt="Digital Calipers" width="300" height="169" /></a> 20 years ago, these would have been a multi-hundred dollar item. Now they're basically disposable.[/caption]
<h3>Adhesives</h3>
<p>I wish I had a more in-depth knowledges of adhesives, epoxies, and glues. The properties department at the theater I used to work at maintained an encyclopedic knowledge of which glues were best of which applications, which chemicals were safe for which materials, which drying-times would lead to problems with material interactions... it was stunning. For my general purposes though, there a few basic adhesives that get me through the day more often than not.</p>
<p><strong>Hot</strong> <strong>Glue</strong> is a tremendously versatile material - you can stick most (rough) surfaces together with it, you can build up gussets and supports with it, you mold it to shape a little, and it removes easily from most things except paper. And did you know <a href="https://amzn.to/2OFzInj">it comes in black</a>? A <a href="https://amzn.to/2Dw73uD">decent 100W hot-glue gun</a> is a great "well this just has to hold a little while" solution.</p>
<p>For more permanent fixes, <strong>cyanoacrylate glue </strong>(also known as CA glue or the brand names <strong><a href="https://amzn.to/33Hf7Db">Super Glue</a> </strong>or <strong>Crazy Glue</strong>) is a good go-to - it bonds to most things with a slightly-rough surface (so roughing up, say, metal with a file first is a good idea). It hardens in the presence of moisture - atmospheric humidity is enough, but if you put a big glob on something, the outside layer will start to set first and slow the setting process of the inside. Use only a thing layer to reduce this issue - in the right circumstances, the glue will set in a matter of seconds. If you need a little bit more working time or pliability, <strong><a href="https://amzn.to/2Y69opn">E6000 Adhesive</a></strong> is a better choice.</p>
<p>Very High Bond <strong>double-sided tape</strong> (VHB) is an amazing product (well, line of products) from 3M. They give you the versatility of double-stick tape with some crazy adhesive capabilities. <a href="https://www.3m.com/3M/en_US/vhb-tapes-us/">3M's full catalog of adhesive tapes</a> is worth browsing if you're into that sort of thing. As a good default, their <a href="https://amzn.to/2Lr96EL">RP62 foam-tape</a> is strong, slightly spongy (good for bridging irregular surfaces), and relatively inexpensive.</p>
<p>For adhering large sheets of goods together, especially paper products, some kind of <strong>spray adhesive </strong>is going to be easier to use than a brush-on or dab-on variety. <a href="https://amzn.to/2OGOqut">3M's Super 77</a> is the de-facto standard spray adhesive for light- and medium-duty applications - adhering paper to paper for scrapbooking, or laminates to sheet goods. Simply spray Super 77 onto one of the surfaces, wait 60-90 seconds for the adhesive to become slightly tacky, then smoothly lay the second material onto the first. For heavier applications, there's a <a href="https://amzn.to/2L9STDw">High Strength 90 spray adhesive</a> that works much the same.</p>
<p>I'd be remiss if I didn't mention <a href="http://www.thistothat.com/">thistothat.com</a>, a website that generates recommendations if you want to glue <em>this material</em><em> </em>to <em>that material</em>. Want to stick ceramic to rubber? They've got a solution to that, and lots of other combinations as well. Well worth a look.</p>
<h3>3D Printing</h3>
<p>I know I said I wouldn't get too far into specific materials or specific arenas of work, but having a 3D printer in your electronics workshop opens up a whole world of mechanical possibilities. Whether its <a href="https://jeff.glass/2018/08/28/50w-qrp-amplifier-3d-printed-case-design-and-livestream/">custom enclosures for new projects</a> or <a href="https://jeff.glass/2019/03/09/3d-printing-in-the-home-workshop/">quality of life improvements</a> for the shop or project mockups or practical tools, the sky's the limit of what you can accomplish. Getting started in 3D printing could be a whole series of articles in and of itself, but for the moment let me confine myself to some recommendations of tools to facilitate the practical use of 3D printing on an electronics workbench.</p>
<p><img class="aligncenter size-large wp-image-351" src="https://jeff.glass/wp-content/uploads/2019/03/PSU_1-1024x768.jpg" alt="" width="720" height="540" /></p>
<p>To start, the 3D printer itself. I don't have any experience with <a href="https://www.youtube.com/watch?v=8a2xNaAkvLo">SLA 3D printing</a>, only the more traditional <a href="https://www.youtube.com/watch?v=3lRhZTdafE4">FDM method</a>. An FDM 3D printer is essentially a fancy robotic hot-glue gun on rails, that moves precisely around a 3D space squirting out hot plastic as it goes, which sets into shape as it rapidly cools down. This is a relatively speedy way of printing an object, but the spatial resolution of the resulting object is limited by the resolution of both the stepper motors that push the print-nozzing around and the diameter of the print nozzle. Still, with a stock 0.4mm nozzle and a basic machine, some <a href="https://www.youtube.com/watch?v=Dss1yUHH-QY">really beautiful things</a> are possible.</p>
[caption id="attachment_704" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00071-small.png"><img class="wp-image-704 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00071-small-300x169.png" alt="Wall Thermostat Tag" width="300" height="169" /></a> How do YOU control your hot-end?[/caption]
<p>If I were to recommend a first FDM 3D printer to someone today, it would be the <a href="https://www.prusa3d.com/original-prusa-mini/">Original Prusa MINI</a>. Josef Prusa was one of the original movers and shakers when the hobbyist 3D printer train was getting rolling in early 2010s, and his i3 model is perhaps the most popular 3D printer in the world. With a reputation for a great product and great customer service, the release of a printer at that key $350 price point that's become so popular, with mesh bed leveling, a heated bed with removable build-sheets, ethernet connectivity with WiFi upgrade possibilities, an option filament run-out sensor... I'm very excited for this thing. It's currently on pre-order for $350 US to start shipping around the end of the year, and I think it's going to be a slam dunk. When I think that i paid about that much for my <a href="https://www.monoprice.com/product?p_id=13860">Monoprice Maker Select V2.1</a> only 3 years ago, it's amazing to think how far the technology has come.</p>
[caption id="attachment_705" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00072-scaled.jpg"><img class="size-medium wp-image-705" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00072-300x169.jpg" alt="3D Printer" width="300" height="169" /></a> This printer took a few mods to make the frame rock-solid. Amazing what 3 years progress looks like.[/caption]
<p>Of course, all of the specific nozzles, filaments, and accessories you need will be specific to your printer and your projects. But I can recommend a couple of tools that will be useful to all FDM 3D-printing setups, the first being a <a href="https://amzn.to/2DLYOuF">set of 3D printing spatulas.</a> Most printers ship with a <a href="https://amzn.to/33Cfxeh">putty knife</a> as their print-removal-tool, which is an excellent way to gouge a hole in your print surface (or your hand!). Since receiving a set of these spatulas as a present for Christmas last year, they've easily become the tool I keep closest to the printer.</p>
[caption id="attachment_706" align="aligncenter" width="169"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00073-scaled.jpg"><img class="size-medium wp-image-706" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00073-169x300.jpg" alt="3D Printing Spatulas" width="169" height="300" /></a> These were definitely sitting on a shelf somewhere as palette knives and someone thought "you know what we could sell those as? 3D printing spatulas!" But they work, so who cares.[/caption]
<p>Second, while there are lots of methods of <a href="https://www.youtube.com/watch?v=AaF28dnDgKA">getting your 3D print to stick to the print bed</a>, keeping the bed itself clean of oils and debris goes a long way toward success. I keep a bottle of <a href="https://amzn.to/2rFOu4y">high-strength isopropyl alcohol</a> and some lint-free clothes nearby to wipe down the bed between every few prints, just to make sure the residual oils from printing and from my hands don't cause premature liftoff from the print bed.</p>
<h3>Software</h3>
<p>In this digital epoch, MS Paint is just as practical a tool as a paintbrush. So let's not leave out the digital tools that we use to make, track, distribute, and record projects on the workbench.</p>
<p>For <strong>2D drafting</strong>, my two primary tools are <a href="https://www.autodesk.com/products/autocad/overview">AutoCAD</a> and <a href="https://www.vectorworks.net/en-US">Vectorworks</a>. AutoCAD (made by AutoDesk) is an incredibly powerful CAD program, and it's been around forever. Want to model a bracket, or a whole airplane, or design a building, or pocket watch? AutoCAD can do it. It does have a fairly-steep learning curve - there are folks who make entire careers out of just working in AutoCAD - but it gives you a lot of power for your trouble. Vectorworks is a less-commonly-used program that I became very familiar with in my ten years as a stage lighting technician; due to its excellent stage-lighting plugins, it's the de-facto standard for theater lighting. And where AutoCAD focuses on building a "model" and having you derive drawings from that model, Vectorworks focuses on the drawing itself as <em>the thing to be made</em>. It might seem like a semantic difference, but the way that these philosophies influence the workflow of the two programs means that Vectorworks is often my choice for creating 2D draftings.</p>
<p>For <strong>3D drafting</strong>, my go-to software is <a href="https://www.autodesk.com/products/fusion-360/overview-b">Fusion360</a>, also from AutoDesk. Fusion is a timeline-centric, parametric drafting program, which allows you to go 'back in time' to an earlier moment of a design, make changes, and see them ripple through to the current version of the design. It's a very powerful program, though not without its own learning curve. For someone just diving into 3D modeling for the first time, I'd recommend starting with something like <a href="https://www.tinkercad.com/">Tinkercad,</a> a cloud-based modelling program that centers around adding and subtracting primitive objects from each other to build up a more complicated design. I've also had friends work in <a href="https://www.sketchup.com/">SketchUp</a>, which tries to blend Fusions 2D sketch capabilities with the ease of Tinkercad. Unfortunately, SketchUp seems to have trouble successfully exporting STL files for printing, so I can't recommend it as a strong starting point.</p>
<p>Once you have your 3D model and you're ready to 3D print it, you'll need a <strong>slicer program</strong> to turn the model into a series of step-by-step instructions that the printer can actually follow. (Move to such-and-such coordinates in so-many seconds while extruding this-amount of plastic. Repeat x10000). I personally use <a href="https://ultimaker.com/software/ultimaker-cura">Cura</a>, now from Ultimaker. It's straightforward to use, and has all the options and customizability I've found a need for. I know lots of folks who have good onions about the open source <a href="https://slic3r.org/">Slic3r project</a> as well.</p>
<p><strong>Programming and text editing </strong>may or may not be a part of your electronics hobby, but if they are, having simple straightforward tools is a good way to get more productivity out of your text-based time. Of course for programming Arduinos, the <a href="https://www.arduino.cc/en/main/software">Arduino IDE</a> is a perfectly good place to start. It's not fully featured in an respect, but it just works, you can write code in it and plonk it on an Arduino, and that's all most people care about. I use <a href="https://www.sublimetext.com/">Sublime Text</a> as my main text editor and sometimes basic dev environment (when writing things in <a href="https://love2d.org/">Love2D</a>, for example). </p>
<p>I might be putting my foot in it by admitting that I <strong>design circuit boards</strong> in AutoDesk's <a href="https://www.autodesk.com/products/eagle/overview">Eagle</a> software rather than the open source <a href="https://www.kicad-pcb.org/">KiCad</a>. To be honest, I don't have strong feelings about either software either way - Eagle was just the first one I used and I've become used to its workflow and design choices, but I know there are die-hards on both sides of this river. Regardless, to live in an age where a maker has multiple, quality options for free PCB design software is amazing.</p>
<p>Of course, once you've designed a circuit board, you're going to need to make it, somehow. While they're not software per-say, the growth of <strong>PCB Shopping Cart</strong> websites over the past few years has really opened up what's possible for the solo electronics workshop. No more sweating with getting tiny wires soldered to tiny chips to break them out to veroboard; you can just spin a PCB with the proper footprint, or indeed the whole circuit. Any of these services will let you upload your <a href="https://oshpark.com/">OSHPark</a> really started the whole small-batch-PCB movement, and their service has always been great, reliable, and high quality. I've also used <a href="https://jlcpcb.com/">JLCPCB</a> for somewhat larger runs. If you're interested in looking at many, many options, <a href="https://pcbshopper.com/">PCBShopper</a> is an aggregator that lets you compare prices, lead times, and options across almost two dozen shopping cart-style manufacturers.</p>
<h3>Safety</h3>
<p>Just because you may not have a <a href="https://www.youtube.com/watch?v=UwzwzobO5rs">giant 5-axis robot in your workshop</a> doesn't mean you shouldn't take safety seriously. Whether your workshop is in your home, an outside shop, or your workplace, a few basic safety precautions could mean the difference between peaceful Thursday and a trip to the ER.</p>
<p><strong>Smoke and carbon monoxide detectors </strong>should be present in several places in your building, but having one in the workshop is a good idea, especially if you have any hot-tools (soldering iron, heat gun, 3D printer). They're so <a href="https://amzn.to/2RfwNDH">inexpensive and easy to install</a>, it's a no-brainer to pick one up. A <strong>fire extinguisher<em> </em></strong>should also be on your list - and if you ever have the opportunity to get a little training on how to properly use one, it's well worth it. Make sure to mount your <a href="https://amzn.to/2La7TkI">fire extinguisher</a> where you could actually get to it if the things that are most likely to start a fire, did.</p>
[caption id="attachment_707" align="aligncenter" width="576"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00074-scaled.jpg"><img class="size-large wp-image-707" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00074-576x1024.jpg" alt="Fire extinguisher" width="576" height="1024" /></a> I put my fire extinguisher right by the door to my workshop, so I can grab it on the way in, or on the way out.[/caption]
<p>While we're thinking about fire, consider whether your workshop needs a <strong>flammables cabinet</strong>. If you're storing more than a few things of paint, spray paint, spray adhesives, solvents, cleaners, etc, it's worth thinking about what would happen if they were to catch a little on fire. It's not usually worth buying on online - the shipping is killing - but cabinets pop up on Craigslist, auctions, and industrial surplus all the time. <a href="https://www.go-dove.com/">Go Industry Dove Bid</a> is a good online collector of industrial surplus auctions, but be sure to check out your local city/state surplus resources as well.</p>
<p>Finally, <strong>safety glasses</strong>. Just wear them, even when you think you don't have to. About 4 years ago, while soldering "just one more joint" on a PCB before going to bed, a piece of hot solder popped up and got me in the lower-left eyelid. A quarter-inch higher and it would have been right in my eye, with who knows what consequences. I'm not always perfect about this myself, but I do keep a pair of safety glasses right on my workbench to remind myself that if I want to take a risk, it's my own damn fault. Get <a href="https://amzn.to/2LbC37b">a pair of glasses that are comfortable</a> so you're more likely to wear them. </p>
<h3>Organization</h3>
[caption id="attachment_711" align="aligncenter" width="720"]<a href="https://jeff.glass/wp-content/uploads/2019/12/Resistors-1.jpg"><img class="size-full wp-image-711" src="https://jeff.glass/wp-content/uploads/2019/12/Resistors-1.jpg" alt="Resistor Bins" width="720" height="960" /></a> No such thing as too organized.[/caption]
<p>I've come to realize something over the past 10 years - the most volume I'm willing to rummage through for a tool, part, or piece is about 400 cubic inches, or a around 8 liters. Any more volume than that, especially for small parts, and there's just too many potential places where a small object can hide. So standardizing on a <strong>storage bin</strong> that's slightly smaller than this makes good sense. At home, I use<a href="https://www.menards.com/main/storage-organization/storage-totes-bins/storage-totes/bella-storage-solution-6-quart-clear-storage-bin/belmn0105011012/p-1444430572277-c-12667.htm?tid=5967592820392133336&amp;ipos=2"> 6-Quart Bella bins</a> from Menards, while at work I use <a href="https://amzn.to/2YdeLDu">6-Quart Sterilite bins</a>. Once a project, or set of components, or tools overflows one of these bins, there's probably enough diversity in goods to split it up into two separate bins anyway - i just recently split the <em>Microcontrollers</em> bin into <em>Arduinos </em>and <em>Non-Arduino Microcontrollers</em>, for example. Now both species are easier to find.</p>
[caption id="attachment_708" align="aligncenter" width="720"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00077-scaled.jpg"><img class="size-large wp-image-708" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00077-1024x576.jpg" alt="Storage Bins" width="720" height="405" /></a> So many pretty bins, all in a row.[/caption]
<p>I've always loved a good <strong>whiteboard</strong> (I just snagged <a href="https://amzn.to/2Y3JoLk">another 18"x24"</a> one for my office), but I recently stumbled upon these <a href="https://amzn.to/2Y4xoJC">ultra-fine tip whiteboard markers</a>, which I just absolutely love. They allow you to squeeze so much actual detail and small size into a whiteboard doodling project. Not for presenting to a group, mind, just for working through projects on your own or with a partner. (I also 3D printed a cup for them for my kitchen whiteboard calendar, more on that in a future post I think.)</p>
<p><a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00078-scaled.jpg"><img class="aligncenter size-large wp-image-710" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00078-576x1024.jpg" alt="Wall Pen Cup" width="576" height="1024" /></a></p>
<p>I'm a strong believer in the power of labeling to <a href="https://www.youtube.com/watch?v=oiSn2JuDQSc">make things just so,</a> and a <strong>labelmaker</strong> is a really easy way to help keep things organized. The <a href="https://amzn.to/35TwTEZ">Brother PTD600</a> has been a nice blend between portability and computer control - you get most of the functionality just using it handheld, or you can hook it up to Brother's software on your computer to make more complicated layouts, batch prints, etc. The sound department at the theatre I used to work at had a <a href="https://amzn.to/37WFbxN">Rhino BMP21-Plus</a>, which was really awesome at making <a href="https://amzn.to/2qaic17">self-laminating labels</a> to label cables - with the amount of work that went into cable arrangement and maintenance in that place, the self-laminating labels were a godsend. The tape's a little pricey, as is the labeller, so if you're not doing a lot of patch panels, say, I would stick with the Brother and the TZe line of tapes.</p>
<h3>Lighting</h3>
<p>Decent task lighting makes a world of difference - you'll find you're suddenly better at soldering, more deft at assembly, swifter to catch errors and notice mistakes. No sense working in the dark if you don't have to.</p>
<p>I've done a number of lighting setups in my home workshops over time. Right now I have three <a href="https://amzn.to/2P0nUel">24" fluorescent fixture</a>s overhead that were remaindered from a theatre production ages ago (in addition to a basic 100W ceiling light). I've also got a couple of <a href="https://amzn.to/2P1At9l">clip lights</a> with <a href="https://amzn.to/2LcrVeK">100W LED bulbs</a> closer to my actual workbench surface to price more focused task lighting, and a <a href="https://amzn.to/33FODSy">cheap gooseneck light from IKEA</a> sitting on the work surface for when I need really targeted illumination. While I haven't re-installed it since I moved into a new home workshop a few months ago, adding under-shelf lights to my <a href="https://jeff.glass/2019/03/03/home-office-overhaul/">home shelving setup</a> made a big difference in being able to see and find components on the shelves, as well as adding some cheery glow to the workstation. My workshop at work has lots of overhead fluorescent light, and I added a <a href="https://amzn.to/2R9XyZS">positionable jointed lamp</a> for some more focused lighting. </p>
<h3>Your Own Shop</h3>
<p>If you're still reading this 6500 words later, you might thinking - <em>Holy crap, that's a lot of stuff, I'll never be able to have my own electronics workbench</em>. But keep in mind - this is the setup and tools that work for me, with what I want to do, that I've built up over a decade of working professionally and as a hobbyist in this arena. Would you look at a professional auto mechanic and say "Wow, I'll never open my hood again?" It's all a matter of starting somewhere.</p>
[caption id="attachment_712" align="aligncenter" width="640"]<a href="https://jeff.glass/wp-content/uploads/2019/12/FirstWorkbench-1.jpg"><img class="size-full wp-image-712" src="https://jeff.glass/wp-content/uploads/2019/12/FirstWorkbench-1.jpg" alt="Workbench" width="640" height="480" /></a> Two apartments and many years ago, this is what my "workbench" looked like. And it was still a BLAST.[/caption]
<p>The easiest way to pick a project is to <strong>find a project you want to accomplish and work toward making it happen</strong>. Maybe it's monitoring to see whether your garage door is open or closed. Or what the weather's going to be tomorrow. Maybe your dog needs some entertainment, or you need a new sparkling light over the crib, or the you have an itch to build a radio or a tesla coil or who knows what. Once you find a thing you're excited about building, that will guide you as to which tools to find first, which will lead you to more things you can do with those tools, which will lead to more tools... and so on. </p>
<p>And most importantly - have fun.</p>
<h3>Special Thanks</h3>
<p>I wouldn't have been aware of so many of these tools, ideas, and arenas without a lot of excellent colleagues and friends. Thank you especially to Kenneth, Palmer, Alec, Joe, Mike, Jabin, Lee, Travis, Chris, and all the other excellent technicians who continue to be an inspiration for excellent technical work.</p>
<p><!-- wp:paragraph --> <!-- /wp:paragraph -->gory are multimeters and oscilloscopes. Let's take a look at both of them first before we get into some more specialized tools.</p>
<p>There are lots and lots of good-enough <strong>multimeters</strong> in the world today, of all kinds of different brands, and they're pretty much going to all be OK. Rather than try and pick out specific ones from Amazon, here are the features I'd look for if I was looking to add a decent multimeter to my bench today:</p>
<ul>
<li>The basics: AC/DC Voltage, AC/DC Current (up to 10A is useful), resistance (to 0.1Ω and 1 MΩ is nice).</li>
<li>Continuity test- this is the most useful setting on a multimeter. Using this setting and touching a wire/component/circuit with the probes will tell you if there's a low impedance path between the two points; i.e., if they're connected. Super useful.</li>
<li>Auto power-off. Doesn't seem like much, but it's real easy to kill batteries without it.</li>
<li>4-digit precision (some cheap meters only give 3)</li>
</ul>
<p>The other features a meter might have include: temperature measurement, diode-forward-voltage measurement, True RMS AC measurement, frequency (power line), duty-cycle, capacitance, transistor hFE, illuminate... the list goes on. I've appreciated having a true RMS measurement in tricky AC power situations, and having an easy frequency-check can be handy, but for the rest of these, I'd rather rely on a purpose-made tool like a thermometer, <a href="https://amzn.to/2OXmoty">lightmeter</a>, or <a href="https://amzn.to/2r2n6NX">transistor checker</a>, rather than something built into my multimeter.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00059-scaled.jpg"><img class="aligncenter size-medium wp-image-688" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00059-169x300.jpg" alt="" width="169" height="300" /></a></p>
<p>If you've got the cash and are looking for something to last 20 years, the <a href="https://amzn.to/2sy0SUz">Fluke 117</a> is a really solid primary meter. Fluke has really been <em>the</em> brand name in quality meters for the past lots-of-years - well made, reliable, accurate. Not super cheap, but you do get what you pay for. My current department has standardized on them for most work, and that's been swell. For most things, we don't need <a href="https://amzn.to/2Y0Q90F">the $300+ meter</a> (which gives you min/max tracking and microAmp measurement) or <a href="https://amzn.to/2OSDNmQ">the $500 meter</a> (with its fancy clamps and probes). In fact, a <a href="https://amzn.to/2DA9tZ9">basic $40 meter</a> is going to be fine for almost everything you do.</p>
<p>A little aside - why are there no benchtop-multimeters in the super-affordable price range? When you can get a passable, portable multimeter for $20, why are even the<a href="https://amzn.to/34BhIA5"> cheapie-versions of a benchtop meter</a> still $150? I think there would be a strong market for a $60, benchtop form-factor, ok-ish meter. I have an old Simpson 460-6 at work that I love using, not because it's the world's most amazing meter, but just because it's always <em>there</em> and the form facotr is right. How about it, AliExpress?</p>
[caption id="attachment_689" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8937-rotated.jpg"><img class="size-medium wp-image-689" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8937-300x225.jpg" alt="Simpson 460-6" width="300" height="225" /></a> Now can I get this form factor, with a little adorable LED display, for less than $200?[/caption]
<p>Moving on to <strong>oscilloscopes</strong>, I think there are some who would say this isn't essential for electronics work - after all, if you end up working mostly with digital signals, or analog-voltages that don't change over time, is it really worth it? I would counter that the oscilloscope is your eyes into the realm of what your electronics are doing, and is a vitally useful tool in many situations. If you've never used an oscilloscope, may I once again recommend <a href="https://www.youtube.com/watch?v=067W7h1BhxE">a video by W2AEW.</a></p>
<p>Scopes are another arena where you don't need to break the bank to get something decent enough to use. My first scope was a venerable <a href="https://www.scribd.com/document/364412737/BK-Precision-1535a">BK-Precision 1535A</a> 35Mhz analog scope that a bought from a guy on Craigslist for about $40. For basic electronics work, 20Mhz or so is plenty - you're most likely going to working at slower speeds (audio to 20Khz, maybe 250kHz for serial or RS485) or much, much higher (HDMI, USB, etc) where a scope really isn't the right tool in most cases anyway. Or at least, once you're progressing to the level where you're worrying about measuring GHz voltages, you're likely to acquire more specialized tooling along the way.</p>
[caption id="attachment_690" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00061-scaled.jpg"><img class="size-medium wp-image-690" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00061-300x169.jpg" alt="" width="300" height="169" /></a> This old thing is still puttering away on my workbench. Still worked just fine for most things I'd care to do with it.[/caption]
<p>I think a decent analog scope is a really good place to start if you've never used a scope before - better to tackle the fundamentals of the tool before having to learn how to use a particular menu structure as well. The shop at my new job came with a <a href="https://www.allaboutcircuits.com/test-measurement/oscilloscopes/compactscope-series-v-1565/">Hitachi V1565 100MHz analog scope</a> with measurement capability that I've been very happy with - the ability to add cursors to an analog display to measure voltage, time, or duty cycle is handy. At home I've now also got an <a href="https://amzn.to/35O2ZBV">Owon PDS5022T</a> 25MHz digital scope  that was gifted to me - I like the tools having a digital scope provides, but I find it significantly more clunky than either of the classic analog scopes in my life.</p>
[caption id="attachment_676" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8930.jpg"><img class="wp-image-676 size-medium" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8930-300x225.jpg" alt="Hitachi 1565" width="300" height="225" /></a> The "new" (to me) oscilloscpe I have at work. 100MHz bandwidth is overkill for anything I can think we'll run into, but you never know...[/caption]
<p>So, if you're looking for a bench scope and you've never used one before, I'd say start analog. I see on eBay right now you can buy a gently-loved 2-channel analog scope for around $50-60 (plus $40 shipping, those things aren't light). Not a bad way to go.</p>
<p>Something my accomplice at my old job turned me on to is <a href="https://www.amazon.com/s?k=portable+oscilloscope">small, portable oscilloscopes</a>. I don't have a specific model to recommend, but they can be useful in specific circumstances - not so much to actually interrogate the characteristics of a signal, but more as a signal checker. Do I have AC here, do I have something that looks like RS-485 there, etc? If you do buy one, make sure you get one with an integrated battery (not all do) - getting one that still has to be plugged in makes it far less useful.</p>
<p>There are some more niche electronic tools that I make use of on my bench, but mostly because of my <a href="https://kk9jef.wordpress.com/">ham radio background</a>. A decent <strong>frequency counter</strong> is useful in that arena - I've got a classic <a href="https://www.youtube.com/watch?v=okMwS4IXz5E">Heathkit IM-2420</a> that I picked up at a swap-meet, but I'm really intrigued by the new wave of <a href="https://amzn.to/2L8CJdv">inexpensive benchtop frequency counters</a> that have popped up in the past couple years that claim to do 0.1Hz-2.4GHz for only $70. A <strong>signal genetor</strong> is also really useful in my work - I <a href="https://kk9jef.wordpress.com/2017/07/10/si5351-signal-generator/">built my own</a> around an Si5351 and an Arduino, but you can buy a <a href="https://www.amazon.com/Generator-KKmoon-Precision-Dual-Channel-Arbitrary/dp/B071HJ31WN/ref=sr_1_7?keywords=function+generator&amp;qid=1575140813&amp;sr=8-7">0-25Mhz</a> or <a href="https://amzn.to/35QquKJ">0-60Mhz arbitrary function generator</a> for not a lot of cash these days, and I have colleagues who speak highly of both. Since my last job was more lighting-focused, we purchased an<a href="https://amzn.to/2rFIskp"> Extech <strong>digital lightmeter</strong></a> for a specific project - sometime I'd love to get into why that specific meter and the challenges of metering LED sources, but that discussion is too long for this margin to contain.</p>
[caption id="attachment_692" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00063-scaled.jpg"><img class="size-medium wp-image-692" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00063-300x169.jpg" alt="" width="300" height="169" /></a> Some specialized tools for specialized circumstances. A sweep generator, frequency counter, DC power supply, oscilloscope, and homebrew frequency generator.[/caption]
<h3>Electrical Power</h3>
<p>A source of consistant, controlled <strong>DC power</strong> is vital for electronics work, since most projects are going to be some flavor of DC-powered. For basic logic-level type work, the least-expensive option is probably an <a href="https://amzn.to/2Y3Rvre">ATX computer power supply</a> with an <a href="https://amzn.to/2OCwelj">ATX breakout board</a>, which will at least provide +3.3, +5, +12 and -12V, which suffices for a lot of Arduino+sensors or Raspberry Pi+breakouts type projects. There are a thousand flavors of those breakout boards, so make sure you find one with the ATX connector type that matches your power supply. There are also screw terminal and terminal lug versions, if you have strong feelings either way.</p>
<p>If your work is less module-oriented and more about building up circuits in a more from-scratch way, a <strong>current-limited bench power supply</strong> is key. A decent power supply will supply relatively low-ripple DC voltage from 0 to 20 or 30 or 50 volts, at 5 or 10 amps max, commonly. What's more, you can set a current-limit such that, when your project runs away and tries to turn itself into a pile of smoke, at least it does so more slowly - the power supply will typically fold back its output voltage to keep the output current below the value you specify. Some fancier models also have the option to just cut off current entirely until the power supply is reset.</p>
<p>My current recommended bench power supply is the <a href="https://amzn.to/33AshSr">Hanmatek HM305P</a>, for a couple reasons - having a digital display so you can set the output voltage at, say, exactly 5V, is handy. As are the six front-panel preset buttons that allow you to just to commonly-used voltage/current limit combinations that you specify. That said, at home I have a <a href="https://amzn.to/2RaiPmy">Yescom power supply</a> with a somewhat higher output current that's useful for <a href="https://jeff.glass/2018/08/25/50w-qrp-amplifier-schematic-pcb-ver-1/">testing RF amplifiers</a>, and its analog controls make it somewhat easier to smoothly vary to the output voltage and see how a circuit/amplifier reacts. If I had to choose only one, I'd get the Hanmatek (or one of its many clones), but an analog-controlled meter is handy for certain situations. (I got by with an <a href="https://www.ebay.com/p/581276384?iid=183982778513&amp;chn=ps&amp;norover=1&amp;mkevt=1&amp;mkrid=711-117182-37290-0&amp;mkcid=2&amp;itemid=183982778513&amp;targetid=596465712468&amp;device=c&amp;mktype=pla&amp;googleloc=9021730&amp;poi=&amp;campaignid=6470719577&amp;mkgroupid=81597521270&amp;rlsatarget=aud-649939740844:pla-596465712468&amp;abcId=1140476&amp;merchantid=6296724&amp;gclid=CjwKCAiA5o3vBRBUEiwA9PVzav8LHOT-RAFp0R2EWk4GEyvkj8gsyByKg8dUNdnkEM4ogZbQpqIXsBoCiwkQAvD_BwE" rel="noopener noreferrer">Elenco Precision XP-656</a> .5A 0-30V DC supply as my primary current-limited supply for <em>years</em>.)</p>
<p>To connect your power supply to your board, you're going to need an <strong>assortment of wires and connectors</strong>. A handful of the typical USB cable types (A-to-Mini, A-to-B, A-to-Micro) is useful, and you probably already have them floating around in your sock drawer. Generic <a href="https://amzn.to/2DA4987">alligator clips</a> are always handy. <a href="https://amzn.to/34GIOpA">Mini-grabber style test leads</a> are great for hooking to component leads on a breadboard, though they're not rated for much current - in those cases, a <a href="https://amzn.to/2DA4Jmj">beefier clip lead</a> is a better choice.</p>
<p>While most projects are going to be DC powered, having enough AC outlets to have all of your test gear plugged in all the time, plus plenty of outs for temporary plugs, plus a few more, is a tremendous timesaver. You can snag a<a href="https://amzn.to/35Sd0xW"><strong> multi-outlet power strip</strong></a> for relatively cheap these days, but they're also really easy to find at garage sales, fleamarkets, and swapmeets. The <a href="https://www.amazon.com/AmazonBasics-6-Outlet-Protector-2-Pack-2-Foot/dp/B014EKQ5AA/ref=sr_1_4?keywords=power+strip&amp;qid=1575221486&amp;sr=8-4">Amazon Basics 6-plug power strips</a> used to be dirt-cheap, like $3 for a two-pack, but as of this writing they're now $10 for two... a bummer, those used to be a real steal.</p>
<p>If you're ever in doubt about the functionality of an AC outlet, or if you're going to be taking your work to a place where AC wiring  may be questionable, a<a href="https://amzn.to/2Ldtglr"><strong> cheap outlet tester</strong></a> is useful - it will confirm the presence of AC voltage, whether the hot/neutral are reversed, and other incorrect-wiring hazards. If you just need to confirm whether an AC circuit is hot, a <a href="https://amzn.to/35UMWm6"><strong>non-contact voltage detector pen</strong></a> is the easiest tool to use - just hold the on-button and place the non-conducting tip near the (potential) AC voltage. If it beeps and lights up, there's some AC present. Be warned though - the presence of AC-something is not a guarentee of 120 volts or 15 amps or whatever you actually need, just that there's some fluctuating voltage nearby. Just last week I watched an electrician get mislead by his NCV on a three-phase system - his pen told him all 3 phases had AC, but when he got around to actually sticking his meter probes in the test points, one of the phases was only "33V" to ground (i.e. the system had dropped a phase). You've been warned!</p>
<h3>Power Tools</h3>
<p>While I don't often use a <strong>power drill</strong> for actual workbench projects, the ability to stick a screw in a wall or quickly knock a hole in something is nice. I received a <a href="https://amzn.to/384LNdw">cordless Black and Decker 20V drill</a> as a gift years ago, and its been sufficient for my home purposes ever since. Sure, at the point in my careers where I was putting 3/8" lag bolts into 2" of plywood, the building had standardized on <a href="https://amzn.to/35LJU3g">Ryobi impact drivers</a>, which are much stout-er. But the're also more expensive, and for home-use, I just don't usually need that much firepower.</p>
<p>My old accomplice turned my on to the virtues of an <strong>electric screwdriver</strong>. Why would you need an electric screwdriver when you have a high-torque, high speed, large battery drill? Exactly because the electric screwdriver is lightweight, low-speed, and easy to transport - you're not using it to drive screw into material, you're using it to take machine screws out of an electrical panel, say. Or install a hundred rack-mount screws. Or take out and reinstall a Euro-rack model 60 times. The light weight and ease-of-use of the screwdriver limits fatigue over long projects like these. <a href="https://amzn.to/34QiAAI">Black and Decker</a> makes a fine, inexpensive model.</p>
<p>We'll get into the virtues of heat shrink tubing some later day when we dive into materials, but an inexpensive <strong>heat gun</strong> is the appropriate tool for using it. I started with a $10 model from Harbor Frieght which lasted 5 years, and then bought another $10 to replace it. The trouble with all heat guns under $100, it seems, is ergonomics. After you've used the gun for a couple minutes and brought the metal tip to a searing-hot temperature, what do you do with it? This <a href="https://amzn.to/2L9m2yU">Porter-Cable model</a>, with a flat-but you can stand up on your workbench, is the best solution I've seen. (<a href="https://amzn.to/2OBWEnm">Professional models</a> have a flat or angled plate on the back to stand up in just this way.) </p>
<h3>Hand Tools</h3>
<p>A few basic hand tools will go a long way in making your workbench serviceable and ready to tackle common challenges - some are worth a little investment, while others are prime fodder for the cheapo <a href="https://www.harborfreight.com/">Harbor Freight</a> model. And thankfully, there are a number of tools where jumping from the $5 version to the $10 version makes a world of difference, and is worth the Lincoln.</p>
<p>There are lots of different tools to strip insulation off of wire - manual strippers, semi-automated strippers, fully automated stripers, a par of cutting pliers, a knife, your teeth... not that I would recommend all of those. But you can't really go wrong with a basic pair of <strong>wire strippers</strong> that covers gauges from 10 to 30 AWG. These <a href="https://amzn.to/35PRzO1">Paladin wire strippers</a> were our go to at my last job, and they fit the bill just fine. The curved handle takes a little getting used to, but it actually makes them pretty ergonomic, which is nice if you're splicing a couple hundred bits of wire to LEDs in an afternoon, say. </p>
<p>A decent set of <strong>flush cutters</strong> is also worth a minor investment - not more than $7-8 a pair, mind, just don't get the $3 ones or they'll fall apart. Flush cutters are the tool of choice for trimming the leads on components, say, but they're also great for getting a clean end-cut on a piece of wire, or trimming flashing off of 3D-printed models. On the advice of my accomplice at my old job, we'd order <a href="https://amzn.to/34BH3Kg">5-packs of Hakko-brand flush cutters</a> regularly, and they served us well. For less critical cuts, <a href="https://amzn.to/37T349j">a couple pairs of scissors</a> is handy, though for papercraft I prefer <a href="https://amzn.to/2qTnEG9">single-edge razor blades</a>.</p>
<p><strong>Small pliers</strong> are something you can go the inexpensive route on - Harbor Freight or eBay ones would be fine, you're usually not going to be putting so much force on them that you're in danger of damaging them. This set of <a href="https://amzn.to/2rGDvHY">6 assorted pliers for $20</a> I ordered for my new workbench has been pretty solid - the extra long, extra thin needle-nose pliers I keep near my 3D printer for pulling ooze off the nozzle right before a print. Having a few <strong>heavier duty pliers</strong> around is often helpful - just a basic <a href="https://amzn.to/2OVtkqM">lineman's pliers</a> for when you need to put some force into the work would be a good place to start.</p>
[caption id="attachment_693" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00065-scaled.jpg"><img class="size-medium wp-image-693" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00065-300x169.jpg" alt="Long nose pleirs" width="300" height="169" /></a> One of my favorite pairs of pliers - long thin nose, good grip, and $2 at the hardware store.[/caption]
<p>I must confess - I don't find the sets of "<a href="https://amzn.to/2qTHalR">one small screwdriver handle and 1700 bits</a>" to be terribly practical. They're great to have around for special projects, but the extra time spent swapping bits back and forth for every project/object/screw is  wearisome. As <strong>daily driver screwdrivers</strong>, I much prefer a set of basic jewelers screwdrivers in philips, flat, and hex. This <a href="https://amzn.to/33BHZgf">Wera 12-piece</a> set is my go-to recommendation these days, and the carrying-case is nice if you don't have permanent storage set up yet or it needs to go in a work bag.</p>
[caption id="attachment_694" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/IMG_8950.jpg"><img class="size-medium wp-image-694" src="https://jeff.glass/wp-content/uploads/2019/12/IMG_8950-300x225.jpg" alt="Wera Screwdrivers" width="300" height="225" /></a> Decent screwdrivers that don't strip themselves instantly, in a nice carrying case too.[/caption]
<p>A basic <a href="https://amzn.to/2q84g7G">6-in-1 screwdriver</a> suffices for most <strong>large-screwdriver</strong> needs. That link is the cheapest one I could find on Amazon, but honestly, they're often between $1 and $3 at any hardware store, grab a couple then next time you see one.</p>
<p>It's amazing how cheap <strong>digital calipers</strong> have become - less than $20 for a <a href="https://amzn.to/2szYVae">decent 6" caliper</a> that does decimal inches, fractional inches, and millimeters. The calipers are among the top-five most commonly used tools on my bench, along with the soldering iron, pliers, and screwdrivers. You can measure interior dimensions with one, exterior dimensions, depth, radii, all with a precision unmatched by analog means. Get yourself a set, it will change your bench. For larger measurements, a <a href="https://amzn.to/2P1jL9R">basic <strong>tape</strong></a><strong><a href="https://amzn.to/2P1jL9R"> measure</a> </strong>is handy - no need to get a fancy one unless your carpenter-ing regularly.</p>
[caption id="attachment_695" align="aligncenter" width="300"]<a href="https://jeff.glass/wp-content/uploads/2019/12/DSC00067-scaled.jpg"><img class="size-medium wp-image-695" src="https://jeff.glass/wp-content/uploads/2019/12/DSC00067-300x169.jpg" alt="Digital Calipers" width="300" height="169" /></a> 20 years ago, these would have been a multi-hundred dollar item. Now they're basically disposable.[/caption]
<h3>Adhesives</h3>
<p>I wish I had a more in-depth knowledges of adhesives, epoxies, and glues. The properties department at the theater I used to work at maintained an encyclopedic knowledge of which glues were best of which applications, which chemicals were safe for which materials, which drying-times would lead to problems with material interactions... it was stunning. For my general purposes though, there a few basic adhesives that get me through the day more often than not.</p>
<p><strong>Hot</strong> <strong>Glue</strong> is a tremendously versatile material - you can stick most (rough) surfaces together with it, you can build up gussets and supports with it, you mold it to shape a little, and it removes easily from most things except paper. And did you know <a href="https://amzn.to/2OFzInj">it comes in black</a>? A <a href="https://amzn.to/2Dw73uD">decent 100W hot-glue gun</a> is a great "well this just has to hold a little while" solution.</p>
<p>For more permanent fixes, <strong>cyanoacrylate glue </strong>(also known as CA glue or the brand names <strong><a href="https://amzn.to/33Hf7Db">Super Glue</a> </strong>or <strong>Crazy Glue</strong>) is a good go-to - it bonds to most things with a slightly-rough surface (so roughing up, say, metal with a file first is a good idea). It hardens in the presence of moisture - atmospheric humidity is enough, but if you put a big glob on something, the outside layer will start to set first and slow the setting process of the inside. Use only a thing layer to reduce this issue - in the right circumstances, the glue will set in a matter of seconds. If you need a little bit more working time or pliability, <strong><a href="https://amzn.to/2Y69opn">E6000 Adhesive</a></strong> is a better choice.</p>
<p>Very High Bond <strong>double-sided tape</strong> (VHB) is an amazing product (well, line of products) from 3M. They give you the versatility of double-stick tape with some crazy adhesive capabilities. <a href="https://www.3m.com/3M/en_US/vhb-tapes-us/">3M's full catalog of adhesive tapes</a> is worth browsing if you're into that sort of thing. As a good default, their <a href="https://amzn.to/2Lr96EL">RP62 foam-tape</a> is strong, slightly spongy (good for bridging irregular surfaces), and relatively inexpensive.</p>
<p>For adhering large sheets of goods together, especially paper products, some kind of <strong>spray adhesive </strong>is going to be easier to use than a brush-on or dab-on variety. <a href="https://amzn.to/2OGOqut">3M's Super 77</a> is the de-facto standard spray adhesive for light- and medium-duty applications - adhering paper to paper for scrapbooking, or laminates to sheet goods. Simply spray Super 77 onto one of the surfaces, wait 60-90 seconds for the adhesive to become slightly tacky, then smoothly lay the second material onto the first. For heavier applications, there's a <a href="https://amzn.to/2L9STDw">High Strength 90 spray adhesive</a> that works much the same.</p>
<p>I'd be remiss if I didn't mention <a href="http://www.thistothat.com/">thistothat.com</a>, a website that generates recommendations if you want to glue <em>this material</em><em> </em>to <em>that material</em>. Want to stick ceramic to rubber? They've got a solution to that, and lots of other combinations as well. Well worth a look.</p>
<h3>3D Printing</h3>
<p>I know I said I wouldn't get too far into specific materials or specific arenas of work, but having a 3D printer in your electronics workshop opens up a whole world of mechanical possibilities. Whether its <a href="https://jeff.glass/2018/08/28/50w-qrp-amplifier-3d-printed-case-design-and-livestream/">custom enclosures for new projects</a> or <a href="https://jeff.glass/2019/03/09/3d-printing-in-the-home-workshop/">quality of life improvements</a> for the shop or project mockups or practical tools, the sky's the limit of what you can accomplish. Getting started in 3D printing could be a whole series of articles in and of itself, but for the moment let me confine myself to some recommendations of tools to facilitate the practical use of 3D printing on an electronics workbench.</p>
<p><img class="aligncenter size-large wp-image-351" src="https://jeff.glass/wp-content/uploads/2019/03/PSU_1-1024x768.jpg" alt="" width="720" height="540" /></p>
<p>To start, the 3D printer itself. I don't have any experience with <a href="https://www.youtube.com/watch?v=8a2xNaAkvLo">SLA 3D printing</a>, only the more traditional <a href="https://www.youtube.com/watch?v=3lRhZTdafE4">FDM method</a>. An FDM 3D printer is essentially a fancy robotic hot-glue gun on rails, that moves precisely around a 3D space squirting out hot plastic as it goes, which sets into shape as it rapidly cools down. This is a relatively speedy way of printing an object, but the spatial resolution of the resulting object is limited by the resolution of both the stepper motors that push the print-nozzing around and the diameter of the print nozzle. Still, with a stock 0.4mm nozzle and a basic machine, some <a href="https://www.youtube.com/watch?v=Dss1yUHH-QY">really beautiful things</a> are possible.</p>
<p> </p>
<p>If I were to recommend a first FDM 3D printer to someone today, it would be the <a href="https://www.prusa3d.com/original-prusa-mini/">Original Prusa MINI</a>. Josef Prusa was one of the original movers and shakers when the hobbyist 3D printer train was getting rolling in early 2010s, and his i3 model is perhaps the most popular 3D printer in the world. With a reputation for a great product and great customer service, the release of a printer at that key $350 price point that's become so popular, with mesh bed leveling, a heated bed with removable build-sheets, ethernet connectivity with WiFi upgrade possibilities, an option filament run-out sensor... I'm very excited for this thing. It's currently on pre-order for $350 US to start shipping around the end of the year, and I think it's going to be a slam dunk. When I think that i paid about that much for my <a href="https://www.monoprice.com/product?p_id=13860">Monoprice Maker Select V2.1</a> only 3 years ago, it's amazing to think how far the technology has come.</p>
<p>&lt;&lt;&lt;3D Printer Pic&gt;&gt;&gt;</p>
<p>Of course, all of the specific nozzles, filaments, and accessories you need will be specific to your printer and your projects. But I can recommend a couple of tools that will be useful to all FDM 3D-printing setups, the first being a <a href="https://amzn.to/2DLYOuF">set of 3D printing spatulas.</a> Most printers ship with a <a href="https://amzn.to/33Cfxeh">putty knife</a> as their print-removal-tool, which is an excellent way to gouge a hole in your print surface (or your hand!). Since receiving a set of these spatulas as a present for Christmas last year, they've easily become the tool I keep closest to the printer.</p>
<p>&lt;&lt;&lt;Spatulas Pic&gt;&gt;&gt;</p>
<p>Second, while there are lots of methods of <a href="https://www.youtube.com/watch?v=AaF28dnDgKA">getting your 3D print to stick to the print bed</a>, keeping the bed itself clean of oils and debris goes a long way toward success. I keep a bottle of <a href="https://amzn.to/2rFOu4y">high-strength isopropyl alcohol</a> and some lint-free clothes nearby to wipe down the bed between every few prints, just to make sure the residual oils from printing and from my hands don't cause premature liftoff from the print bed.</p>
<h3>Software</h3>
<p>In this digital epoch, MS Paint is just as practical a tool as a paintbrush. So let's not leave out the digital tools that we use to make, track, distribute, and record projects on the workbench.</p>
<p>For <strong>2D drafting</strong>, my two primary tools are <a href="https://www.autodesk.com/products/autocad/overview">AutoCAD</a> and <a href="https://www.vectorworks.net/en-US">Vectorworks</a>. AutoCAD (made by AutoDesk) is an incredibly powerful CAD program, and it's been around forever. Want to model a bracket, or a whole airplane, or design a building, or pocket watch? AutoCAD can do it. It does have a fairly-steep learning curve - there are folks who make entire careers out of just working in AutoCAD - but it gives you a lot of power for your trouble. Vectorworks is a less-commonly-used program that I became very familiar with in my ten years as a stage lighting technician; due to its excellent stage-lighting plugins, it's the de-facto standard for theater lighting. And where AutoCAD focuses on building a "model" and having you derive drawings from that model, Vectorworks focuses on the drawing itself as <em>the thing to be made</em>. It might seem like a semantic difference, but the way that these philosophies influence the workflow of the two programs means that Vectorworks is often my choice for creating 2D draftings.</p>
<p>&lt;&lt;&lt;Vectorworks&gt;&gt;&gt;</p>
<p>For <strong>3D drafting</strong>, my go-to software is <a href="https://www.autodesk.com/products/fusion-360/overview-b">Fusion360</a>, also from AutoDesk. Fusion is a timeline-centric, parametric drafting program, which allows you to go 'back in time' to an earlier moment of a design, make changes, and see them ripple through to the current version of the design. It's a very powerful program, though not without its own learning curve. For someone just diving into 3D modeling for the first time, I'd recommend starting with something like <a href="https://www.tinkercad.com/">Tinkercad,</a> a cloud-based modelling program that centers around adding and subtracting primitive objects from each other to build up a more complicated design. I've also had friends work in <a href="https://www.sketchup.com/">SketchUp</a>, which tries to blend Fusions 2D sketch capabilities with the ease of Tinkercad. Unfortunately, SketchUp seems to have trouble successfully exporting STL files for printing, so I can't recommend it as a strong starting point.</p>
<p>&lt;&lt;&lt;Fusion&gt;&gt;</p>
<p>Once you have your 3D model and you're ready to 3D print it, you'll need a <strong>slicer program</strong> to turn the model into a series of step-by-step instructions that the printer can actually follow. (Move to such-and-such coordinates in so-many seconds while extruding this-amount of plastic. Repeat x10000). I personally use <a href="https://ultimaker.com/software/ultimaker-cura">Cura</a>, now from Ultimaker. It's straightforward to use, and has all the options and customizability I've found a need for. I know lots of folks who have good onions about the open source <a href="https://slic3r.org/">Slic3r project</a> as well.</p>
<p>&lt;&lt;&lt;Cura&gt;&gt;&gt;</p>
<p><strong>Programming and text editing </strong>may or may not be a part of your electronics hobby, but if they are, having simple straightforward tools is a good way to get more productivity out of your text-based time. Of course for programming Arduinos, the <a href="https://www.arduino.cc/en/main/software">Arduino IDE</a> is a perfectly good place to start. It's not fully featured in an respect, but it just works, you can write code in it and plonk it on an Arduino, and that's all most people care about. I use <a href="https://www.sublimetext.com/">Sublime Text</a> as my main text editor and sometimes basic dev environment (when writing things in <a href="https://love2d.org/">Love2D</a>, for example). </p>
<p>I might be putting my foot in it by admitting that I <strong>design circuit boards</strong> in AutoDesk's <a href="https://www.autodesk.com/products/eagle/overview">Eagle</a> software rather than the open source <a href="https://www.kicad-pcb.org/">KiCad</a>. To be honest, I don't have strong feelings about either software either way - Eagle was just the first one I used and I've become used to its workflow and design choices, but I know there are die-hards on both sides of this river. Regardless, to live in an age where a maker has multiple, quality options for free PCB design software is amazing.</p>
<p>Of course, once you've designed a circuit board, you're going to need to make it, somehow. While they're not software per-say, the growth of <strong>PCB Shopping Cart</strong> websites over the past few years has really opened up what's possible for the solo electronics workshop. No more sweating with getting tiny wires soldered to tiny chips to break them out to veroboard; you can just spin a PCB with the proper footprint, or indeed the whole circuit. Any of these services will let you upload your <a href="https://oshpark.com/">OSHPark</a> really started the whole small-batch-PCB movement, and their service has always been great, reliable, and high quality. I've also used <a href="https://jlcpcb.com/">JLCPCB</a> for somewhat larger runs. If you're interested in looking at many, many options, <a href="https://pcbshopper.com/">PCBShopper</a> is an aggregator that lets you compare prices, lead times, and options across almost two dozen shopping cart-style manufacturers.</p>
<h3>Safety</h3>
<p>Just because you may not have a <a href="https://www.youtube.com/watch?v=UwzwzobO5rs">giant 5-axis robot in your workshop</a> doesn't mean you shouldn't take safety seriously. Whether your workshop is in your home, an outside shop, or your workplace, a few basic safety precautions could mean the difference between peaceful Thursday and a trip to the ER.</p>
<p><strong>Smoke and carbon monoxide detectors </strong>should be present in several places in your building, but having one in the workshop is a good idea, especially if you have any hot-tools (soldering iron, heat gun, 3D printer). They're so <a href="https://amzn.to/2RfwNDH">inexpensive and easy to install</a>, it's a no-brainer to pick one up. A <strong>fire extinguisher<em> </em></strong>should also be on your list - and if you ever have the opportunity to get a little training on how to properly use one, it's well worth it. Make sure to mount your <a href="https://amzn.to/2La7TkI">fire extinguisher</a> where you could actually get to it if the things that are most likely to start a fire, did.</p>
<p>&lt;&lt;Fire extinguisher Pic&gt;&gt;&gt;</p>
<p>While we're thinking about fire, consider whether your workshop needs a <strong>flammables cabinet</strong>. If you're storing more than a few things of paint, spray paint, spray adhesives, solvents, cleaners, etc, it's worth thinking about what would happen if they were to catch a little on fire. It's not usually worth buying on online - the shipping is killing - but cabinets pop up on Craigslist, auctions, and industrial surplus all the time. <a href="https://www.go-dove.com/">Go Industry Dove Bid</a> is a good online collector of industrial surplus auctions, but be sure to check out your local city/state surplus resources as well.</p>
<p>Finally, <strong>safety glasses</strong>. Just wear them, even when you think you don't have to. About 4 years ago, while soldering "just one more joint" on a PCB before going to bed, a piece of hot solder popped up and got me in the lower-left eyelid. A quarter-inch higher and it would have been right in my eye, with who knows what consequences. I'm not always perfect about this myself, but I do keep a pair of safety glasses right on my workbench to remind myself that if I want to take a risk, it's my own damn fault. Get <a href="https://amzn.to/2LbC37b">a pair of glasses that are comfortable</a> so you're more likely to wear them. </p>
<h3>Organization</h3>
<p>I've come to realize something over the past 10 years - the most volume I'm willing to rummage through for a tool, part, or piece is about 400 cubic inches, or a around 8 liters. Any more volume than that, especially for small parts, and there's just too many potential places where a small object can hide. So standardizing on a <strong>storage bin</strong> that's slightly smaller than this makes good sense. At home, I use<a href="https://www.menards.com/main/storage-organization/storage-totes-bins/storage-totes/bella-storage-solution-6-quart-clear-storage-bin/belmn0105011012/p-1444430572277-c-12667.htm?tid=5967592820392133336&amp;ipos=2"> 6-Quart Bella bins</a> from Menards, while at work I use <a href="https://amzn.to/2YdeLDu">6-Quart Sterilite bins</a>. Once a project, or set of components, or tools overflows one of these bins, there's probably enough diversity in goods to split it up into two separate bins anyway - i just recently split the <em>Microcontrollers</em> bin into <em>Arduinos </em>and <em>Non-Arduino Microcontrollers</em>, for example. Now both species are easier to find.</p>
<p>&lt;&lt;Storage Pic&gt;&gt;</p>
<p>I've always loved a good <strong>whiteboard</strong> (I just snagged <a href="https://amzn.to/2Y3JoLk">another 18"x24"</a> one for my office), but I recently stumbled upon these <a href="https://amzn.to/2Y4xoJC">ultra-fine tip whiteboard markers</a>, which I just absolutely love. They allow you to squeeze so much actual detail and small size into a whiteboard doodling project. Not for presenting to a group, mind, just for working through projects on your own or with a partner. (I also 3D printed a cup for them for my kitchen whiteboard calendar, more on that in a future post I think.)</p>
<p>&lt;&lt;&lt;MarkerHolder Pic&gt;&gt;</p>
<p>I'm a strong believer in the power of labeling to <a href="https://www.youtube.com/watch?v=oiSn2JuDQSc">make things just so,</a> and a <strong>labelmaker</strong> is a really easy way to help keep things organized. The <a href="https://amzn.to/35TwTEZ">Brother PTD600</a> has been a nice blend between portability and computer control - you get most of the functionality just using it handheld, or you can hook it up to Brother's software on your computer to make more complicated layouts, batch prints, etc. The sound department at the theatre I used to work at had a <a href="https://amzn.to/37WFbxN">Rhino BMP21-Plus</a>, which was really awesome at making <a href="https://amzn.to/2qaic17">self-laminating labels</a> to label cables - with the amount of work that went into cable arrangement and maintenance in that place, the self-laminating labels were a godsend. The tape's a little pricey, as is the labeller, so if you're not doing a lot of patch panels, say, I would stick with the Brother and the TZe line of tapes.</p>
<h3>Lighting</h3>
<p>Decent task lighting makes a world of difference - you'll find you're suddenly better at soldering, more deft at assembly, swifter to catch errors and notice mistakes. No sense working in the dark if you don't have to.</p>
<p>I've done a number of lighting setups in my home workshops over time. Right now I have three <a href="https://amzn.to/2P0nUel">24" fluorescent fixture</a>s overhead that were remaindered from a theatre production ages ago (in addition to a basic 100W ceiling light). I've also got a couple of <a href="https://amzn.to/2P1At9l">clip lights</a> with <a href="https://amzn.to/2LcrVeK">100W LED bulbs</a> closer to my actual workbench surface to price more focused task lighting, and a <a href="https://amzn.to/33FODSy">cheap gooseneck light from IKEA</a> sitting on the work surface for when I need really targeted illumination. While I haven't re-installed it since I moved into a new home workshop a few months ago, adding under-shelf lights to my <a href="https://jeff.glass/2019/03/03/home-office-overhaul/">home shelving setup</a> made a big difference in being able to see and find components on the shelves, as well as adding some cheery glow to the workstation. My workshop at work has lots of overhead fluorescent light, and I added a <a href="https://amzn.to/2R9XyZS">positionable jointed lamp</a> for some more focused lighting. </p>
<h3>Your Own Shop</h3>
<p>If you're still reading this 6500 words later, you might thinking - <em>Holy crap, that's a lot of stuff, I'll never be able to have my own electronics workbench</em>. But keep in mind - this is the setup and tools that work for me, with what I want to do, that I've built up over a decade of working professionally and as a hobbyist in this arena. Would you look at a professional auto mechanic and say "Wow, I'll never open my hood again?" It's all a matter of starting somewhere.</p>
<p>&lt;&lt;&lt;Old Workbench Pic&gt;&gt;&gt;</p>
<p>The easiest way to pick a project is to <strong>find a project you want to accomplish and work toward making it happen</strong>. Maybe it's monitoring to see whether your garage door is open or closed. Or what the weather's going to be tomorrow. Maybe your dog needs some entertainment, or you need a new sparkling light over the crib, or the you have an itch to build a radio or a tesla coil or who knows what. Once you find a thing you're excited about building, that will guide you as to which tools to find first, which will lead you to more things you can do with those tools, which will lead to more tools... and so on. </p>
<p>And most importantly - have fun.</p>
<h3>Special Thanks</h3>
<p>I wouldn't have been aware of so many of these tools, ideas, and arenas without a lot of excellent colleagues and friends. Thank you especially to Palmer, Joe, Alec, Kenneth, Mike, Jabin, Lee, Travis, Chris, and all the other excellent technicians who continue to be an inspiration for excellent technical work.</p>
<p><!-- wp:paragraph --> <!-- /wp:paragraph --></p>
<p><!-- wp:paragraph --> <!-- /wp:paragraph --></p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<p>talled it since I moved into a new home workshop a few months ago,&nbsp;</p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<p><!--EndFragment--></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>629</wp:post_id>
		<wp:post_date><![CDATA[2019-12-01 18:03:41]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-12-01 18:03:41]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-12-02 00:03:41]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Backup2]]></title>
		<link>https://jeff.glass/?p=653</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=653</guid>
		<description></description>
		<content:encoded><![CDATA[I've been trying to count how many times I've set up an electronics workbench. Between 10 years working in lighting, video and special effects in theater, three home-moves and two <a href="https://jeff.glass/2019/03/03/home-office-overhaul/">independent bench-revemps</a>, and my new-this-month position as an Exhibit Engineer at a major Midwest science museum... it's quite a few. So on this long weekend, I've compiled the tools I think are most useful when building up a workspace for electronics construction and troubleshooting.

I'm going to specifically focus on tools and support-hardware this time around, and not dive too deep into supplies and consumables, purely to maintain focus. The parts and pieces you need will be wildly different if your specific hobby is <a href="https://twitter.com/jeriellsworth/status/1195900908049072128">scratch-building accelerometers</a> vs <a href="https://jeff.glass/2019/05/23/dmx-mini-moving-light-shield-v0-3/">twitter-connected instant cameras</a>, say. But in the wide and deep pool of 'working with electronics,' there are some flotation aids that will keep your head above water most of the time.
<h3>Soldering</h3>
As both hobbyists and professionals, we are often looking not for the best tool, but one that's good enough for the job without breaking the bank. If there's one tool that I'd recommend getting the 'good' versus the 'good enough' version, it's a <strong>soldering iron</strong>. I thought for years I was just bad at soldering. Nope, just a crappy $25 radio shack soldering iron that was doing me no favors.

Not that 'good' has to mean 'super expensive.' In my home shop and my current shop at work, I used the <a href="https://amzn.to/2DuvecD">Hakko 888D</a>, which has proved reliable and durable, even if the interface is a little unintuitive. For less than $100, that's a darn good iron. The shop at my previous job has a <a href="https://amzn.to/2OWP8CF">cheapie 3-in-1 soldering/hot-air-rework/power supply station</a>, and for most things that was just <em>fine. </em>They're such a huge leap above a 'soldering pencil,' and they'll last for years,

Whatever iron you choose, you'll want some <strong>additional tips</strong> to go with it. While you could get the <a href="https://amzn.to/2P5kC9Q">pack of every tip imaginable</a>, I find myself using either the medium chisel or the fine-conical %99.9 of the time, so<a href="https://amzn.to/2r2h4Nj"> a smaller assortment</a> is probably fine.

As far as <strong>solder</strong>, while there are good environmental reasons to go with lead-free solder, there's nothing quite so good to work with as classic <a href="https://amzn.to/2OBtjcX">Kester rosin-core 60/40, nice and thin</a>. A one-pound reel of that stuff will last most people <em>years</em>. While you could buy a <a href="https://amzn.to/2DCC53L">solder-reel stand</a>, I've found a <a href="https://jeff.glass/2019/03/09/3d-printing-in-the-home-workshop/">3D-printed design</a> that I really like (credit to <a href="https://www.thingiverse.com/thing:960103">Phredie on Thingiverse</a>).

You'll also want some <strong>flux</strong>, either<a href="https://amzn.to/35T3lHl"> as a paste</a> or in my preffered form <a href="https://amzn.to/2rHoJk2">as a solder pen</a>. While rosin-core solder has flux built-in, any time you're doing rework, SMD work, or just taking a little longer to deal with a tricky part, flux makes sure your surfaces are clean and ready to accept the molten solder.

Speaking of keeping things clean, let's talk about <strong>cleaning your soldering iron tip</strong>. The sponge and <a href="https://amzn.to/35SyYkD">wire-wool cleaner</a> than come with your iron are plenty, if you treat your iron right.More aggresive chemical fluxes like those found in "<a href="https://amzn.to/33wfVLn">Tip-Tinners and Cleaners</a>" are neant to remove long-built-up oxidation on your iron tip, and are overkill for routine tip-cleaning. I was taught to dab the iron in the wire-wool between each joint (realistically, between every several joints), and wipe on the sponge before the iron goes back in the stand. That should be all you need.

To get solder off of things other than your iron may take some special tools. <strong><a href="https://amzn.to/2DyQTQZ">De-soldering braid</a></strong> is a great tool - its a woven copper ribbon impregnated with flux that, when heated against a solder joint, sucks the molten solder up via capilary action. For getting the last little bit of solder out of through-hole pads, <a href="https://amzn.to/2OYKgwL">a <strong>solder-sucker</strong></a> is the tool - find yourself a cheap one, they're all pretty much the same. At my last job, we purchased a <a href="https://amzn.to/2OYjkgL">cheap vacuum desoldering station</a>, which was fine, but mostly could have been replaced by solder-wick in 90% of applications. Perhaps a<a href="https://amzn.to/2Du8FoA"> brand-name vacuum desoldering station</a> would have done the job better, but in any case when setting up my shop at the new job, I passed on this tool. For more thoughts on all these tools/techniques, <a href="https://www.youtube.com/watch?v=UwsGnO630vY">W2AEW</a> has a great video on desoldering if you find yourself in a pinch.

Whether your soldering or desoldering, you're going to be making some nasty fumes melting all that flux, so get yourself some kind of <strong>filtering fan</strong>. I've got a <a href="https://amzn.to/2L8wGpv">dirt-cheap Aoyue filter-fan</a> on my home bench, and both a <a href="https://amzn.to/2rCkS8b">cheap Kotto</a> and an<a href="https://amzn.to/2OXIlZo"> expensive Hakko</a> on my bench at work now, and they're all about as good as each other, and they all suck (not in the way you want a filter fan to suck). I replaced the fan in my Aoyue with a <a href="https://amzn.to/35PoTVm">120V 4" Muffin fan</a> (pulled from an older musical's fog-distribution system, in my case), and it's made a world of difference, I highly recommend upgrading. Just be careful, those fans bite.

There are about as many different kinds of <strong>work-holding clamps</strong> as there are people who solder, but my two favorites are this <a href="https://www.thingiverse.com/thing:21357">3D-printed PCB vise</a> for flat-work and these <a href="https://amzn.to/2R8qkdl">octopus-style 3rd-hands for other unusual shapes</a>. I've used the <a href="https://amzn.to/2R6nWDX">classic Panavise clamps</a>, and for a shared-shop environment I'd recommend them for their sturdy build quality. But I find them to be a little bit too bulky and their jaws not quite wide enough for the work I find myself doing, so I opt for other solutions in my just-for-me setups. You do you though.
<h3>Electronic Test and Measurement</h3>
The two big items in this category are multimeters and oscilloscopes. Let's take a look at both of them first before we get into some more specialized tools.

There are lots and lots of good-enough <strong>multimeters</strong> in the world today, of all kinds of different brands, and they're pretty much going to all be OK. Rather than try and pick out specific ones from Amazon, here are the features I'd look for if I was looking to add a decent multimeter to my bench today:
<ul>
 	<li>The basics: AC/DC Voltage, AC/DC Current (up to 10A is useful), resistance (to 0.1Ω and 1 MΩ is nice).</li>
 	<li>Continuity test- this is the most useful setting on a multimeter. Using this setting and touching a wire/component/circuit with the probes will tell you if there's a low impedance path between the two points; i.e., if they're connected. Super useful.</li>
 	<li>Auto power-off. Doesn't seem like much, but it's real easy to kill batteries without it.</li>
 	<li>4-digit precision (some cheap meters only give 3)</li>
</ul>
The other features a meter might have include: temperature measurement, diode-forward-voltage measurement, True RMS AC measurement, frequency (power line), duty-cycle, capacitance, transistor hFE, illuminate... the list goes on. I've appreciated having a true RMS measurement in tricky AC power situations, and having an easy frequency-check can be handy, but for the rest of these, I'd rather rely on a purpose-made tool like a thermometer, <a href="https://amzn.to/2OXmoty">lightmeter</a>, or <a href="https://amzn.to/2r2n6NX">transistor checker</a>, rather than something built into my multimeter.

If you've got the cash and are looking for something to last 20 years, the <a href="https://amzn.to/2sy0SUz">Fluke 117</a> is a really solid primary meter. Fluke has really been <em>the</em> brand name in quality meters for the past lots-of-years - well made, reliable, accurate. Not super cheap, but you do get what you pay for. My current department has standardized on them for most work, and that's been swell. For most things, we don't need <a href="https://amzn.to/2Y0Q90F">the $300+ meter</a> (which gives you min/max tracking and microAmp measurement) or <a href="https://amzn.to/2OSDNmQ">the $500 meter</a> (with its fancy clamps and probes). In fact, a <a href="https://amzn.to/2DA9tZ9">basic $40 meter</a> is going to be fine for almost everything you do.

A little aside - why are there no benchtop-multimeters in the super-affordable price range? When you can get a passable, portable multimeter for $20, why are even the<a href="https://amzn.to/34BhIA5"> cheapie-versions of a benchtop meter</a> still $150? I think there would be a strong market for a $60, benchtop form-factor, ok-ish meter. I have an old Simpson 460-6 at work that I love using, not because it's the world's most amazing meter, but just because it's always <em>there</em> and the form facotr is right. How about it, AliExpress?

Moving on to <strong>oscilloscopes</strong>, I think there are some who would say this isn't essential for electronics work - after all, if you end up working mostly with digital signals, or analog-voltages that don't change over time, is it really worth it? I would counter that the oscilloscope is your eyes into the realm of what your electronics are doing, and is a vitally useful tool in many situations. If you've never used an oscilloscope, may I once again recommend <a href="https://www.youtube.com/watch?v=067W7h1BhxE">a video by W2AEW.</a>

Scopes are another arena where you don't need to break the bank to get something decent enough to use. My first scope was a venerable <a href="https://www.scribd.com/document/364412737/BK-Precision-1535a">BK-Precision 1535A</a> 35Mhz analog scope that a bought from a guy on Craigslist for about $40. For basic electronics work, 20Mhz or so is plenty - you're most likely going to working at slower speeds (audio to 20Khz, maybe 250kHz for serial or RS485) or much, much higher (HDMI, USB, etc) where a scope really isn't the right tool in most cases anyway. Or at least, once you're progressing to the level where you're worrying about measuring GHz voltages, you're likely to acquire more specialized tooling along the way.

I think a decent analog scope is a really good place to start if you've never used a scope before - better to tackle the fundamentals of the tool before having to learn how to use a particular menu structure as well. The shop at my new job came with a <a href="https://www.allaboutcircuits.com/test-measurement/oscilloscopes/compactscope-series-v-1565/">Hitachi V1565 100MHz analog scope</a> with measurement capability that I've been very happy with - the ability to add cursors to an analog display to measure voltage, time, or duty cycle is handy. At home I've now also got an <a href="https://amzn.to/35O2ZBV">Owon PDS5022T</a> 25MHz digital scope  that was gifted to me - I like the tools having a digital scope provides, but I find it significantly more clunky than either of the classic analog scopes in my life.

So, if you're looking for a bench scope and you've never used one before, I'd say start analog. I see on eBay right now you can buy a gently-loved 2-channel analog scope for around $50-60 (plus $40 shipping, those things aren't light). Not a bad way to go.

Something my accomplice at my old job turned me on to is <a href="https://www.amazon.com/s?k=portable+oscilloscope">small, portable oscilloscopes</a>. I don't have a specific model to recommend, but they can be useful in specific circumstances - not so much to actually interrogate the characteristics of a signal, but more as a signal checker. Do I have AC here, do I have something that looks like RS-485 there, etc? If you do buy one, make sure you get one with an integrated battery (not all do) - getting one that still has to be plugged in makes it far less useful.

There are some more niche electronic tools that I make use of on my bench, but mostly because of my <a href="https://kk9jef.wordpress.com/">ham radio background</a>. A decent <strong>frequency counter</strong> is useful in that arena - I've got a classic <a href="https://www.youtube.com/watch?v=okMwS4IXz5E">Heathkit IM-2420</a> that I picked up at a swap-meet, but I'm really intrigued by the new wave of <a href="https://amzn.to/2L8CJdv">inexpensive benchtop frequency counters</a> that have popped up in the past couple years that claim to do 0.1Hz-2.4GHz for only $70. A <strong>signal genetor</strong> is also really useful in my work - I <a href="https://kk9jef.wordpress.com/2017/07/10/si5351-signal-generator/">built my own</a> around an Si5351 and an Arduino, but you can buy a <a href="https://www.amazon.com/Generator-KKmoon-Precision-Dual-Channel-Arbitrary/dp/B071HJ31WN/ref=sr_1_7?keywords=function+generator&amp;qid=1575140813&amp;sr=8-7">0-25Mhz</a> or <a href="https://amzn.to/35QquKJ">0-60Mhz arbitrary function generator</a> for not a lot of cash these days, and I have colleagues who speak highly of both. Since my last job was more lighting-focused, we purchased an<a href="https://amzn.to/2rFIskp"> Extech <strong>digital lightmeter</strong></a> for a specific project - sometime I'd love to get into why that specific meter and the challenges of metering LED sources, but that discussion is too long for this margin to contain.
<h3>Electrical Power</h3>
A source of consistant, controlled <strong>DC power</strong> is vital for electronics work, since most projects are going to be some flavor of DC-powered. For basic logic-level type work, the least-expensive option is probably an <a href="https://amzn.to/2Y3Rvre">ATX computer power supply</a> with an <a href="https://amzn.to/2OCwelj">ATX breakout board</a>, which will at least provide +3.3, +5, +12 and -12V, which suffices for a lot of Arduino+sensors or Raspberry Pi+breakouts type projects. There are a thousand flavors of those breakout boards, so make sure you find one with the ATX connector type that matches your power supply. There are also screw terminal and terminal lug versions, if you have strong feelings either way.

If your work is less module-oriented and more about building up circuits in a more from-scratch way, a <strong>current-limited bench power supply</strong> is key. A decent power supply will supply relatively low-ripple DC voltage from 0 to 20 or 30 or 50 volts, at 5 or 10 amps max, commonly. What's more, you can set a current-limit such that, when your project runs away and tries to turn itself into a pile of smoke, at least it does so more slowly - the power supply will typically fold back its output voltage to keep the output current below the value you specify. Some fancier models also have the option to just cut off current entirely until the power supply is reset.

My current recommended bench power supply is the <a href="https://amzn.to/33AshSr">Hanmatek HM305P</a>, for a couple reasons - having a digital display so you can set the output voltage at, say, exactly 5V, is handy. As are the six front-panel preset buttons that allow you to just to commonly-used voltage/current limit combinations that you specify. That said, at home I have a <a href="https://amzn.to/2RaiPmy">Yescom power supply</a> with a somewhat higher output current that's useful for <a href="https://jeff.glass/2018/08/25/50w-qrp-amplifier-schematic-pcb-ver-1/">testing RF amplifiers</a>, and its analog controls make it somewhat easier to smoothly vary to the output voltage and see how a circuit/amplifier reacts. If I had to choose only one, I'd get the Hanmatek (or one of its many clones), but an analog-controlled meter is handy for certain situations. (I got by with an <a href="https://www.ebay.com/p/581276384?iid=183982778513&amp;chn=ps&amp;norover=1&amp;mkevt=1&amp;mkrid=711-117182-37290-0&amp;mkcid=2&amp;itemid=183982778513&amp;targetid=596465712468&amp;device=c&amp;mktype=pla&amp;googleloc=9021730&amp;poi=&amp;campaignid=6470719577&amp;mkgroupid=81597521270&amp;rlsatarget=aud-649939740844:pla-596465712468&amp;abcId=1140476&amp;merchantid=6296724&amp;gclid=CjwKCAiA5o3vBRBUEiwA9PVzav8LHOT-RAFp0R2EWk4GEyvkj8gsyByKg8dUNdnkEM4ogZbQpqIXsBoCiwkQAvD_BwE" rel="noopener noreferrer">Elenco Precision XP-656</a> .5A 0-30V DC supply as my primary current-limited supply for <em>years</em>.)

To connect your power supply to your board, you're going to need an <strong>assortment of wires and connectors</strong>. A handful of the typical USB cable types (A-to-Mini, A-to-B, A-to-Micro) is useful, and you probably already have them floating around in your sock drawer. Generic <a href="https://amzn.to/2DA4987">alligator clips</a> are always handy. <a href="https://amzn.to/34GIOpA">Mini-grabber style test leads</a> are great for hooking to component leads on a breadboard, though they're not rated for much current - in those cases, a <a href="https://amzn.to/2DA4Jmj">beefier clip lead</a> is a better choice.

While most projects are going to be DC powered, having enough AC outlets to have all of your test gear plugged in all the time, plus plenty of outs for temporary plugs, plus a few more, is a tremendous timesaver. You can snag a<a href="https://amzn.to/35Sd0xW"><strong> multi-outlet power strip</strong></a> for relatively cheap these days, but they're also really easy to find at garage sales, fleamarkets, and swapmeets. The <a href="https://www.amazon.com/AmazonBasics-6-Outlet-Protector-2-Pack-2-Foot/dp/B014EKQ5AA/ref=sr_1_4?keywords=power+strip&amp;qid=1575221486&amp;sr=8-4">Amazon Basics 6-plug power strips</a> used to be dirt-cheap, like $3 for a two-pack, but as of this writing they're now $10 for two... a bummer, those used to be a real steal.

If you're ever in doubt about the functionality of an AC outlet, or if you're going to be taking your work to a place where AC wiring  may be questionable, a<a href="https://amzn.to/2Ldtglr"><strong> cheap outlet tester</strong></a> is useful - it will confirm the presence of AC voltage, whether the hot/neutral are reversed, and other incorrect-wiring hazards. If you just need to confirm whether an AC circuit is hot, a <a href="https://amzn.to/35UMWm6"><strong>non-contact voltage detector pen</strong></a> is the easiest tool to use - just hold the on-button and place the non-conducting tip near the (potential) AC voltage. If it beeps and lights up, there's some AC present. Be warned though - the presence of AC-something is not a guarentee of 120 volts or 15 amps or whatever you actually need, just that there's some fluctuating voltage nearby. Just last week I watched an electrician get mislead by his NCV on a three-phase system - his pen told him all 3 phases had AC, but when he got around to actually sticking his meter probes in the test points, one of the phases was only "33V" to ground (i.e. the system had dropped a phase). You've been warned!
<h3>Power Tools</h3>
While I don't often use a <strong>power drill</strong> for actual workbench projects, the ability to stick a screw in a wall or quickly knock a hole in something is nice. I received a <a href="https://amzn.to/384LNdw">cordless Black and Decker 20V drill</a> as a gift years ago, and its been sufficient for my home purposes ever since. Sure, at the point in my careers where I was putting 3/8" lag bolts into 2" of plywood, the building had standardized on <a href="https://amzn.to/35LJU3g">Ryobi impact drivers</a>, which are much stout-er. But the're also more expensive, and for home-use, I just don't usually need that much firepower.

My old accomplice turned my on to the virtues of an <strong>electric screwdriver</strong>. Why would you need an electric screwdriver when you have a high-torque, high speed, large battery drill? Exactly because the electric screwdriver is lightweight, low-speed, and easy to transport - you're not using it to drive screw into material, you're using it to take machine screws out of an electrical panel, say. Or install a hundred rack-mount screws. Or take out and reinstall a Euro-rack model 60 times. The light weight and ease-of-use of the screwdriver limits fatigue over long projects like these. <a href="https://amzn.to/34QiAAI">Black and Decker</a> makes a fine, inexpensive model.

We'll get into the virtues of heat shrink tubing some later day when we dive into materials, but an inexpensive <strong>heat gun</strong> is the appropriate tool for using it. I started with a $10 model from Harbor Frieght which lasted 5 years, and then bought another $10 to replace it. The trouble with all heat guns under $100, it seems, is ergonomics. After you've used the gun for a couple minutes and brought the metal tip to a searing-hot temperature, what do you do with it? This <a href="https://amzn.to/2L9m2yU">Porter-Cable model</a>, with a flat-but you can stand up on your workbench, is the best solution I've seen. (<a href="https://amzn.to/2OBWEnm">Professional models</a> have a flat or angled plate on the back to stand up in just this way.)
<h3>Hand Tools</h3>
A few basic hand tools will go a long way in making your workbench serviceable and ready to tackle common challenges - some are worth a little investment, while others are prime fodder for the cheapo <a href="https://www.harborfreight.com/">Harbor Freight</a> model. And thankfully, there are a number of tools where jumping from the $5 version to the $10 version makes a world of difference, and is worth the Lincoln.

There are lots of different tools to strip insulation off of wire - manual strippers, semi-automated strippers, fully automated stripers, a par of cutting pliers, a knife, your teeth... not that I would recommend all of those. But you can't really go wrong with a basic pair of <strong>wire strippers</strong> that covers gauges from 10 to 30 AWG. These <a href="https://amzn.to/35PRzO1">Paladin wire strippers</a> were our go to at my last job, and they fit the bill just fine. The curved handle takes a little getting used to, but it actually makes them pretty ergonomic, which is nice if you're splicing a couple hundred bits of wire to LEDs in an afternoon, say.

A decent set of <strong>flush cutters</strong> is also worth a minor investment - not more than $7-8 a pair, mind, just don't get the $3 ones or they'll fall apart. Flush cutters are the tool of choice for trimming the leads on components, say, but they're also great for getting a clean end-cut on a piece of wire, or trimming flashing off of 3D-printed models. On the advice of my accomplice at my old job, we'd order <a href="https://amzn.to/34BH3Kg">5-packs of Hakko-brand flush cutters</a> regularly, and they served us well. For less critical cuts, <a href="https://amzn.to/37T349j">a couple pairs of scissors</a> is handy, though for papercraft I prefer <a href="https://amzn.to/2qTnEG9">single-edge razor blades</a>.

<strong>Small pliers</strong> are something you can go the inexpensive route on - Harbor Freight or eBay ones would be fine, you're usually not going to be putting so much force on them that you're in danger of damaging them. This set of <a href="https://amzn.to/2rGDvHY">6 assorted pliers for $20</a> I ordered for my new workbench has been pretty solid - the extra long, extra thin needle-nose pliers I keep near my 3D printer for pulling ooze off the nozzle right before a print. Having a few <strong>heavier duty pliers</strong> around is often helpful - just a basic <a href="https://amzn.to/2OVtkqM">lineman's pliers</a> for when you need to put some force into the work would be a good place to start.

I must confess - I don't find the sets of "<a href="https://amzn.to/2qTHalR">one small screwdriver handle and 1700 bits</a>" to be terribly practical. They're great to have around for special projects, but the extra time spent swapping bits back and forth for every project/object/screw is  wearisome. As <strong>daily driver screwdrivers</strong>, I much prefer a set of basic jewelers screwdrivers in philips, flat, and hex. This <a href="https://amzn.to/33BHZgf">Wera 12-piece</a> set is my go-to recommendation these days, and the carrying-case is nice if you don't have permanent storage set up yet or it needs to go in a work bag.

A basic <a href="https://amzn.to/2q84g7G">6-in-1 screwdriver</a> suffices for most <strong>large-screwdriver</strong> needs. That link is the cheapest one I could find on Amazon, but honestly, they're often between $1 and $3 at any hardware store, grab a couple then next time you see one.

It's amazing how cheap <strong>digital calipers</strong> have become - less than $20 for a <a href="https://amzn.to/2szYVae">decent 6" caliper</a> that does decimal inches, fractional inches, and millimeters. The calipers are among the top-five most commonly used tools on my bench, along with the soldering iron, pliers, and screwdrivers. You can measure interior dimensions with one, exterior dimensions, depth, radii, all with a precision unmatched by analog means. Get yourself a set, it will change your bench. For larger measurements, a <a href="https://amzn.to/2P1jL9R">basic <strong>tape</strong></a><strong><a href="https://amzn.to/2P1jL9R"> measure</a> </strong>is handy - no need to get a fancy one unless your carpenter-ing regularly.
<h3>Adhesives</h3>
I wish I had a more in-depth knowledges of adhesives, epoxies, and glues. The properties department at the theater I used to work at maintained an encyclopedic knowledge of which glues were best of which applications, which chemicals were safe for which materials, which drying-times would lead to problems with material interactions... it was stunning. For my general purposes though, there a few basic adhesives that get me through the day more often than not.

<strong>Hot</strong> <strong>Glue</strong> is a tremendously versatile material - you can stick most (rough) surfaces together with it, you can build up gussets and supports with it, you mold it to shape a little, and it removes easily from most things except paper. And did you know <a href="https://amzn.to/2OFzInj">it comes in black</a>? A <a href="https://amzn.to/2Dw73uD">decent 100W hot-glue gun</a> is a great "well this just has to hold a little while" solution.

For more permanent fixes, <strong>cyanoacrylate glue </strong>(also known as CA glue or the brand names <strong><a href="https://amzn.to/33Hf7Db">Super Glue</a> </strong>or <strong>Crazy Glue</strong>) is a good go-to - it bonds to most things with a slightly-rough surface (so roughing up, say, metal with a file first is a good idea). It hardens in the presence of moisture - atmospheric humidity is enough, but if you put a big glob on something, the outside layer will start to set first and slow the setting process of the inside. Use only a thing layer to reduce this issue - in the right circumstances, the glue will set in a matter of seconds. If you need a little bit more working time or pliability, <strong><a href="https://amzn.to/2Y69opn">E6000 Adhesive</a></strong> is a better choice.

Very High Bond <strong>double-sided tape</strong> (VHB) is an amazing product (well, line of products) from 3M. They give you the versatility of double-stick tape with some crazy adhesive capabilities. <a href="https://www.3m.com/3M/en_US/vhb-tapes-us/">3M's full catalog of adhesive tapes</a> is worth browsing if you're into that sort of thing. As a good default, their <a href="https://amzn.to/2Lr96EL">RP62 foam-tape</a> is strong, slightly spongy (good for bridging irregular surfaces), and relatively inexpensive.

For adhering large sheets of goods together, especially paper products, some kind of <strong>spray adhesive </strong>is going to be easier to use than a brush-on or dab-on variety. <a href="https://amzn.to/2OGOqut">3M's Super 77</a> is the de-facto standard spray adhesive for light- and medium-duty applications - adhering paper to paper for scrapbooking, or laminates to sheet goods. Simply spray Super 77 onto one of the surfaces, wait 60-90 seconds for the adhesive to become slightly tacky, then smoothly lay the second material onto the first. For heavier applications, there's a <a href="https://amzn.to/2L9STDw">High Strength 90 spray adhesive</a> that works much the same.

I'd be remiss if I didn't mention <a href="http://www.thistothat.com/">thistothat.com</a>, a website that generates recommendations if you want to glue <em>this material</em><em> </em>to <em>that material</em>. Want to stick ceramic to rubber? They've got a solution to that, and lots of other combinations as well. Well worth a look.
<h3>3D Printing</h3>
I know I said I wouldn't get too far into specific materials or specific arenas of work, but having a 3D printer in your electronics workshop opens up a whole world of mechanical possibilities. Whether its <a href="https://jeff.glass/2018/08/28/50w-qrp-amplifier-3d-printed-case-design-and-livestream/">custom enclosures for new projects</a> or <a href="https://jeff.glass/2019/03/09/3d-printing-in-the-home-workshop/">quality of life improvements</a> for the shop or project mockups or practical tools, the sky's the limit of what you can accomplish. Getting started in 3D printing could be a whole series of articles in and of itself, but for the moment let me confine myself to some recommendations of tools to facilitate the practical use of 3D printing on an electronics workbench.

To start, the 3D printer itself. I don't have any experience with <a href="https://www.youtube.com/watch?v=8a2xNaAkvLo">SLA 3D printing</a>, only the more traditional <a href="https://www.youtube.com/watch?v=3lRhZTdafE4">FDM method</a>. An FDM 3D printer is essentially a fancy robotic hot-glue gun on rails, that moves precisely around a 3D space squirting out hot plastic as it goes, which sets into shape as it rapidly cools down. This is a relatively speedy way of printing an object, but the spatial resolution of the resulting object is limited by the resolution of both the stepper motors that push the print-nozzing around and the diameter of the print nozzle. Still, with a stock 0.4mm nozzle and a basic machine, some <a href="https://www.youtube.com/watch?v=Dss1yUHH-QY">really beautiful things</a> are possible.

If I were to recommend a first FDM 3D printer to someone today, it would be the <a href="https://www.prusa3d.com/original-prusa-mini/">Original Prusa MINI</a>. Josef Prusa was one of the original movers and shakers when the hobbyist 3D printer train was getting rolling in early 2010s, and his i3 model is perhaps the most popular 3D printer in the world. With a reputation for a great product and great customer service, the release of a printer at that key $350 price point that's become so popular, with mesh bed leveling, a heated bed with removable build-sheets, ethernet connectivity with WiFi upgrade possibilities, an option filament run-out sensor... I'm very excited for this thing. It's currently on pre-order for $350 US to start shipping around the end of the year, and I think it's going to be a slam dunk. When I think that i paid about that much for my <a href="https://www.monoprice.com/product?p_id=13860">Monoprice Maker Select V2.1</a> only 3 years ago, it's amazing to think how far the technology has come.

Of course, all of the specific nozzles, filaments, and accessories you need will be specific to your printer and your projects. But I can recommend a couple of tools that will be useful to all FDM 3D-printing setups, the first being a <a href="https://amzn.to/2DLYOuF">set of 3D printing spatulas.</a> Most printers ship with a <a href="https://amzn.to/33Cfxeh">putty knife</a> as their print-removal-tool, which is an excellent way to gouge a hole in your print surface (or your hand!). Since receiving a set of these spatulas as a present for Christmas last year, they've easily become the tool I keep closest to the printer.

Second, while there are lots of methods of <a href="https://www.youtube.com/watch?v=AaF28dnDgKA">getting your 3D print to stick to the print bed</a>, keeping the bed itself clean of oils and debris goes a long way toward success. I keep a bottle of <a href="https://amzn.to/2rFOu4y">high-strength isopropyl alcohol</a> and some lint-free clothes nearby to wipe down the bed between every few prints, just to make sure the residual oils from printing and from my hands don't cause premature liftoff from the print bed.
<h3>Software</h3>
In this digital epoch, MS Paint is just as practical a tool as a paintbrush. So let's not leave out the digital tools that we use to make, track, distribute, and record projects on the workbench.

For 2D drafting, my two primary tools are AutoCAD and Vectorworks

For 3D drafting, my go-to software is <a href="https://www.autodesk.com/products/fusion-360/overview-b">Fusion360</a>, also from AutoDesk. Fusion is a timeline-centric, parametric drafting program, which allows you to go 'back in time' to an earlier moment of a design, make changes, and see them ripple through to the current version of the design. It's a very powerful program, though not without its own learning curve. For someone just diving into 3D modeling for the first time, I'd recommend starting with something like <a href="https://www.tinkercad.com/">Tinkercad,</a>

Once you have your 3D model and you're ready to 3D print it, you'll need a <strong>slicer program</strong> to turn the model into a series of step-by-step instructions that the printer can actually follow. (Move to such-and-such coordinates in so-many seconds while extruding this-amount of plastic. Repeat x10000). I personally use <a href="https://ultimaker.com/software/ultimaker-cura">Cura</a>, now from Ultimaker. It's straightforward to use, and has all the options and customizability I've found a need for. I know lots of folks who have good onions about the open source <a href="https://slic3r.org/">Slic3r project</a> as well.

&nbsp;

Software
<ul>
 	<li>
<ul>
 	<li>Drafting
<ul>
 	<li>Fusion360</li>
 	<li>AutoCAD</li>
 	<li></li>
</ul>
</li>
 	<li>Slicers
<ul>
 	<li>Cura</li>
 	<li>Slic3r</li>
</ul>
</li>
 	<li>Programming
<ul>
 	<li>Arudino IDE</li>
</ul>
</li>
 	<li>PCB's</li>
</ul>
</li>
</ul>
<h3>Safety</h3>
<ul>
 	<li>Organizational
<ul>
 	<li>Pinboard</li>
 	<li>Whiteboard
<ul>
 	<li>Skinny pens</li>
</ul>
</li>
 	<li>Bins</li>
 	<li>Labelmaker</li>
 	<li>Tape</li>
</ul>
</li>
 	<li>Lighting
<ul>
 	<li>Swing-arm</li>
 	<li>Fluorescent</li>
 	<li>LED-tape</li>
 	<li>Task-lighting</li>
</ul>
</li>
 	<li>Documentation
<ul>
 	<li>Sharpies</li>
 	<li>Pens/Pencils (pencil cup)</li>
 	<li>Notepad</li>
 	<li>Camera</li>
</ul>
</li>
 	<li>Furniture
<ul>
 	<li>Chair</li>
 	<li>Desk/table</li>
 	<li>Back support</li>
</ul>
</li>
 	<li>Safety
<ul>
 	<li>Fire extinguisher</li>
 	<li>Smoke/CO2 Alarm</li>
 	<li>Safety glasses/faceshield</li>
 	<li>Flamables cabinet?</li>
 	<li>If welding, more extreme measures</li>
</ul>
</li>
 	<li>Software
<ul>
 	<li>Drafting
<ul>
 	<li>Fusion360</li>
 	<li>AutoCAD</li>
 	<li></li>
</ul>
</li>
 	<li>Slicers
<ul>
 	<li>Cura</li>
 	<li>Slic3r</li>
</ul>
</li>
 	<li>Programming
<ul>
 	<li>Arudino IDE</li>
</ul>
</li>
 	<li>PCB's
<ul>
 	<li>OSHPARK</li>
 	<li>JLC</li>
 	<li>PCBShopper</li>
 	<li>Assembly??</li>
</ul>
</li>
</ul>
</li>
</ul>
<!-- wp:paragraph --> <!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>653</wp:post_id>
		<wp:post_date><![CDATA[2019-12-01 14:02:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-12-01 14:02:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-12-01 20:02:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_ba271e53e4e90f7d2233c7dacbfbf505]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Advent of Code 2019]]></title>
		<link>https://jeff.glass/?p=722</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=722</guid>
		<description></description>
		<content:encoded><![CDATA[<strong>Day 1.1 </strong>Basic file I/0, loops, iterating over loops, basic math

<strong>Day 1.2 </strong>While loops, rounding

<strong>Day 2.1 </strong>Global vs Local variable, "Switch/Case" methodology, comma separated values

<strong>Day 2.2 </strong>Wrapping code in functions for iterating over multiple values

<strong>Day 3.1 </strong>Working with sets and intersections, tuples and lists, mutable vs immutable collections of objects

<strong>Day 3.2 </strong>Working with dictionaries and keys

<strong>Day 4.1</strong> Using large for loops to iteratively apply a rule to a range of numbers

<strong>Day 4.2</strong> Using nested comparisons to see if a subset of a condition is true, but the longer condition is false]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>722</wp:post_id>
		<wp:post_date><![CDATA[2019-12-04 13:16:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-12-04 13:16:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-12-04 19:16:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Synology Rackstation 2418+]]></title>
		<link>https://jeff.glass/?p=728</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=728</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Install rack</p>
<p>Install Drives</p>
<p>Push power on</p>
<p>Use find.synology.com or desktop software to locate.</p>
<p>Will go online and install newest OS</p>
<p>Will automatically restart - takes about</p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>728</wp:post_id>
		<wp:post_date><![CDATA[2019-12-11 10:38:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2019-12-11 10:38:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2019-12-11 16:38:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[How to Make Friends and Influence People by Turning Them into Twitterbots]]></title>
		<link>https://jeff.glass/?p=735</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=735</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:image {"id":737,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image.png" alt="" class="wp-image-737"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":738,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-1.png" alt="" class="wp-image-738"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":739,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-2.png" alt="" class="wp-image-739"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":741,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-3.png" alt="" class="wp-image-741"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":742,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-4.png" alt="" class="wp-image-742"/></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://pbs.twimg.com/media/EO_Jbs-U0AAz9dB?format=jpg&amp;name=900x900" alt="Image"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":743,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-5.png" alt="" class="wp-image-743"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":744,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-6.png" alt="" class="wp-image-744"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":745,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-7.png" alt="" class="wp-image-745"/></figure>
<!-- /wp:image -->

<!-- wp:image -->
<figure class="wp-block-image"><img src="https://pbs.twimg.com/media/EPAOZsGWAAI5Hl2?format=jpg&amp;name=900x900" alt="Image"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":746,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-8.png" alt="" class="wp-image-746"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":747,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-9.png" alt="" class="wp-image-747"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":748,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-10.png" alt="" class="wp-image-748"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":749,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-11.png" alt="" class="wp-image-749"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":750,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-12.png" alt="" class="wp-image-750"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":751,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-13.png" alt="" class="wp-image-751"/></figure>
<!-- /wp:image -->

<!-- wp:image {"id":752,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/01/image-14.png" alt="" class="wp-image-752"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p><a href="https://www.publishthis.email/introduction-to-the-internet-does-the-throttles-Hkyez7X4I">https://www.publishthis.email/introduction-to-the-internet-does-the-throttles-Hkyez7X4I</a></p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":772,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/02/image.png" alt="" class="wp-image-772"/><figcaption><br></figcaption></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>Python script looks at the by-year pages for blog.thelifeofkenneth.com, pulls the URLS for individual posts, then pulls those posts and pulls down the text. On a separate pass, pulled the URLs for "all" (most?) images.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":773,"sizeSlug":"large"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2020/02/image-1.png" alt="" class="wp-image-773"/></figure>
<!-- /wp:image -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>735</wp:post_id>
		<wp:post_date><![CDATA[2020-02-25 16:56:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-02-25 16:56:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-02-25 22:56:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Reverse Engineering DOS Programs to Control a 727, Part 1]]></title>
		<link>https://jeff.glass/?p=1220</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=1220</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>1220</wp:post_id>
		<wp:post_date><![CDATA[2020-07-13 15:34:11]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-07-13 15:34:11]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-07-13 20:34:11]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[50W QRP Amplifier - Schematic, PCB ver 1]]></title>
		<link>https://jeff.glass/?p=3181</link>
		<pubDate>Sat, 25 Aug 2018 20:56:53 +0000</pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://kk9jef.wordpress.com/?p=3181</guid>
		<description></description>
		<content:encoded><![CDATA[The 5W-to-50W QRP HF Amplifier project is rolling along nicely&nbsp; - I received the first PCB draft in the male this week and am 90% of the way through assembling it, with only heatsink-placement left to sort out.

I've made a couple of additions to the schematic since the original layout, including a relay-activated indicator (R27 and its LED) and an RF-output sensing LED (from C14 to its associated LED to ground) along the the lines of <a href="https://www.youtube.com/watch?v=iQ8YADOWk9U">VK3YE's recent project</a>. There's also a space on the PCB now for a low pass filter with the same footprint as <a href="https://www.qrp-labs.com/lpfkit.html">Hans Summers' LPFs over at QRP-Labs</a>. Not that you'd necessarily want to reuse a QRP LPF for a 50W amp, you'd be in danger of putting too much voltage on the caps, but that would be a simple change.

Here's the schematic as it exists now:
<img class="alignnone size-full wp-image-3183" src="https://jeff.glass/wp-content/uploads/2018/08/qrp_amp_schematic_1-1.png" alt="qrp_amp_schematic_1-1" width="4078" height="2617">

&nbsp;

And here's the current boards (layout, unpopulated, populated):

<img class="alignnone size-full wp-image-3184" src="https://jeff.glass/wp-content/uploads/2018/08/qrp_amp_board_1-1.png" alt="qrp_amp_board_1-1" width="1202" height="962">

<img class="alignnone size-full wp-image-3185" src="https://jeff.glass/wp-content/uploads/2018/08/fullsizerender-1.jpg" alt="FullSizeRender (1)" width="1632" height="1224">

<img class="alignnone size-full wp-image-3186" src="https://jeff.glass/wp-content/uploads/2018/08/img_5114-1.jpg" alt="IMG_5114" width="1632" height="1224">

I've already got a little laundry list of things to modify for a second rev of this board, including, in no particular order:
<ul>
 	<li>Swap the Diode placements the vertical to preserve board space</li>
 	<li>Add footprints for alternate relay packages</li>
 	<li>Add footprints for alternate trim-pot packages</li>
 	<li>Re-think component designators for clarity</li>
 	<li>Add bypass jumpers for the 3dB input pad and the LPF.</li>
 	<li>For some reason, the none of the component values printed on the silkscreen, will need to sort that out</li>
 	<li>I'm not sure if I screwed up how to designate a cutout or if JLCPCB doesn't do them for its bare-bones PCB service, but I'd like not to do the next set with a drill press and a nibbler.</li>
</ul>
Hoping to put this on the air soon for some signal tests. Hear you there!

73

<em>This post is cross-posted to my more general-purpose nerdery blog,&nbsp;<a href="http://jeff.glass/blog">jeff.glass/blog</a>.</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3181</wp:post_id>
		<wp:post_date><![CDATA[2018-08-25 20:56:53]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-25 20:56:53]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-29 14:07:33]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-29 19:07:33]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[50w-qrp-amplifier-schematic-pcb-ver-1-2]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="amplifier"><![CDATA[Amplifier]]></category>
		<category domain="post_tag" nicename="eagle"><![CDATA[Eagle]]></category>
		<category domain="post_tag" nicename="pcb"><![CDATA[PCB]]></category>
		<category domain="post_tag" nicename="qrp"><![CDATA[QRP]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3186]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[timeline_notification]]></wp:meta_key>
		<wp:meta_value><![CDATA[1535230616]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_rest_api_published]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_rest_api_client_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[21459669583]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>724</wp:comment_id>
			<wp:comment_author><![CDATA[nickthevic7]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[nick@nickthevic.co.uk]]></wp:comment_author_email>
			<wp:comment_author_url>http://gravatar.com/nickthevic7</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[92.40.248.204]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2020-03-17 21:27:28]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2020-03-17 21:27:28]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[Hi Jeff, thanks very much for sharing this. I've built my own amplifier based on your design and it works pretty well. As mine is going into the enclosure with an 80m transceiver I'm building, I didn't need the rf sensing section or the pi attenuator. But the amp itself was built to your design.

I've actually got a puzzling situation though: the amp works even without any bias to the mosfets! I'm not sure how this is possible but with +12-28V to the drains and a 1W signal applied to the gates then it works like a charm - even with no dc bias applied. I've swapped out the IRF510s but the results are the same. I'm a bit stuck with this one but at least it works!

Thanks again.

73,

Nick
M0NTV]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[comment]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[1598726574]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1598726575.3994929790496826171875;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"kk9jef";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[email_notification_queued]]></wp:meta_key>
			<wp:meta_value><![CDATA[1598726574]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[email_notification_jobid]]></wp:meta_key>
			<wp:meta_value><![CDATA[48257990676]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1584480448.6274359226226806640625;s:5:"event";s:9:"check-ham";s:4:"user";s:11:"nickthevic7";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1584485811.7108089923858642578125;s:5:"event";s:9:"check-ham";s:4:"user";s:11:"nickthevic7";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[50W QRP Amplifier - 3D Printed Case Design and Livestream]]></title>
		<link>https://jeff.glass/?p=3188</link>
		<pubDate>Wed, 29 Aug 2018 00:01:20 +0000</pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://kk9jef.wordpress.com/?p=3188</guid>
		<description></description>
		<content:encoded><![CDATA[With the 50W QRP amplifier project coming along nicely, I felt it was time to start thinking about a reproducible case for the project. And for custom, reproducible cases, 3D printing is my current tool of choice.

I ended up designing the case on a YouTube Livestream on Saturday night, to which a few great colleagues stopped by to ask questions and offer advice. The full video is below.

https://youtu.be/kVQQyohYvAA

The case is in two parts - a box with standoffs for the PCB and holes for connectors, and a lid with labels. The standoffs and the attachment holes for the lid are meant to connect with M3 threaded-inserts and be held down with M3 machine screws.

This was my first time using Fusion 360's Eagle Sync function - since Eagle was acquired by AutoDesk in 2016, it makes sense that they've been working to integrate PCB design workflows into their other products. The sync was fair straightforward - open Fusion360, select Eagle Sync, select your board file in Eagle, and after a minute or two of importing, up pops your PCB in Fusion360. Neat! I'm still struggling with how to handle board cutouts in eagle, and I'm not sure how well they'll be supported in Fusion, but that's a project for another day.

Here's the final design as it turned out in Fusion360:

<img class="alignnone size-full wp-image-3191" src="https://jeff.glass/wp-content/uploads/2018/08/amppic1.png" alt="amppic1" width="1069" height="762">

<img class="alignnone size-full wp-image-3192" src="https://jeff.glass/wp-content/uploads/2018/08/ampic4-1.png" alt="ampic4" width="554" height="823"><img class="alignnone size-full wp-image-3190" src="https://jeff.glass/wp-content/uploads/2018/08/amppic.png" alt="amppic" width="1022" height="756">

The PowerPole model was provided by Chris Wych, a theatrical propmaster who's done some really interesting work with Fusion360, including using it to model some 2d-printable geodesic designs which then folded up into geometric shapes. Very cool!

First print of this design coming soon!

73

<em>This post is cross-posted to my more general-purpose nerdery blog,&nbsp;<a href="http://jeff.glass/blog">jeff.glass/blog</a>.</em>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3188</wp:post_id>
		<wp:post_date><![CDATA[2018-08-29 00:01:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2018-08-29 00:01:20]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-29 14:07:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-29 19:07:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[50w-qrp-amplifier-3d-printed-case-design-and-livestream-2]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="3d-printing"><![CDATA[3D Printing]]></category>
		<category domain="post_tag" nicename="amplifier"><![CDATA[Amplifier]]></category>
		<category domain="post_tag" nicename="fusion360"><![CDATA[Fusion360]]></category>
		<category domain="post_tag" nicename="qrp"><![CDATA[QRP]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="videos"><![CDATA[Videos]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_1b7df942ae6e8a0d430785f99313265e]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="3D Printing for PCB Projects Livestream - KK9JEF" width="580" height="326" src="https://www.youtube.com/embed/kVQQyohYvAA?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_5faaf7f0de73e137be115b7ab65f0134]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="3D Printing for PCB Projects Livestream - KK9JEF" width="720" height="405" src="https://www.youtube.com/embed/kVQQyohYvAA?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3191]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_rest_api_published]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_rest_api_client_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[-1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[21563408231]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[timeline_notification]]></wp:meta_key>
		<wp:meta_value><![CDATA[1535501182]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_5faaf7f0de73e137be115b7ab65f0134]]></wp:meta_key>
		<wp:meta_value><![CDATA[1598727846]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_1b7df942ae6e8a0d430785f99313265e]]></wp:meta_key>
		<wp:meta_value><![CDATA[1598728038]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[CDV-720 3A High Range Radiation Meter]]></title>
		<link>https://jeff.glass/?p=3195</link>
		<pubDate>Wed, 23 Jan 2019 04:27:13 +0000</pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://kk9jef.wordpress.com/?p=3195</guid>
		<description></description>
		<content:encoded><![CDATA[<p><em>This post is cross-posted to my general blog, <a href="http://cdv-720-3a-high-range-radiation-meter">jeff.glass/blog</a></em></p>
<p><!--StartFragment--></p>

<!-- wp:paragraph -->
<p>I went to the WCRA Hamfest in St. Charles this weekend in search of test gear (I had been fortunate to find a working <a href="https://www.radiomuseum.org/r/heath_digital_frequency_counte.html">Heathkit IM-2420 Frequency Counter</a> there a couple years ago). I didn't come away with anything of that sort, but I did scoop up this yellow beauty:</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3198} -->
<figure class="wp-block-image"><img src="https://jeff.glass/wp-content/uploads/2019/01/radiationmeter-1.jpg?w=960" alt="" class="wp-image-3198"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>This beaut is a CDV-720 3A High Range Radiation Meter. It's a remnant of the early cold war, the beginning of the atomic age - thousands were produced in the late fifties and early sixties by the <a href="http://national-radiation-instrument-catalog.com/new_page_26.htm">Victoreen Company</a> out of Cleveland Ohio. It's got a cast aluminum case that feels like it's made to survive a bomb, and maybe it was. The manual notes that: </p>
<!-- /wp:paragraph -->

<!-- wp:quote -->
<blockquote class="wp-block-quote"><p><em>It is designed to be used by radiological Civil Defense personnel in determining radioactive contamination levels that may result form an enemy attack or other nuclear disaster.</em></p></blockquote>
<!-- /wp:quote -->

<!-- wp:paragraph -->
<p>The really staggering thing about this meter is the range it covers: up to 500 Roentgens/hr. At that rate, your goose is cooked in a matter of minutes (first metaphorically, then literally).</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Here's a brief video overview of the meter, its circuitry, and the scary-high levels of radiation that it's meant to measure: </p>
<!-- /wp:paragraph -->

<!-- wp:core-embed/youtube {"url":"https://youtu.be/2DGl5XmxJt8","type":"video","providerNameSlug":"youtube","className":"wp-embed-aspect-16-9 wp-has-aspect-ratio"} -->
<figure class="wp-block-embed-youtube wp-block-embed is-type-video is-provider-youtube wp-embed-aspect-16-9 wp-has-aspect-ratio"><div class="wp-block-embed__wrapper">
https://youtu.be/2DGl5XmxJt8
</div></figure>
<!-- /wp:core-embed/youtube -->

<!-- wp:paragraph -->
<p>Stay safe and non-irradiated out there!</p>
<!-- /wp:paragraph -->

<p><!--EndFragment--></p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3195</wp:post_id>
		<wp:post_date><![CDATA[2019-01-23 04:27:13]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[2019-01-23 04:27:13]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-08-29 14:04:59]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-08-29 19:04:59]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[cdv-720-3a-high-range-radiation-meter-2]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="hamfest"><![CDATA[Hamfest]]></category>
		<category domain="post_tag" nicename="radiation-meter"><![CDATA[Radiation Meter]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
		<category domain="post_tag" nicename="videos"><![CDATA[Videos]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_thumbnail_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[3198]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_publicize_job_id]]></wp:meta_key>
		<wp:meta_value><![CDATA[26828448625]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[timeline_notification]]></wp:meta_key>
		<wp:meta_value><![CDATA[1548217637]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_945013b463e5f3688c68f7d7c4be3508]]></wp:meta_key>
		<wp:meta_value><![CDATA[<iframe title="High-Range Radiation Meter Overview - Victoreen CDV-720" width="720" height="405" src="https://www.youtube.com/embed/2DGl5XmxJt8?feature=oembed" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_time_945013b463e5f3688c68f7d7c4be3508]]></wp:meta_key>
		<wp:meta_value><![CDATA[1598727893]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							<wp:comment>
			<wp:comment_id>723</wp:comment_id>
			<wp:comment_author><![CDATA[CDV-720 3A High Range Radiation Meter &#8211; JeffJeffGlassGlass]]></wp:comment_author>
			<wp:comment_author_email><![CDATA[]]></wp:comment_author_email>
			<wp:comment_author_url>https://jeff.glass/2019/01/22/cdv-720-3a-high-range-radiation-meter/</wp:comment_author_url>
			<wp:comment_author_IP><![CDATA[155.254.18.62]]></wp:comment_author_IP>
			<wp:comment_date><![CDATA[2019-01-23 04:27:24]]></wp:comment_date>
			<wp:comment_date_gmt><![CDATA[2019-01-23 04:27:24]]></wp:comment_date_gmt>
			<wp:comment_content><![CDATA[[&#8230;] This&nbsp;post&nbsp;is&nbsp;cross-posted&nbsp;to&nbsp;my&nbsp;ham-radio&nbsp;specific&nbsp;blog,&nbsp;kk9jef.wordpress.com [&#8230;]]]></wp:comment_content>
			<wp:comment_approved><![CDATA[1]]></wp:comment_approved>
			<wp:comment_type><![CDATA[pingback]]></wp:comment_type>
			<wp:comment_parent>0</wp:comment_parent>
			<wp:comment_user_id>0</wp:comment_user_id>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:3:{s:4:"time";d:1548271875.214167118072509765625;s:5:"event";s:15:"status-approved";s:4:"user";s:6:"kk9jef";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_result]]></wp:meta_key>
			<wp:meta_value><![CDATA[false]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1548217645.4570159912109375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[jabber_published]]></wp:meta_key>
			<wp:meta_value><![CDATA[1548271874]]></wp:meta_value>
			</wp:commentmeta>
						<wp:commentmeta>
	<wp:meta_key><![CDATA[akismet_history]]></wp:meta_key>
			<wp:meta_value><![CDATA[a:2:{s:4:"time";d:1548222370.5410630702972412109375;s:5:"event";s:9:"check-ham";}]]></wp:meta_value>
			</wp:commentmeta>
							</wp:comment>
					</item>
					<item>
		<title><![CDATA[Setting up a Development Environment for KiCad 6 on Windows 10]]></title>
		<link>https://jeff.glass/?p=3271</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3271</guid>
		<description></description>
		<content:encoded><![CDATA[Most of this is going to be a rehash of the instructions at <a href="https://forum.kicad.info/t/how-can-i-help-improve-kicad/15217">https://forum.kicad.info/t/how-can-i-help-improve-kicad/15217</a> and the <a href="https://docs.kicad-pcb.org/doxygen/md_Documentation_development_compiling.html">Building KiCad on Windows section of the Compilation Guide.</a>

Create GitLab Account

Fork the KiCad code repo (using the Fork button on main page)

Building KiCad Locally:
<ul>
 	<li>Download <a href="https://www.msys2.org/">MSYS2</a>,
<ul>
 	<li>Follow <a href="https://www.msys2.org/">installation instructions on MSYS page</a></li>
 	<li>Run the large command <a href="https://docs.kicad-pcb.org/doxygen/md_Documentation_development_compiling.html">per the instructions here</a>. This may take awhile.</li>
</ul>
</li>
 	<li>May need to download <a href="https://kicad-pcb.org/libraries/download/">KiCad libraries</a></li>
</ul>
Read the coding style and commit message instructions

Assign yourself to a bug? I couldn't.

Create a branch of your local repository

Fix the issue, commit your code to that branch.

Submit your branch as a merge request to the KiCad repository.

Hopefully, success!

<hr />

<a href="https://kicad.mmccoo.com/kicad-scripting-table-of-contents/">KiCad Scripting Table of Contents</a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3271</wp:post_id>
		<wp:post_date><![CDATA[2020-10-12 14:06:57]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-10-12 14:06:57]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-10-12 19:06:57]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Setting up an Electronics Lab - Consumables]]></title>
		<link>https://jeff.glass/?p=3278</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3278</guid>
		<description></description>
		<content:encoded><![CDATA[<p>A year ago, I had just built up another new electronics lab, and was furiously kitting it out with <a href="https://jeff.glass/2019/12/01/electronics-lab-tools/">the essential tools for an electronics workshop</a>. I'm glad to say that I think that list still holds up pretty well - having split the last twelve months pretty evenly between my home workshop and my work-workshop, both similarly accessorized, I haven't found that much that was missing (<em>but see the Addendum for those few things)</em>.</p>
<p>The flipside of the coin</p>
<h2>Electronics Disposables</h2>
<p>Perfboard</p>
<p>Copper Clad</p>
<p>(Solder, flux)</p>
<h2><strong>Adhesives</strong></h2>
<p>Let's start with sticking stuff to other stuff. I covered <a href="https://jeff.glass/2019/12/01/electronics-lab-tools/#soldering">my thoughts on solder selection</a> last time around, so we'll get into the wide world of sticking things together that don't necessarily <em>want</em> to share electrons.</p>
<h3>Glues</h3>
<p>Hot Glue</p>
<p>Superglue/Cyanoacrylate</p>
<p> </p>
<p>White Glue</p>
<p>Rubber Cement</p>
<p>Barge Glue</p>
<p>Mod Podge</p>
<h3>Tapes</h3>
<p>Gaff Tape</p>
<p>VHB</p>
<p>Blue Tape</p>
<p>Marley Tape</p>
<p>Electrical Tape</p>
<p>Blacktack/blackwrap</p>
<p>Foil Tape</p>
<p>Glow Tape</p>
<h3>Other</h3>
<p>Blue Tack</p>
<p>Tie Line</p>
<h1>Cleaning</h1>
<p>Isopropyl</p>
<p>Windex</p>
<p>Goo-Gone</p>
<p>Kimtech Wipes</p>
<h2>Lubricants</h2>
<p>(3-in-one, WD-40)</p>
<h2>Storage</h2>
<p>Ziplock/Similar</p>
<p>Antistatic Bags</p>
<h2>Batteries</h2>
<p>Eneloop</p>
<p>18650</p>
<p>(Generic Disposables)</p>
<h2>Zip Ties</h2>
<h2>Threaded Hardware</h2>
<h2>Marking and Writing</h2>
<h3>Paint</h3>
<p>Spray Paint</p>
<p>Primer</p>
<h3>Labelling</h3>
<p>Sharpies (different sizes)</p>
<p>Mechanical pencils</p>
<p>Whiteboard/markers (Acrylic/Plexi)</p>
<p>Labelmaker/tape</p>
<h2>Wire Joining</h2>
<p>Wagos</p>
<p>Butt Splices</p>
<p>Other Terminal types (Ratcheting crimps)</p>
<p>Terminal Blocks</p>
<p>Heat Shrink</p>
<h2>Wire</h2>
<p>Breadboarding wire</p>
<p>Bell Wire</p>
<p>Zip Cord</p>
<p>Speaker Wire</p>
<p>Ribbon Wire</p>
<h2>Disposable Tools</h2>
<p>Single edge razor blades</p>
<p>Mini paint brushes</p>
<p>Plant wire</p>
<h2>3D Printing Materials</h2>
<h2>Other??</h2>
<p>Wire staples</p>
<p>Catgut (Cable Wrap)</p>
<p> </p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3278</wp:post_id>
		<wp:post_date><![CDATA[2020-10-21 12:09:05]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-10-21 12:09:05]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-10-21 17:09:05]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Setting up VS Code for C++ Development]]></title>
		<link>https://jeff.glass/?p=3318</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3318</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Install VS Code</p>
<p>Intsall Recomendded VS C++ extensions</p>
<p>Download <a href="https://www.msys2.org/">MSYS2 installer</a>, run with default location</p>
<p>Follow <a href="https://www.msys2.org/">instructions on MSYS2 page to update/install</a></p>
<ul>
<li>pacman -Syu</li>
<li>pacman -Su</li>
</ul>
<p>Follow<a href="https://www.devdungeon.com/content/install-gcc-compiler-windows-msys2-cc"> instructions to install C++:</a></p>
<pre class="prettyprint"><code><span class="pln">pacman </span><span class="pun">-</span><span class="pln">S </span><span class="kwd">base</span><span class="pun">-</span><span class="pln">devel gcc vim cmake<br /></span></code></pre>

<!-- wp:paragraph -->
<p>Add <strong>C:\msys64\usr\bin</strong> to path</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In <a href="https://code.visualstudio.com/docs/cpp/config-mingw">VS Code</a>, <strong>Terminal</strong> > <strong>Configure Default Build Task</strong> > G++ task</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Save this task file</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Control Shift B to Built</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Run from powershell</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3318</wp:post_id>
		<wp:post_date><![CDATA[2020-11-10 09:02:21]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-11-10 09:02:21]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-11-10 15:02:21]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Making Contributions to Open Source Hardware with Git/Github]]></title>
		<link>https://jeff.glass/?p=3321</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3321</guid>
		<description></description>
		<content:encoded><![CDATA[https://gist.github.com/Chaser324/ce0505fbed06b947d962

Download Git Bash/Git Gui.

On Github: Fork the repository you wish to modify with the Fork button

In Git Gui:
<ul>
 	<li>Clone Existing Repository
<ul>
 	<li>Source Directory: Github Repo Link (to your forked REPO)</li>
 	<li>Target Directory: Name of a folder that <em>does not exist yet </em>(no need to create this folder in advance)</li>
 	<li>CLONE</li>
</ul>
</li>
 	<li></li>
</ul>
In a code editor of your choice:]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3321</wp:post_id>
		<wp:post_date><![CDATA[2020-11-13 09:33:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-11-13 09:33:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-11-13 15:33:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Advent of Code 2020: Day 10-17]]></title>
		<link>https://jeff.glass/?p=3456</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3456</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I figure breaking these Advent of Code posts down into chunks of 8 days (plus the unitary day 1) is a decent size; at least, the post on days 2-9 feels like it's teetering on the edge of extremely long. So now, here's day 10-17:</p>
<h2>Day 10</h2>
<p>I quipped on Twitter that today's challenge should have been called "caching for cash," and its really true. The problem statement (involving horribly long chains of adapters) first involves counting the quantity of adjacent numbers in a list, as well as numbers separated by two non-present numbers. That's straightforward enough:</p>
<p>https://gist.github.com/JeffersGlass/08a2c0a0bdd6e3dd56a8d3f2b967ed34</p>
<p>The second part of the question involves counting the number of ways to travel from 0 to the highest number in the list, if only jumps of size 1, 2, and 3 are allowed. The problem statement hints that there are potentially&nbsp;<em>trillions</em> of combinations, so a simple brute-force method won't work. However, given that the input list only has 115 entries, a brute force approach&nbsp;<em>with caching&nbsp;</em>certainly can:</p>
<p>https://gist.github.com/JeffersGlass/213c2cdae29ddc0803637fb5aefbde96</p>
<p>(<em>Note that Python 3.9 introduced functools.cache as an additional option; I'm working in Python 3.8.5.)</em></p>
<p>While the number of potential path does turn out to be in the trillions, this caching method ensures it still only takes a little over a millisecond on my middle-of-the-road machine to find the answer. Is it a great solution for a very long dataset? No. Is it perfectly workable and satisfactory for the problem at hand? Oh yes.</p>
<h2>Day 11</h2>
<p>Ah, the first problem involving problem solving on a 2D grid. These were some of my major stumbling blocks last year, especially the ones having to do with maze/path traversal. Thankfully, this problem isn't as hard algorithmically - it's a cellular automation problem about seats in an airport, where seats become occupied or unoccupied based on certain criteria. Some cells are also 'empty', meaning they contain no seats and will never be occupied.</p>

<!-- wp:paragraph -->
<p>In part 1 of today's problem, the 'live' or 'die' criteria for our cellular automata are based on the 8 immediately-adjacent cells, and asks us to count the number of live seats when the layout stabilizes. To that end, I implemented an iterate function, which takes an adjacency function and live/die and returns the next state of the layout, as well as an iterateUntilStable function which calls this iterate function until it stops producing changes. Finally, for part 1, the adjacency function simply counts the number of occupied chairs ('#') in adjacent cells:</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/ca62dd330d7a8e872135829cabd022ef","type":"rich","providerNameSlug":"embed-handler","className":""} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/ca62dd330d7a8e872135829cabd022ef
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>This turns out to be a very useful architecture for solving part 2 of today's problem, which simply modifies the adjacency function to refer to 'visible' seats (in any of the 8 compass directions, what's the first seat beyond all the unoccupied spaces?). So I simply had to implement that adjacency function:</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/8e4df740d5ad187dc45cf8b30f77729d","type":"rich","providerNameSlug":"embed-handler"} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/8e4df740d5ad187dc45cf8b30f77729d
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>There are a bunch of inefficient things about this code, and it seems most of them could be improved by a certain amount of pre-processing. Things like:</p>
<!-- /wp:paragraph -->

<!-- wp:list -->
<ul><li>We currently try to update each space ever cycle, including checking the that the 'empty' seats are still empty... which they always will be. We could pre-generate a list of seat positions and iterate over that.</li><li>Because of the presence of empty spaces which will <em>never</em> be live/occupied, we could do a pre-processing run to determine the potential live neighbors of each seat, and then only check the status of those, rather than checking the status of all 8 neighbors of each position on each row. This would be <em>especially</em> advantageous for part 2, where I'm currently <em>finding</em> the location of all the seats a given position can see each time cycle, even though they'll never change.</li></ul>
<!-- /wp:list -->

<!-- wp:paragraph -->
<p>But the day got busy with other projects, so perhaps those will be optimizations for the future.</p>
<!-- /wp:paragraph -->

<!-- wp:heading -->
<h2>Day 12</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I get a little paranoid about problem input someimes (only sometimes; sometimes I'm lazy) - for today's problem about moving a ship around a grid, it seemed reasonable to expect (and a cursory examination of the input seemed to imply) that the ship would only 'turn' in 90 degree increments... but that seemed like an easy thing to test, given the problem statement:</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/d46de6a591ff2a96ba69aaf7117a700c","type":"rich","providerNameSlug":"embed-handler"} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/d46de6a591ff2a96ba69aaf7117a700c
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>From there, because we're working in 90-degree turns, implementing the rotation instructions becomes really quite simple, and moving the position of the ship on the grid is also straightforward:</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/c33de411d8de73054ab995dca045d45c","type":"rich","providerNameSlug":"embed-handler"} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/c33de411d8de73054ab995dca045d45c
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>You can see, commented out, one of my troubleshooting techniques for single-stepping through an algorithm. While I could also use a decorator to display parameters/return values, having the ability to "Press button to continue" is a nice calm way to check algorithms like this.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>In part two, the only instruction which actually moves the ship is the "F" command; all the others move the location of a "waypoint", which the ship then moves to (or moves toward multiple times). This only involves a slight modification of the instructions from part 1:</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/253eee175e1d335521c8389ff53d5063","type":"rich","providerNameSlug":"embed-handler"} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/253eee175e1d335521c8389ff53d5063
</div></figure>
<!-- /wp:embed -->

<!-- wp:heading -->
<h2>Day 13</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>Bit of a doozy today! Part 1 is fairly straightforward, and the numbers are small enough that a simple brute-force loop is acceptable. In short, it asks which of the given numbers in a list has a multiple that is closest-to and greater-than-or-equal-to a target number. We can write up the function "what's the smallest multiple of A greater than B", and then find the minimum value when applied to our input list:</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/24fcf22cc0175e250e7a1fef47a070cd","type":"rich","providerNameSlug":"embed-handler","className":""} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/24fcf22cc0175e250e7a1fef47a070cd
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>That input list, though, has a classic feature of these Advent of Code puzzles - some part of the input that you "decide to ignore" for part 1, which plays a significant role in part 2. In this case, you're asked to find, for the same list of numbers (but this time, the "x"s in between certain numbers are relevant), the smallest number such that it is a multiple of the numbers in the input list, but offset by their position in the input list. That's not a great explanation, but the problem itself does a better job with better examples, so <a href="https://adventofcode.com/2020/day/13">you should probably just go read it</a>.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>[latexpage] The solution I came up with was essentially: find the smallest solution $X$ for the first pair of numbers/offsets, and define a term called $addend$ which is the least common multiple of these first two numbers. Then for every natural number $N$, the number $(S + N*addend)$ also satisfies our puzzle conditions (though of course, it won't be the smallest solution). Find the smallest number in this set of numbers which <em>also</em> satisfies the conditions if we include the <em>next</em> number in the list, and let our new addend be $LCM(addend, newNumber)$. Repeat this proecess until there are no numbers left.</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/535d5e78e9cd1083ad67ce574e39da87","type":"rich","providerNameSlug":"embed-handler","className":""} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/535d5e78e9cd1083ad67ce574e39da87
</div></figure>
<!-- /wp:embed -->

<!-- wp:heading -->
<h2>Day 14</h2>
<!-- /wp:heading -->

<!-- wp:paragraph -->
<p>I think, in terms of lines of code, this is the longest program I've needed to write so far this year. Not that that's a metric of difficultly, but it is interesting.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Part 1 isn't too terribly difficult - we're given an input file with a lines that either contain a new value for a bitmask, or memory addresses and values. We must apply the bitmask to the values (per the problem specifications), store those values at those memory addresses, and then sum all the values once we've run through the whole file. Since we have a 36-bit address space and only a few finite locations, we'll use a dictionary to store the sparse information:</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/1531ea014c322cbd7feae4e025ba2e88","type":"rich","providerNameSlug":"embed-handler","className":""} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/1531ea014c322cbd7feae4e025ba2e88
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>For part 2, we instead apply the bitmask (in a slightly different way) to permute the possible memory addresses before storing the given value to <em>all </em>those addresses. At least, this seems sensible at first blush, but given how fast these permutations might explode in number, let's do a quick sanity check of how many memory locations that could potentially be, by iterating over all the bitmasks first:</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/ea6af5fe393a2270a7fec92a9971d505","type":"rich","providerNameSlug":"embed-handler","className":""} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/ea6af5fe393a2270a7fec92a9971d505
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>For my problem input, this came out to just under 17000, which isn't an unreasonable dictionary size. Bolstered by this, I implemented the function which creates all the prescribed permutations of the input addresses, and then ran that over all the input lines given:</p>
<!-- /wp:paragraph -->

<!-- wp:embed {"url":"https://gist.github.com/JeffersGlass/263a8e008cfb84815a0a990d31f7fd6e","type":"rich","providerNameSlug":"embed-handler","className":""} -->
<figure class="wp-block-embed is-type-rich is-provider-embed-handler wp-block-embed-embed-handler"><div class="wp-block-embed__wrapper">
https://gist.github.com/JeffersGlass/263a8e008cfb84815a0a990d31f7fd6e
</div></figure>
<!-- /wp:embed -->

<!-- wp:paragraph -->
<p>As you can tell by the numerous logging lines and comments, I had to do a fair bit of debugging before I successfully implemented the 'create-the-permuted-addresses' function. Mostly, I kept mixing up my loop indices/iterators due to poor choices of variable names. Once I went back and tidied things up, the solution became much easier to hone in on.</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>This is the first challenge I've used Python's regular expressions for, and it's certainly an area I'm weak in. Given that all of these challenges require reading in some kind of text from a file, perhaps I can push myself to become more familiar with the regular expression library over the remaining 11 days of this year's challenge.</p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3456</wp:post_id>
		<wp:post_date><![CDATA[2020-12-14 09:58:49]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2020-12-14 09:58:49]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2020-12-14 15:58:49]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="post_tag" nicename="codeadvent"><![CDATA[CodeAdvent]]></category>
		<category domain="post_tag" nicename="codeadvent2020"><![CDATA[CodeAdvent2020]]></category>
		<category domain="post_tag" nicename="python"><![CDATA[Python]]></category>
		<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[A Theory and Philosophy of Practical Troubleshooting]]></title>
		<link>https://jeff.glass/?p=3737</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3737</guid>
		<description></description>
		<content:encoded><![CDATA[<ul>
 	<li>If the end result works, you know the whole pipeline works (probably)
<ul>
 	<li>If the end result doesn't work, you know very little about what is broken
<ul>
 	<li>Splitting the problem in half</li>
</ul>
</li>
</ul>
</li>
 	<li>What is the goal?
<ul>
 	<li>What is the timeline/resources?</li>
 	<li>Better to shoot for a full solution vs. partial?</li>
 	<li>Do you need a solution vs knowledge?</li>
</ul>
</li>
 	<li>Troubleshooting Order - where to start?
<ul>
 	<li>Start with the most likely candidate
<ul>
 	<li>What could cause these symptoms?</li>
 	<li>What's changed since this last worked?</li>
 	<li>Are there more symptoms we haven't seen yet?</li>
 	<li>What could reveal more symptoms?</li>
</ul>
</li>
 	<li>Start with the most accessible/cheapest/fastest candidate</li>
 	<li>Start with the candidate most likely to give you more useful data</li>
 	<li>Start <em>somewhere</em></li>
</ul>
</li>
 	<li>Troubleshooting with full systems knowledge vs not
<ul>
 	<li>How big are the black-boxes? At what point will you just buy/implement a new black box and drill down no further</li>
 	<li>Exploring an information space vs. slicing a pipeline in half</li>
</ul>
</li>
 	<li>Google it!
<ul>
 	<li>Generational divide</li>
 	<li>Google well
<ul>
 	<li>Internet archive</li>
 	<li>Forums</li>
</ul>
</li>
</ul>
</li>
 	<li>Communication in Troubleshoooting
<ul>
 	<li>What do you actually know? Be as specific as possible</li>
 	<li>What do you feel? Especially in an unknown system, feelings can be valuable, or a red herring</li>
</ul>
</li>
</ul>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3737</wp:post_id>
		<wp:post_date><![CDATA[2021-06-21 09:06:08]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-06-21 09:06:08]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-06-21 14:06:08]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Parks on the Air Threefer - July 18 2021]]></title>
		<link>https://jeff.glass/?p=3753</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3753</guid>
		<description></description>
		<content:encoded><![CDATA[Midewin Tallgrass Prarie K-7256

Boathouse road and river road seems to be main stopping area

<a href="https://jeff.glass/wp-content/uploads/2021/07/midewin.png"><img class="aligncenter size-full wp-image-3754" src="https://jeff.glass/wp-content/uploads/2021/07/midewin.png" alt="" width="1202" height="762"></a>

Des Plaines state Fish and Wildlife Area K4120

River road turnoff by the train tracks - picnic area

<img class="aligncenter" src="https://www2.illinois.gov/dnr/Parks/PublishingImages/Des%20Plaines%20Site%20Map.png" width="513" height="632">

Channahon State Park K-0987

Lots of picnic tables around central parking lot

<a href="https://jeff.glass/wp-content/uploads/2021/07/Channahon.png"><img class="aligncenter size-full wp-image-3756" src="https://jeff.glass/wp-content/uploads/2021/07/Channahon.png" alt="" width="575" height="701"></a>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3753</wp:post_id>
		<wp:post_date><![CDATA[2021-07-18 10:59:01]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-07-18 10:59:01]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-07-18 15:59:01]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Pixel LED Suits - Pixelblaze, DMX, and LoRa Radio Control]]></title>
		<link>https://jeff.glass/?p=3761</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3761</guid>
		<description></description>
		<content:encoded><![CDATA[About a month ago, I was contacted by a colleague who works as the lighting designer]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3761</wp:post_id>
		<wp:post_date><![CDATA[2021-09-16 10:43:30]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-09-16 10:43:30]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-09-16 15:43:30]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Getting Started with AWS]]></title>
		<link>https://jeff.glass/?p=3764</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3764</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I'm always looking for ways to expand my skillset, and in an increasingly digital, work-from-home oriented world, having a firmer grasp on web technologies seems like not a bad thing. But, as someone who considers themselves a technically competent nerd with no real credentials to speak of, where to get started?</p>
<p><a href="https://cloudresumechallenge.dev/">The Cloud Resume Challenge</a> seems like a useful, self-guided way to start, or at least a roadmap toward building a 'complete' resume project. So here we go!</p>
<hr />
<h1>The Challenge: 16 Steps</h1>
<p>Completion of the challenge requires ticking 14 boxes to set up a simple static website on AWS with a required subset of features, acquiring a AWS Certified Cloud Practitioner certification, and wrapping it all up with a blog post about your experiences. Starting at the beginning, as usual, here's the start of the blog posts!</p>
<p>The AWS certificate requires a $100 investment and a genuine exam worth studying for, it seems. Something I imagine would be significantly easier to start studying for <em>after</em> completing the legwork of the rest of the challenge. So we'll set that requirement aside for most of the following.</p>
<h2>Why AWS?</h2>
<p>The Cloud Resume Challenge currently offers versions tailored to AWS, GCP, and Azure. I've chosen to go with AWS for the moment, but I'll admit, this is a fairly arbitrary choice based on my naïve impressions of the Amazon/GCP/Azure offerings. I'm sure I'll revise these opinions down the road, but my sense is:</p>
<ul>
<li>Amazon has a wider array of services offered, more industry reach, and a longer history of cloud presence. It seems to have a reputation for harder-to-parse naming and access conventions.</li>
<li>GCP has a somewhat friendly access/account model, but less industry reach and a shorter real world knowledgebase.</li>
<li>Microsoft Azure seems (again, from an outsider's perspective) to be targeted at existing businesses that are used to Microsoft's products and tools</li>
</ul>
[caption id="" align="alignnone" width="700"]<img src="https://www.veritis.com/wp-content/uploads/2018/05/aws-azure-gcp-cloud-market-share.jpg" alt="AWS, Azure and GCP: Market Shares and Growth Rate" width="700" height="393" /> <em>Image from Veritis.com, Oct 2020</em>[/caption]
<p>For a self-guided project, a deep well of online resources is really appealing. It doesn't look like I'll run into any significant limitations with any of the three platforms with this basic a project. With AWS seeming to be a market leader, it feels like I may as well go that way, and hopefully, what I learn will be semi-transferrable knowledge.</p>
<hr />
<h1>Setting up a Static Website on AWS S3</h1>
<h2>Getting Oriented</h2>
<p>The cloud resume challenge page directs users to this page on AWS helpfully titled "<a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteHosting.html">Hosting a Static Website using Amazon S3</a>." Neat!</p>
<p>Since this is a static website (i.e. made up only of static resources like HTML and CSS, possibly with some client-side Javascript but no server-side action), it seems that a static website on S3 is essentially a bunch of files plopped into a folder on Amazon's servers that people can point their web browsers at and view. Well, I'm sure a "bucket" is more complicated than just being a <em>folder</em>... but I'll cross that bridge when I need to.</p>
<p>Let's look through the AWS info documents listed on that page.</p>
<p>The <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteEndpoints.html">Website Endpoints</a> page indicates that, by making the contents of a bucket publicly accessible, anyone can point their browser at a fiddly URL like<em> http://<span style="color: #ff0000;">bucket-name</span>.s3-website-<span style="color: #ff0000;">Region</span>.amazonaws.com</em> and have access to that content. It goes on to talk a little about how to point ones DNS provider of choice at these specific resources, to use a more human-friendly URL. Or, one might use Amazon's Route 53 to.... accomplish the same thing? The distinction eludes me at this point, but that feels like something I can come back to.</p>
<p>The <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/EnableWebsiteHosting.html">Enabling Website Hosting</a> page seems to clarify a little more the steps needed to make a bucket available as website, saying: "<em>When you configure a bucket as a static website, you must enable static website hosting, <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/IndexDocumentSupport.html">configure an index document</a>, and <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteAccessPermissionsReqd.html">set permissions</a>." </em>It seems any of these steps can be done in the online S3 console, using API requests, via Amazon's SDK via code, or using their command line interface. While I'm sure programmatic access to these tools is really useful if you're spinning up sites in an automated fashion, I imagine I'll mostly be using the S3 console.</p>
<h2>A Placeholder Page</h2>
<p>None of this seems terribly complicated - I need to put some files in a bucket, then configure some settings so Amazon knows where to point people when they access my (very fiddly) URL. So I'll start by creating a very basic placeholder page to upload and play with. Time to get my hands dirty and learn.</p>
<p>For most of my scripting work at my day job, I use VS Code, which I happen to know has an HTML Boilerplate extension. The very generic HTML it generates is:</p>
<p>https://gist.github.com/JeffersGlass/c8b4479f21195de12ec59cb2f94f17ef</p>
<p>So, we've got our basic HTML document, with a &lt;head&gt; tag to start off, a &lt;body&gt; with basically no content yet... and that's it. Plus some commenty-things that seem to be dealing with older versions of internet explorer.</p>
<p>There's also a lot in here I don't understand yet, especially in the &lt;head&gt; section. What is a &lt;meta&gt; tag? Why do I need a viewport? I'll add these to my list of questions to answer down the road. I'm just diving forward to get this thing online at this point.</p>
<p>I'll add a brief &lt;p&gt; tag to the above boilerplate with the text "Hello, world!" That's it. That's the whole website for now.</p>
<h2>Making a Bucket</h2>
<p>If this whole process is really as simple as allowing the public to see the files in one of my buckets, it feels like I'll need this file (<em>now called index.html</em>) to be in an S3 bucket. Let's figure out how to do that.</p>
<p>Searching for "S3" in the top search bar on AWS brings up a listing for the Simple Scalable Storage page...</p>

<!-- wp:image {"id":3768,"sizeSlug":"full","linkDestination":"none"} -->
<figure class="wp-block-image size-full"><img src="https://jeff.glass/wp-content/uploads/2021/10/image.png" alt="" class="wp-image-3768"/></figure>
<!-- /wp:image -->

<!-- wp:paragraph -->
<p>...which has a create bucket button!</p>
<!-- /wp:paragraph -->

<p>I think "Hello_World" would be a good name for this bucket... oh, except bucket names can only have lowercase letters, numbers, periods, and hyphens... and must be unique Alright, "hello-world-jg-cr-1" it is. I don't know what the advantages to the different regions are, but given that I'll likely be the only traffic to this site, I'll chosen US East (Ohio) us-east-2 since I'm in the US Midwest.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/bucketname.png"><img class="aligncenter size-full wp-image-3774" src="https://jeff.glass/wp-content/uploads/2021/10/bucketname.png" alt="" width="641" height="313" /></a></p>
<p>Aha! The next section talks about access settings. I recall from the earlier page that setting permissions to allow public access is something I'll need to do to allow the site to be publicly available. Seems I'm able to do that right now, though I do have to check a big scary box saying I understand the risks.<a href="https://jeff.glass/wp-content/uploads/2021/10/access.png"><img class="aligncenter wp-image-3775 size-full" src="https://jeff.glass/wp-content/uploads/2021/10/access.png" alt="" width="780" height="664" /></a></p>
<p>There are some further options here. Versioning, which seems like it will store <em>every change to an object</em> unless otherwise specified, which seems like overkill for this tiny bad website. Tags, which may be interesting later. Encryption, which, again, overkill. And object locking, to prevent the accidental deletion of objects, which would probably be more useful if I were adding/removing objects programmatically. I'll leave all those features as default for now.</p>
<h2>Uploading</h2>
<p>Hey, I've got a bucket! With nothing it, it, but it is indeed, as promised, a bucket. And it seems I can just upload my <em>index.html </em>file using the WebUI...</p>
<p>Ah, here's some things I'll definitely want to go deep on at some point: <strong>permissions </strong>and <strong>storage types</strong>. I know the different types of storage will cost differerent amounts and have different restrictions, but I'll leave this as the default "Standard" for now. There are a couple of pre-defined <em>access control lists</em>, but given that the "Setting Permissions for Website Access" page earlier has a specific setup recommended, I'm going to leave this predefined as Private for now and change things momentarily, I think.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/succeeded.png"><img class="aligncenter size-medium wp-image-3778" src="https://jeff.glass/wp-content/uploads/2021/10/succeeded-300x122.png" alt="" width="300" height="122" /></a></p>
<p>Upload succeeded! Of course, trying to access that file online at the moment only yields an Access Denied error, but that was to be expected. I haven't completed all the required steps yet.</p>
<p>https://gist.github.com/JeffersGlass/103390d195bc0e4352458043a474a5e1</p>
<h2>Static Website Hosting</h2>
<p>Going back into the list of buckets, selecting my newly formed bucket, and clicking on its Properties tab, it's dead easy to enable the "Static Website Hosting" setting as recommended:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/static.png"><img class="aligncenter size-medium wp-image-3780" src="https://jeff.glass/wp-content/uploads/2021/10/static-300x260.png" alt="" width="300" height="260" /></a></p>
<p>It seems this step also takes care of the "Configuring an Index Document" step I anticipated from above. I enter "index.html" as my index document, so AWS knows what file to serve up when users access the "root" of the bucket.</p>
<h2>Permissions</h2>
<p>Since I elected not to configure my permissions automatically before, I'll go back and do that now, following along with the <a href="https://docs.aws.amazon.com/AmazonS3/latest/userguide/WebsiteAccessPermissionsReqd.html">Setting Permissions for Website Access</a> page. This is essentially copying and pasting the pre-generated permissions text into the in-browser permissions editor window and hitting save. </p>
<h2><a href="https://jeff.glass/wp-content/uploads/2021/10/permsisions.png"><img class="aligncenter size-medium wp-image-3781" src="https://jeff.glass/wp-content/uploads/2021/10/permsisions-300x300.png" alt="" width="300" height="300" /></a></h2>
<h2>Success</h2>
<p>Now, if I go to <a href="https://jeff.glass/wp-content/uploads/2021/10/inline.png"><img class="alignnone size-full wp-image-3788" src="https://jeff.glass/wp-content/uploads/2021/10/inline.png" alt="" width="399" height="23" /></a> I<span style="color: initial; font-size: revert;"> see...</span><a href="https://jeff.glass/wp-content/uploads/2021/10/helloworld.png"><img class="aligncenter size-medium wp-image-3782" src="https://jeff.glass/wp-content/uploads/2021/10/helloworld-300x56.png" alt="" width="300" height="56" /></a></p>
<p>Alright! My first website hosted on AWS! So clean, so crisp, so minimalistic. </p>
<hr />
<h1>Next Steps</h1>
<p>Very loosely speaking, this checks off one-and-a-half of the 16 points on the Cloud Resume Challenge checklist:</p>
<p style="padding-left: 40px;"><strong>(4) Static Website</strong> - Your HTML resume should be deployed online as an Amazon S3 Static Website.</p>
<p style="padding-left: 40px;"><strong>(16) Blog Post</strong> - Link a short blog post describing some of the things you learned. (Of course, this is not that blog post, but is a starting point and framework for them).</p>
<p>To my eye, the remaining 14 goals fall into 5 separate topics. Here's what I think each entails, and which bullet points on the Cloud Resume Challenge they tick off:</p>
<h2>Site Content</h2>
<p>As catchy as "Hello World" is, a resume it is not. This chunk involves making the website into meaningful content, formatted in a nice way. Possibly with basic, general HTML, possibly with some kind of interesting framework. But content should the primary focus of this chunk. I'm not sure what form that will take, to be honest, but something better than boilerplate would of course be necessary.</p>
<p>This covers goals:</p>
<p style="padding-left: 40px;"><strong>(2) HTML</strong> - Your resume needs to be written in HTML<br /><strong>(3) CSS</strong> - Your resume needs to be styled with CSS</p>
<h2>Basic AWS Infrastructure</h2>
<p>A cumbersome URL sitting in a bucket is not the most user friendly interface, nor the most secure. I'll need to set up a proper DNS address for my new site, and use something like Cloudfront to serve the site over https. Since I'm already somewhat familiar with these processes outside of AWS, I hope this will be both educational and fairly straightforward.</p>
<p>This covers goals:</p>
<p style="padding-left: 40px;"><strong>(5) HTTPS</strong> - The S3 Website URL should use HTTPs for security<br />(<strong>6) DNS</strong> - Point a custom DNS domain name to the site.</p>
<h2>Site Features</h2>
<p>There's a half-dozen goals in the Challenge that seem oriented toward exposing the participant to slightly more advanced website design. The result is a simple visitor counter, but it uses Javascript to query a database via an API and a Lambda written in python, that should be well tested and defined using a Serverless Application Model. I'm sure I'll find out what a SAM is along the way; I know what most of the other words are at least.</p>
<p>This covers goals:</p>
<p style="padding-left: 40px;"><strong>(7) Javascript</strong> - Your resume webpage should include a visitor counter that displayed how many people have accessed the site.<br /><strong>(8) Database</strong> - The visitor counter will need to retrieve and update its count in a database somewhere.<br /><strong>(9) API</strong> - You will need to create an API that accepts requests from your web app and communicates with the database.<br /><strong>(10) Python</strong> - Write a bit of Python code in the Lambda function to achieve the API functionality.<br /><strong>(11) Tests</strong> - Include some tests for your Python code<br /><strong>(12) Infrastructure as Code</strong> - Define your database, API Gateway, and Lambda function in an AWS Serverless Application Model (SAM) template and deploy them</p>
<h2>Source Management/Deployment</h2>
<p>You're telling me that manually uploading <em>index.html</em> from my hard-drive to a bucket isn't website development best-practices? Rude.</p>
<p>This chunk actually involves creating two separate GitHub repositories: one to manage the actual content of the site; the other for the backend features developed above. Both will apparently be able to be automatically deployed to their respective parts of the AWS infrastructure, and to only do so if the corrects tests pass. Neat!</p>
<p>This covers goals:</p>
<p style="padding-left: 40px;"><strong>(13) Source Control</strong> - Create a GitHub repository for your backend code.<br /><strong>(14) CI/CD Back End</strong> - Set up GitHub actions such that when you push an update to your Serverless Application Model template or Python code, your tests get run, and, if passing, the changes get packaged and pushed to AWS.<br /><strong>(15) CI/CD Front End</strong> - Create a second GitHub repository for your frontend code; configure Github actions so that when you push new code, your website gets updated.</p>
<h2>Certification</h2>
<p>To have formally completed the Cloud Resume challenge, one needs to finish the required AWS certification. I suspect this will be the final thing I complete, as its sort of separate from the process of actually constructing the site.</p>
<p>This covers goal:</p>
<p style="padding-left: 40px;"><strong>(1) Certification</strong> - Your resume needs to have the AWS Cloud Practitioner Certification on it.</p>
<h1>Onward</h1>
<p>So where to go next? My impulse is to start with with the GitHub repositories, to make development easier and since I'm already fairly competent with git / GitHub as a workflow. Perhaps then I'll dig into HTTPS/DNS next, since hopefully those straightforward. That leaves what feels like the larger development fronts - actual content, and all the backend voodoo to implement the guest tracker. Which may actually be nice to bounce between, to keep the juices flowing when I stall on one. And those projects get far enough along their paths, it probably makes sense to start integrating the CI/CD pieces to make that process smoother. </p>
<p>That's the thought for now, but of course, no battle plan survives contact with the enemy. But it does all sound like fun.</p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3764</wp:post_id>
		<wp:post_date><![CDATA[2021-10-12 14:46:36]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-12 14:46:36]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-12 19:46:36]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Cloudfront for HTTPs]]></title>
		<link>https://jeff.glass/?p=3799</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3799</guid>
		<description></description>
		<content:encoded><![CDATA[<p>To a layman's eye, using AWS Cloudfront to enable HTTPs on a website seems like using a bazooka to blast a butterfly - massively overkill with far more power than necessary. But this challenge is meant to use a pocket-sized project to explore big powerful tools, so hey, why not?</p>
<p>It seems like getting started with Cloudfront is relatively straightforward for my tiny, simple usecase. They'll even transfer up to 50 GB / 2 million requests for free each month as part of the AWS free tier, which is awfully nice of them.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/cf1.png"><img class="aligncenter size-medium wp-image-3801" src="https://jeff.glass/wp-content/uploads/2021/10/cf1-300x256.png" alt="" width="300" height="256"></a></p>
<p>The Origin setup here seems straightforward, mostly selecting which resources want to get distributed out via Cloudfront's distribution network. I'm not quite sure what an Origin Access Identity is - it seems like possibly this is a way to allow content to be distributed to low-latency access areas without it being directly accessible by the public? Perhaps for content used by a site but not directly accessed? More for me to learn there.<a href="https://jeff.glass/wp-content/uploads/2021/10/origin.png"><img class="aligncenter wp-image-3803 size-full" src="https://jeff.glass/wp-content/uploads/2021/10/origin.png" alt="" width="789" height="726"></a></p>
<p>The default caching behaviors all seem plausible, but I'll opt to redirect http requests to https, so that all traffic is ultimately flowing over https.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/Viewer.png"><img class="aligncenter size-full wp-image-3805" src="https://jeff.glass/wp-content/uploads/2021/10/Viewer.png" alt="" width="401" height="279"></a></p>
<p>While I don't currently see a use for edge functions in my simple website, I did spend some time digging into just what the heck they are for my own learning.&nbsp;</p>
<p>I'll set the distribution to just US and Europe - no sense paying extra for the random scrape that might come in from overseas, it can take the slow route to Ohio.&nbsp;</p>
<p>It looks like there are options for custom SSL certificates if desired, but I'm just as happy to let Amazon handle that.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/enabled.png"><img class="aligncenter size-full wp-image-3807" src="https://jeff.glass/wp-content/uploads/2021/10/enabled.png" alt="" width="631" height="166"></a></p>

<!-- wp:paragraph -->
<p>And with that... it looks like my distribution is up and running, behind https... but is it really?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Going to https://.... gives me that little lock icon by the address bar that I need, but I can still access the http:// version unsecurely, which isn't ideal. Ah, perhaps I should try accessing the site via the new Cloudfront URL?</p>
<!-- /wp:paragraph -->

<!-- wp:paragraph -->
<p>Oh.</p>
<!-- /wp:paragraph -->

<!-- wp:image {"id":3809,"sizeSlug":"large","linkDestination":"none"} -->
<figure class="wp-block-image size-large"><img src="https://jeff.glass/wp-content/uploads/2021/10/deniedd-1024x183.png" alt="" class="wp-image-3809"/></figure>
<!-- /wp:image -->

<p>Well that's not great.</p>
<p>Thankfully, <a href="https://serverfault.com/a/776143">Stack Overflow comes to the rescue</a>. Turns out, I was using the <em>bucket</em> url instead of the <em>static website</em><em> </em>url as the origin for the Cloudfront distribution. Copying over the correct URL from the S3 bucket solved the issue, and I can now access my (VERY SMALL) website via the generated Cloudfront URL over HTTPS.</p>
<hr />
<p>I'm getting the feeling that comes with the start of lots of new domains: checking the boxes and accomplishing the bare minimum for this challenge seems like it won't be too hard, but the real learning will come from going deep and looking for actual understanding and nuance in all of these disparate services and processes. So, I'll need to find a balance. Sometimes it'll be good to plow through things and get placeholders up, so long as I come back to deepen my learning later.</p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3799</wp:post_id>
		<wp:post_date><![CDATA[2021-10-13 11:28:31]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-13 11:28:31]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-13 16:28:31]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Custom Domain]]></title>
		<link>https://jeff.glass/?p=3811</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3811</guid>
		<description></description>
		<content:encoded><![CDATA[<p>Since I already have a custom domain at <strong>jeff.glass </strong><em>(which is likely where you're reading this, if you're reading this around the time of posting</em>), I'd like to figure out how to point a subdomain of that site at my nescient Cloudfront/S3 static site. While I should probably also learn how to register a new domain through Amazon's Route 53 service, I think the end product will be cleaner.</p>
<p>I currently have the domain registered through NameCheap, and pointing to the DNS servers provided via my hosting at iWebFusion. The first thing I'll try is just using a CNAME to point <strong>resume.jeff.glass</strong> to the URL provided by my Cloudfront distribution.</p>
<p>But alas:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/403.png"><img class="aligncenter size-large wp-image-3813" src="https://jeff.glass/wp-content/uploads/2021/10/403-1024x434.png" alt="" width="720" height="305" /></a></p>
<p>Some sites suggest that fixing this could be as simple as modifying a setting in the Cloudfront distribution settings:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/alternate.png"><img class="aligncenter size-full wp-image-3814" src="https://jeff.glass/wp-content/uploads/2021/10/alternate.png" alt="" width="564" height="169" /></a></p>
<p>But:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/trusted-cert.png"><img class="aligncenter size-full wp-image-3815" src="https://jeff.glass/wp-content/uploads/2021/10/trusted-cert.png" alt="" width="825" height="204" /></a></p>
<p>The key resource here is the article <a href="https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-alternate-domain-names.html">Using Alternate Domains and HTTPS</a></p>
<p>But it turns out, requesting certificates from the Amazon Certificate Manager is pretty simple. Click request certificate and specify what domains it applies to (which allows for using wildcard characters!). To validate that you do indeed control the domain you're requesting the certificate for, the ACM uses what they call "DNS Validation," which involves adding a single CNAME record to your DNS Zone records. Essentially, they give you a long, random-looking "subdomain" URL to redirect to a long, random-looking amazon URL. Then, by querying whether your site actually performs the redirect as requested, they can verify that you were indeed able to modify the DNS behavior of the site and therefore are the owner of that domain.</p>
<p>One trick is that, to use the generated certificate with Cloudfront, the certificate must be requested in the us-east-1 region, which may not be the region your bucket is in. (Since my most recent bucket is in us-east-2, it seems like my certificates were defaulting there as well. Or perhaps its geolocating me? Unclear). In any case, the simplest thing to do is use the "request certificate" link on the Cloudfront distribution settings, which automatically launches the wizard to request a new certificate in us-east-1.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/request-certificate.png"><img class="aligncenter size-full wp-image-3819" src="https://jeff.glass/wp-content/uploads/2021/10/request-certificate.png" alt="" width="301" height="127" /></a></p>
<p>With that certificate selected and the settings saved, my new site is available at <a href="https://resume.jeff.glass/">https://resume.jeff.glass</a>! Not that it's terribly interesting at the time of writing, but now it's got a tasteful URL.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/helloworld-big.png"><img class="aligncenter size-full wp-image-3822" src="https://jeff.glass/wp-content/uploads/2021/10/helloworld-big.png" alt="" width="226" height="98" /></a></p>
<hr />
<p>Part of the reason I'm trying to document all the twists and turns of this process has to do with a later goal of the Cloud Resume Challenge. Namely, goal 11, which reads in full:</p>
<blockquote>
<h2 id="12-infrastructure-as-code" class="link_owner">12. Infrastructure as Code</h2>
<p>You should not be configuring your API resources – the DynamoDB table, the API Gateway, the Lambda function – manually, by clicking around in the AWS console. Instead, define them in an <a href="https://aws.amazon.com/serverless/sam/" target="_blank" rel="noopener">AWS Serverless Application Model (SAM) template</a> and deploy them using the AWS SAM CLI. This is called “<a href="https://www.hashicorp.com/resources/what-is-infrastructure-as-code/" target="_blank" rel="noopener">infrastructure as code</a>” or IaC. It saves you time in the long run.</p>
</blockquote>
<p>This will be an entirely new area of exploration for me, and from just a little examination will involve encapsulating chunks of the existing setup work in a format that it can be recreated automatically. Which parts of the setup? Unclear. It doesn't seem like HTTPS and Cloudfront setup are part of that, but I figure it can't hurt to write down the edge cases doing this by hand. I'd like to not trip over them again when I go to automate things. </p>
<p> </p>
<p> </p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3811</wp:post_id>
		<wp:post_date><![CDATA[2021-10-13 14:27:02]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-13 14:27:02]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-13 19:27:02]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - GitHub for Frontend]]></title>
		<link>https://jeff.glass/?p=3827</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3827</guid>
		<description></description>
		<content:encoded><![CDATA[<p>From an outside perspective, it seems that one of the goals of the Cloud Resume Challenge is to introduce new pracitioners to tools that will make their lives easier in developing future projects. Tools like GitHub processes, Continuous Integration/Continuous Development, infrastructure as code... all ways that seem apply grease to the sticky gears of development.</p>
<p>The piece that feels most approachable and useful to me at this early stage is the front end continuous development pipeline. The goal will be: any code that gets pushed to the main branch on a GitHub repository will be pushed to my S3 bucket to instantly become the new static site. It seems this will hopefully be quite straightforward using GitHub actions - let's try.</p>
<p>Starting a GitHub repository from the GitHub UI is very straightforward. Choose a name. Choose public vs. private. Generate some default files (or not). Hit create. Boom.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/frontend_github.png"><img class="aligncenter size-full wp-image-3829" src="https://jeff.glass/wp-content/uploads/2021/10/frontend_github.png" alt="" width="731" height="715" /></a></p>
<p>So that's the familiar part, now into the unknown.</p>
<p>Thankfully, Github has a very approachable page titled <a href="https://docs.github.com/en/actions/learn-github-actions/understanding-github-actions">Understanding GitHub Actions</a>, which provides a lot of context and vocabulary upfront for how to get started with Actions. And as usual, I suspect I'll be better off learning with dirty hands. So I'll start by initializing the minimum viable workflow and see what that looks like:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/minimumWorkflow.png"><img class="aligncenter size-full wp-image-3832" src="https://jeff.glass/wp-content/uploads/2021/10/minimumWorkflow.png" alt="" width="481" height="367" /></a></p>

<!-- wp:paragraph -->
<p>Well let's see what that gets us. It looks like it automatically populates a file called "blank.yml" in the ./github/workflows directory. The contents is:</p>
<!-- /wp:paragraph -->

<p>https://gist.github.com/JeffersGlass/4e6b1a042a4484b5e86fd99823dfce54</p>
<p>So, thanks to lots of generous comments, it seems we have a GitHub action to launches an Ubuntu instance, checks out the code in the repository, echoes a handful of messages to the logs, then shuts down. This should happen whenever a push or pull request to the main branch occurs. That should be pretty straightforward to test by making changes to the Readme.md file we created during repository setup.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/runAction.png"><img class="aligncenter  wp-image-3835" src="https://jeff.glass/wp-content/uploads/2021/10/runAction.png" alt="" width="542" height="470" /></a></p>
<p>Well that sure was easy. As expected - an instance was launched, the Repo's code was cloned, a handful of Echo commands XXXXXXXXXXX</p>
<p>So now, let's see if we can't figure out how to use an action to push content to our S3 bucket. For now, I think I'm going to set it up to just push <em>all</em> of the content in a specific folder to a bucket, but ultimately, I'm contemplating using a static site generator like <a href="https://gohugo.io/">Hugo</a> or <a href="https://jekyllrb.com/">Jekyll</a> to generate the site, and integrate that build process into a GitHub action of its own.</p>
<p>In several places, I've seen it suggested to create an User using the Identity Manager in AWS to generate access keys that will only allow GitHub actions the bare minimum functions necessary to complete their role. Spinning up a new role is easy in IAM, and I'm duplicating the minimum permissions in GitHub's <a href="https://docs.github.com/en/enterprise-server@3.0/admin/github-actions/enabling-github-actions-for-github-enterprise-server/enabling-github-actions-with-amazon-s3-storage">Enabling GitHub Actions with Amazon S3</a> article:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/policy.png"><img class="aligncenter  wp-image-3837" src="https://jeff.glass/wp-content/uploads/2021/10/policy.png" alt="" width="563" height="438" /></a></p>
<p>With that out of the way, and with my new role's Access Key and Secret Access Key written down, it's back over to GitHub to implement the action.</p>
<p>Like any good process, I'll start by stealing someone else's good idea. In this case, I'll use the <a href="https://github.com/marketplace/actions/s3-sync">S3 Sync Action</a> available in the GitHub marketplace.</p>
<p>XXXXXXXX</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/secrets.png"><img class="aligncenter size-full wp-image-3840" src="https://jeff.glass/wp-content/uploads/2021/10/secrets.png" alt="" width="359" height="291" /></a></p>
<p>XXXXXXX</p>
<p>https://gist.github.com/JeffersGlass/e80776b515e04a31146f21849cafa448</p>
<p>Error oh no!</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/actionError.png"><img class="aligncenter size-full wp-image-3842" src="https://jeff.glass/wp-content/uploads/2021/10/actionError.png" alt="" width="381" height="151" /></a></p>
<p>Typo in Workflow file (extra '-')</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/S3-Sync-Error.png"><img class="aligncenter size-full wp-image-3843" src="https://jeff.glass/wp-content/uploads/2021/10/S3-Sync-Error.png" alt="" width="623" height="563" /></a></p>
<p>Error in permissions - needed to specify all objects in bucket are valid, as well as adding a couple of additional permissions per <a href="https://stackoverflow.com/a/36272287">this StackOverflow post</a>.</p>
<p>Curiously, accessing directly via the Index.html object URL shows me one thing, but going to resume.jeff.glass shows the original content:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/TwoDifferentResults.png"><img class="aligncenter size-full wp-image-3844" src="https://jeff.glass/wp-content/uploads/2021/10/TwoDifferentResults.png" alt="" width="650" height="370" /></a></p>
<p>Ahhh, of course - directly accessing the resource shows the contents of the bucket, but resume.jeff.glass is pointing to the Cloudflare distribution I created, which still has cached content. So I need to invalidate the Cloudflare cache as part of this workflow as well, so that users will always see the most recent content when requested.</p>
<p>Of course, that's something I can do manually in the Cloudflare console:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/createinvalidation.png"><img class="aligncenter  wp-image-3846" src="https://jeff.glass/wp-content/uploads/2021/10/createinvalidation.png" alt="" width="640" height="298" /></a></p>
<p>And now everything looks right:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/successfulIinvalid.png"><img class="aligncenter size-full wp-image-3847" src="https://jeff.glass/wp-content/uploads/2021/10/successfulIinvalid.png" alt="" width="515" height="374" /></a></p>
<p>But of course, the whole point is to automate this step. Let's see if we can work out how to add this functionality to the workflow we already have. Indeed, it looks like there's an <a href="https://github.com/jakejarvis/s3-sync-action/pull/32">outstanding pull request</a> with exactly this functionality, by InscribeAI and Jake Garth. So really, what I need to figure out is the proper syntax for using this version of the action, as opposed to the original version.</p>
<p>Add the CF Distribution ID as a repository secret</p>
<p>Change the action to point at InscribeAI version via some textual changes - just changing the author's name and adding the necessary environment key and secret.</p>
<p>This seems to have run successfully - let's make one more change to the Index.html file and see if our changes happen in when viewed from the Cloudfront Distribution:</p>
<p>Well, sadly no, no Cloudfront distribution.</p>
<p> </p>
<p>Well, looks like it's time to fork this GitHub repo and see about forming our own action. (There are surely other actions on the GitHub marketplace, but this seems like I challenge I could learn from.)</p>
<p>First things first, let's fork the repo that we've been using so far to grab our own version.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/forked.jpg"><img class="aligncenter size-full wp-image-3851" src="https://jeff.glass/wp-content/uploads/2021/10/forked.jpg" alt="" width="618" height="139" /></a>And I'll use the Git GUI program to grab a copy of the code from the Repo to work with locally. </p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/vscode.jpg"><img class="aligncenter size-full wp-image-3852" src="https://jeff.glass/wp-content/uploads/2021/10/vscode.jpg" alt="" width="444" height="261" /></a></p>
<p>Just to make sure that I am indeed running the action from my local repository clone of the action (instead of the original jakejarvis version because there's something I might not understand), I'll add an output to the action.yml file to get a string output from the action. This is all per the <a href="https://docs.github.com/en/actions/creating-actions/metadata-syntax-for-github-actions">GitHub Actions Metadata Syntax page</a>.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/firstChange.jpg"><img class="aligncenter size-full wp-image-3853" src="https://jeff.glass/wp-content/uploads/2021/10/firstChange.jpg" alt="" width="568" height="230" /></a></p>
<p>I'll also add a few echo statements to the entrypoint.sh file that runs in the Docker container, to hopefully validate that this shell script is running and whether it's entering the cloudfront invalidation step. Basically, I want to know if my setup (workflow, actions, and script) isn't properly creating a Cloudfront invalidation, or whether it's not running at all.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/cf-echos.jpg"><img class="aligncenter size-full wp-image-3854" src="https://jeff.glass/wp-content/uploads/2021/10/cf-echos.jpg" alt="" width="538" height="176" /></a></p>
<p>Hmm, the results of those echo commands don't appear in our output. And neither does the output of the aws cloudfront command that the shell script is using. Which, according to the <a href="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-invalidation.html">AWS CLI Reference,</a> should be pretty verbose. I'm also not seeing the output from the lone echo command I stuck at the top of the shell script. Maybe this script isn't actually running?</p>
<p>Let's add a RUN echo command to the Dockerfile in our action to see if we can get that output.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/noecho.jpg"><img class="aligncenter  wp-image-3855" src="https://jeff.glass/wp-content/uploads/2021/10/noecho.jpg" alt="" width="645" height="202" /></a></p>
<p>And no, it doesn't seem like we can - we should see that echo command right here between the Pip invocation and adding the entrypoint. So whatever action I'm running, it doesn't seem to be the one I'm modifying in this dockerfile. Let's se if we can't figure out why.</p>
<p>One thing that stands out is that I'm targeting a specific release version of this action - namely, 0.5.1 just like the action I forked. Perhaps I need to create a new release with these changes, and then target that? I'll use the GitHub UI to create a 0.5.1.1 release and see if I can target that successfully and see the results of my echo commands.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/invalidcfcensored.png"><img class="aligncenter  wp-image-3857" src="https://jeff.glass/wp-content/uploads/2021/10/invalidcfcensored-1024x340.png" alt="" width="678" height="225" /></a></p>
<p>Aha! There's the echos, and a new error to track down! So I was committing new code to the repo, but because the action was referencing a previous release of the action, none of it made any difference. </p>
<p>It seems the action specification allows for targeting a branch of the action, rather than a specific release, which would make development more straightforward for sure. Just for yucks, let's see what happens when I remove any specifier and just use <strong>uses:JeffersGlass/s3-sync-action:</strong></p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/errortag.png"><img class="aligncenter  wp-image-3858" src="https://jeff.glass/wp-content/uploads/2021/10/errortag.png" alt="" width="654" height="148" /></a></p>
<p>Ahh, very broken. But setting it to target <strong>JeffersGlass/s3-sync-action@master</strong> works as intended. Well, the error with the Cloudfront distribution is the same, but at least I can now see changes to the action as soon as I commit them, rather than needing to create another release.</p>
<p>This seems to be a permissions issue, given the language "... is not authorized to perform cloudfront:CreateInvalidation on resource." Which makes sense - I'll go back into the IAM policy setup and add a handful of Cloudfront-related permissions to the policy that the GitHub action is using, and rerun the action.</p>
<p><img class="aligncenter  wp-image-3859" src="https://jeff.glass/wp-content/uploads/2021/10/successfulCF.png" alt="" width="546" height="208" /></p>
<p>That looks a much better result! And the invalidation appears in the Cloudfront distribution's Invalidations tab as well. As a final test, let's make some further small changes to the index.html file, push them, and see if they'll update/invalidate the CF distribution in real time.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/pushedsuccess.png"><img class="aligncenter  wp-image-3861" src="https://jeff.glass/wp-content/uploads/2021/10/pushedsuccess.png" alt="" width="621" height="297" /></a></p>
<p>Success! Now, any time a change is pushed to the main branch in the repo, the GitHub Action will push the contents of the public folder to the S3 bucket, and invalidate the associated CloudFront distribution so the results appear for all viewers in realtime. And that was our goal, after all.</p>
<p>Like I mentioned, I ultimately would be interested in using a simple static site generator to create the formatting for the site, rather than uploading raw html/css/js. And that will require some additional CD actions, as well as modifying the target of this push-to-s3 action. But I've solved a fundamental component of a productive workflow, and I'm thrilled.</p>
<p> </p>
<p> </p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3827</wp:post_id>
		<wp:post_date><![CDATA[2021-10-17 13:22:52]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-17 13:22:52]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-17 18:22:52]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Visitor Counted with JS, Lambda, DynamoDB, and SAM]]></title>
		<link>https://jeff.glass/?p=3864</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3864</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've been spending a lot of shower-thoughts on what the actual content of my resume page should be. A single-page, hand-written HTML/CSS page would probably be fastest, but I'd also like to explore using a static-site generator. But then, do I port my whole site/blog over to that static-site format? And also, what should the actual layout/priority of the resume page be? While I stew on such things, I'm going to continue implementing  the functions of the Cloud Resume Challenge that implement an on-site visitor counter.</p>
<hr />
<h1>DynamoDB</h1>
<p>Starting off in the <a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/Introduction.html">DynamoDB Documentation</a>, it seems like our database can, for this use case, be really simple. Possibly just a single table with a single Item consisting of a scalar value (number) that we'll read, increment, and update. Possibly this is oversimplifying things, but let's jump in assuming things will be simple. We can see how wrong we are later.</p>
<p>Assuming at some point I might want to track some other kinds of stats for this site, I'll create a table called "cloud-resume-stats" with a partition key called "stats" from the DynamoDB UI. At first, the only "stat" will be the visitor count, but perhaps there will be other things to track later. Or not.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/cloudstats.png"><img class="aligncenter  wp-image-3868" src="https://jeff.glass/wp-content/uploads/2021/10/cloudstats.png" alt="" width="457" height="396" /></a></p>
<p>As recommended in the Cloud Resume Challenge, I'll select to use Dynamic Pricing - since I imagine very few reads/writes overall, this should end up costing me close to nothing. </p>
<p>With the table setup, I'll add a single Item with the stat "view-count" and starting at quantity zero. This for now will be the only item in our database, and will track our view-count.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/attribute.png"><img class="aligncenter  wp-image-3869" src="https://jeff.glass/wp-content/uploads/2021/10/attribute-1024x440.png" alt="" width="620" height="266" /></a></p>
<p>Well, I guess that's the table set up, for now. Now let's look at modifying the data in that table with a Lambda serverless function.</p>
<hr />
<h1>Lambda Function</h1>
<p>Going into Lambda function UI in the AWS console and clicking 'Create Function' gives us a variety of selections and default options. I'll create a new function with a Python 3.9 runtime (since I'm more comfortable in Python than in Node, Ruby, or Go for example). I'll also take advantage of the option to create a new IAM role based on templates to make a new role with the "Simple Microservice Permissions" policy for lambdas; I'll need to inspect those permissions a little closely later on.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/newLambda.png"><img class="aligncenter  wp-image-3870" src="https://jeff.glass/wp-content/uploads/2021/10/newLambda-1024x728.png" alt="" width="577" height="410" /></a></p>
<p>From the little I'd looked into using AWS Lambdas before, I don't recall the nifty visual input/output editor that pops up here - neat! Let's see what our options are for triggers.</p>
<p>It looks like one of the options for triggers is via the AWS API Gateway, which is handy, since that's another piece of the Cloud Resume Challenge. And when selected, an option appears to select an existing API... or create a new one right here. Well that's handy.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/createAPI.png"><img class="aligncenter  wp-image-3871" src="https://jeff.glass/wp-content/uploads/2021/10/createAPI.png" alt="" width="625" height="308" /></a></p>
<p>As for what the difference is between an HTTP API and a REST API in this context, I'll have to consult Amazon's <a href="https://docs.aws.amazon.com/lambda/latest/dg/services-apigateway.html#services-apigateway-apitypes">Choosing an API Type</a> documentation, and the related <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html">Choosing Between HTTP APIs and REST APIs</a> document. Given that both options appear to allow requests from public HTTP endpoints, and the HTTP API is described as "lightweight" (as opposed to the REST API's "feature rich"), I think that's where I'll start.</p>
<p>The next question is "Security," which sounds like an important... so what the heck is a JWT authorizer??</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/jwt.png"><img class="aligncenter  wp-image-3872" src="https://jeff.glass/wp-content/uploads/2021/10/jwt.png" alt="" width="625" height="293" /></a></p>
<p>Another Amazon guide to the rescue: <a href="https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-jwt-authorizer.html">Controlling Access to HTTP APIs with JWT Authorizers</a>. It seems that JWT is JSON Web Token, and is part of a method of validating requests to API's using OATH or OpenID connect. Since biting off a full mouthful of OATH is probably more than I should try to tackle at this stage, I'll leave the API open for now, and look into whether rate-limiting requests to it/the Lambda function/the database is an option.</p>
<p>Finally, I'll enable Cross Origin Resource Sharing to allow access to the API from outside the domain of the lambda... I think. I'm not entirely sure if this will be necessary, since I'll be accessing this lambda from within my own site in the S3 bucket I own. But I'll turn it on for now.</p>
<p>I now have a long, auto-generated endpoint name for the API associated with this Lambda - I'll want to see later about reconfiguring that to be somewhat more readable, but all in good time. Let's get back to writing that Lambda function.</p>
<p>What I'll want is to be able to make a request to the API endpoint which accesses the current visitor count stored in our database, increments it by one, stores that value back in the database, and returns the new value to the frontend. There's some handy starter code over in some <a href="https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/dynamodb.html#DynamoDB.Client.get_item">DynamoDB documentation</a>; let's just start by seeing if we can retrieve the value of the visitor count from our table:</p>
<p>https://gist.github.com/JeffersGlass/291dc45533b08a53d7e1a7ff9e858cad</p>
<p>And we can see in the response results that yes, indeed, we're pulling the results out of our database as expected:</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/response.png"><img class="aligncenter size-full wp-image-3875" src="https://jeff.glass/wp-content/uploads/2021/10/response.png" alt="" width="715" height="490" /></a></p>
<p>(Another handy resource was this <a href="https://gist.github.com/gene1wood/4a052f39490fae00e0c3">gist to list all available Python libraries in the default Python environment</a>).</p>
<p>And now, via the magic of the the AWS API's ADD action, we can write the increment action as follows, returning the resulting new viewpoint to the API:</p>
<p>https://gist.github.com/JeffersGlass/5af18f0f3927056abbca1e714afead71</p>
<p>Alright, we can call this API endpoint and get an incremented and update viewcount back. That's good. But that URL sure is ugly - it'd be nice if I could target something like <strong>api.jeff.glass/incrementViewcount.</strong> Let's see if that's possible. Apparently, this requires a certificate for that domain in the Amazon Certificate Manager. I had hoped I could use the certificate I used for Cloudfront certification, but since that's in the us-east-1 region and the lambda is in us-east-2, it looks like I'll need another certificate. No worries though; it's easy enough to do that via the prompt in the API Gateway UI.</p>
<p>Currently, any request type to the API endpoint will return this incremented information - for cleanliness, I'll make it so only a GET request actually causes this to happen. Any other request type returns a 403 response code via another (very simple) Lambda.</p>
<p><a href="https://jeff.glass/wp-content/uploads/2021/10/twolambda.png"><img class="aligncenter size-full wp-image-3878" src="https://jeff.glass/wp-content/uploads/2021/10/twolambda.png" alt="" width="468" height="382" /></a></p>
<p>I've also redirected api.jeff.glass to this API endpoint to hopefully make things cleaner, using the Custom Domain Names section of the UI and a new CNAME entry in my DNS manager pointing to the API ARN. And while I seem to able to query the enpoint via that URL, all I'm getting is Status 500 Internal Server Errors. <a href="https://aws.amazon.com/premiumsupport/knowledge-center/api-gateway-lambda-stage-variable-500/">This AWS help article</a> implies that's an issue with permissions, but I'd have thought (and the UI seems to confirm) that by configuring the API Gateway when I create the Lambda functions themselves, the appropriate permissions/roles should be automatically created. When I go to check the logs, it seems I'll need to have a Cloudwatch resource of some kind as a destination for them. So, over to Cloudwatch it is.</p>
<p>Creating a new Log Group is straightforward, with all the default options. Feeding that ARN into the API Gateway's settings allows logs to start popping up whenever I hit the API endpoint. And, as expected, I'm seeing 500-status errors in the logs as well:</p>
<p>https://gist.github.com/JeffersGlass/0185a8c3e0b4505097c21d6d16503a6c</p>
<p>At least I can confirm that the API Gateway is seeing a GET request as expected. Ah, and if I make a request to <strong>https://api.jeff.glass/incrementViewcount, </strong>i get the incremented and returned view count as expected. And if I configure the /error URL to trigger the seperate error lambda (which just returns code 403), I can trigger that as well. But clearly there's something I don't understand about the way the /ANY route acts to route to integrations. When I create a route like ANY /{greedy}, the Cloudwatch logs do show the correct route being selected. But I still get a code 500 internal server error, as if the Lambda itself isn't running. On the other hand, this additional error handling Lambda is overkill, so I can just bin it. I'll make a mental post-it note to deepen my understanding of the ANY and {greedy} functionality though.</p>
<p> </p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3864</wp:post_id>
		<wp:post_date><![CDATA[2021-10-17 21:42:20]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-17 21:42:20]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-18 02:42:20]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Content with HTML, CSS]]></title>
		<link>https://jeff.glass/?p=3882</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3882</guid>
		<description></description>
		<content:encoded><![CDATA[XXXXXX

It seems like Tailwind CSS is most easily managed via npm (the Node Package Manager), which the <a href="https://docs.npmjs.com/downloading-and-installing-node-js-and-npm">npm resources recommend</a> installing via a node version manager. I arbitrarily chose <a href="https://github.com/coreybutler/nvm-windows">nvm-windows</a> and installed it using its installer. While it didn't work via Windows Powershell immediately, after restarting powershell the <em>nvm</em> command worked fine.

<a href="https://jeff.glass/wp-content/uploads/2021/10/npmcommand.png"><img class="aligncenter size-full wp-image-3884" src="https://jeff.glass/wp-content/uploads/2021/10/npmcommand.png" alt="" width="841" height="406" /></a>

Then, by running nvm install latest, I had node.js 16.11.1 (64-bit) installed on my machine.

Based on some things I've read, I'll 'cd' into a new folder in powershell, and then run the <em>npm init</em><strong> </strong>command to generate a basic <em>package.json</em> file to hold some settings related to this project. The questions that this command prompts  all seem fairly straightforward, though I don't know what to include for the 'test' command yet.

<a href="https://jeff.glass/wp-content/uploads/2021/10/npminit.png"><img class="aligncenter size-full wp-image-3885" src="https://jeff.glass/wp-content/uploads/2021/10/npminit.png" alt="" width="495" height="356" /></a>

Next, I'll try installing the tailwind package using the command recommended on the tailwind website:
<p class="language-shell"><code class="language-shell"><span class="token function">npm</span> <span class="token function">install</span> -D tailwindcss@latest postcss@latest autoprefixer@latest</code></p>
Which downloads a whole bunch of packages into the node_modules folder and creates a package-lock.json file. The latter appears to track all of the included/required node modules, like an env file say. From here, following along with <a href="https://www.youtube.com/watch?v=UBOj6rqRUME">a pretty speedy crash course video from Traversy Media,</a> I'll create a couple of files. First is /src/style.css, which gets three lines as specified by the tailwind documentation:
<pre class="language-css"><code class="language-css"><span class="token atrule"><span class="token rule">@tailwind</span> base<span class="token punctuation">;</span></span>
<span class="token atrule"><span class="token rule">@tailwind</span> components<span class="token punctuation">;</span></span>
<span class="token atrule"><span class="token rule">@tailwind</span> utilities<span class="token punctuation">;</span></span></code></pre>
Also, empty files /src/index.html and /public/style.css, to be populated by our site html and tailwind's output css, respectively. Finally, I'll change the test script in the package.json file to <em><span style="color: initial;">"build:css": "tailwind build src/style.css -o public/style.css" </span></em><span style="color: initial;">and from the root folder run <em>npm run build:css</em>.</span>

After about 6 seconds, the process completes, and wow is there a lot in our output style.css file now! Over 180K lines of css! Well that's intense. Presumably we'll be eliminating a lot of this as we package the site up for publication.

Over in the empty index.html file, typing ! and hitting enter gives us a very basic HTML boilerplate page, to which I'll add a reference to the (output) stylesheet and just a little bit of content to play with for now.

<a href="https://jeff.glass/wp-content/uploads/2021/10/very-basic-page.png"><img class="aligncenter size-full wp-image-3888" src="https://jeff.glass/wp-content/uploads/2021/10/very-basic-page.png" alt="" width="643" height="283" /></a>
<p class="language-shell">After installing the Live Server VS Code extension, I can right-click anywhere in this file and immediately open it in a Chrome tab for local viewing. And now we have a little playground for messing around with tailwind!</p>
The first experiments are never pretty, but that's the point really. They're educational.

<a href="https://jeff.glass/wp-content/uploads/2021/10/firstailwinsc.png"><img class="aligncenter wp-image-3896 size-full" src="https://jeff.glass/wp-content/uploads/2021/10/firstailwinsc.png" alt="" width="510" height="671" /></a>

XXXX Add version of Tailwind site here??? XXXX

I experimented with tailwind's @apply directive, which allows for the creation of custom subsets of CSS that you might want to commonly re-use. For a start, I tried creating a shortcut to a main site color and a secondary site color.

<a href="https://jeff.glass/wp-content/uploads/2021/10/primarysecondary.png"><img class="aligncenter size-full wp-image-3897" src="https://jeff.glass/wp-content/uploads/2021/10/primarysecondary.png" alt="" width="335" height="160" /></a>

And futhermore, playing around with styling buttons in a navbar in the same way. But since this was taking ~6 seconds to regenerate the output CSS file each time, this was not at all a fast way to work.

Thankfully, Tailwind has a new JIT mode that generates only the necessary styles on demand, reducing the build time to ~150ms. This is as simple as adding mode: 'jit' to the tailwind.config.js file, and making sure the 'purge' selection is correct.

After the initial flexbox exploration, I settled in for awhile playing around with navbar options. I took some inspiration from both <a href="https://v1.tailwindcss.com/components/navigation">tailwinds' own Navigation Bar suggestions</a> and <a href="https://daisyui.com/">DaisyUI's Components</a>. For the sake of learning, I didn't use DaisyUI at this stage, but I think I may integrate their components when I start to build the actual resume page.

xxxxxxxxxxxx <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Aligning_Items_in_a_Flex_Container">Flexbox Alignment</a>

<a href="https://stackoverflow.com/questions/796087/make-a-div-into-a-link">This Stack Overflow article on making a whole div clickable</a> - noticed it when working with the YouTube and LinkedIn buttons, but extended it to all of the header.

<a href="https://github.com/ionic-team/ionicons">Ionicon Icons</a> <a href="https://heroicons.com/">Hero Icons</a>

<a href="https://jeff.glass/wp-content/uploads/2021/10/3menus.png"><img class="aligncenter size-full wp-image-3904" src="https://jeff.glass/wp-content/uploads/2021/10/3menus.png" alt="" width="744" height="228" /></a>

<hr />

After homing in on the Green menubar as one I liked best, I separated it out into a new HTML file to get to work prototyping some actual content for the page. I created my four major sections (Introduction, Projects, CV, and Skills), each with a header with an ID and a &lt;p&gt; tag for the text. I fleshed out each section with a little Lorem Ipsum text, and arbitrarily decided that I wanted to start with the projects section.

I spent quite a bit of time mucking around with the Flexbox layout before deciding to simplify things by moving to a Grid layout. I've got 4 "cards," each with an image, title, and blurb, that grow slightly when moused-over, and a fifth card that will link to a larger projects page. I do think I'll need to go back to something like Flexbox to make the site more responsive on smaller screens, but I'll cross that bridge down the road. Ideally, these cards would be auto-populated using something like Hugo, but I think fleshing this entry-page out first would be better.

<a href="https://jeff.glass/wp-content/uploads/2021/10/projects.png"><img class="aligncenter size-large wp-image-3911" src="https://jeff.glass/wp-content/uploads/2021/10/projects-1024x460.png" alt="" width="720" height="323" /></a>

I also ran into an issue with the anchor links in the navbar. Because the navbar is held in a fixed position, using an anchor link to, say the h1 tag with id 'projects', clicking the #projects link sends that header to the top of the page... which is behind the navbar! Thankfully, <a href="https://stackoverflow.com/questions/10732690/offsetting-an-html-anchor-to-adjust-for-fixed-header">this stack overflow post</a> has a clever solution that uses CSS's :before selector to position the anchor links lower on the page by a set offset. I made a new tailwind component for this css, applied to to all my page headers, and voila, problem solved.

Of course, none of those cards actually link anywhere yet. But by using a full-size &lt;span&gt; element that fills the entire card at a higher z-value, each box is clickable as a link. This is not a particularly accessible solution, something I'll have to address at some point.

<hr />

Next, I roughed in the skills section, using some basic indenting and some categories that I'll probably change later. One VSCode plugin that I found very useful at this point is the <a href="https://github.com/Tyriar/vscode-lorem-ipsum">Lorem Ipsum plugin by Daniel Imms</a>. Particularly because it generates different text at each multi-cursor position, it was simple to add a bunch of placeholder text for each of my skills subsections at this point.

<hr />

At some point in this mucking around, I got interested in how one strips away some of that giant 180K-line mess of CSS to use just what's actually on the site. Following tailwind's own <a href="https://tailwindcss.com/docs/optimizing-for-production">Optimizing for Production</a> post, I first ran <strong>npx tailwindcss init</strong> to create a tailwind.config.js file. Then, within that file, I added the path './src/**/*.html' to my purge list. From my upstanding, this means that any class referenced in any html file in the public folder will be preserved, and all the others will be purged when building for production.

It seems there are many ways to manipulate the NODE_ENV variable to switch between production and non-production stages, but one can't do it within the scripts in package.json, since the environment variable needs to be set before npm runs. So, to build the css for production, i'll now run <strong><code class="hljs language-javascript"><span class="hljs-attr">$env</span>:<span class="hljs-variable constant_">NODE_ENV</span>=<span class="hljs-string">"production"; npm run build:css</span></code> </strong>on windows, or . Setting the environment variable back to something else (like "dev") and re-running the build command restores our burgeoning 180K lines of css.
<div>
<pre><a href="https://jeff.glass/wp-content/uploads/2021/10/sofewlines.png"><img class="aligncenter size-full wp-image-3891" src="https://jeff.glass/wp-content/uploads/2021/10/sofewlines.png" alt="" width="576" height="404" /></a></pre>
Once I'm a little happier with the design (which I'm just playing around with using VC Code's Live Server extension) I'll need to adjust my CD pipeline on GitHub so that, when I push a new HTML file, tailwinds auotmatically rebuilds the css file for production and pushes it to S3. But one thing at a time.

<em>(It's unclear to me whether the above is actually best practices - probably not with a public repository, though I could see myself using a private repo to store the contents of a static site in future.)</em>

</div>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3882</wp:post_id>
		<wp:post_date><![CDATA[2021-10-26 11:33:45]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-10-26 11:33:45]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-10-26 16:33:45]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[_oembed_f6bf84d46e213e5e6483f8950ea66f81]]></wp:meta_key>
		<wp:meta_value><![CDATA[{{unknown}}]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Hugo]]></title>
		<link>https://jeff.glass/?p=3917</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3917</guid>
		<description></description>
		<content:encoded><![CDATA[Since I've been using npm for the other parts of this project, I wanted to see if there was a straightforward way to install the Hugo static site generator with npm. The <a href="https://gohugo.io/getting-started/quick-start/">official install instructions</a> don't mention it, but thankfully <a href="https://www.blogtrack.io/blog/powerful-blog-setup-with-hugo-and-npm/">this post from Blocktrack.io does</a>. It seems it's as simply as the usual <em>npm init</em>, walking through the options, then running

<code class="language-bash" data-lang="bash">npm install --save-dev hugo-bin</code>

Running npx hugo version lets us see that hugo v0.88.1 was indeed installed. Apparently, since we haven't installed the hugo binaries directly, we'll use the "npx" command to make npm invoke the hugo binary we installed.

Now, we run <strong>npx hugo new site . --force </strong>to generate the starting hugo sites.

The blocktrack.io module suggests initializing git and using it to download a theme at this point, but since I'm interested in building one up from scratch, I'll just initialize git here with <strong>git init.</strong> I'll add a .gitignore file to exclude the /node_modules path, and make an initial commit to the repo.

Following along with our Blocktrack friends once more, I'll add a few scripts to the package.json file that will allow us to easily build, serve, and clean up the Hugo site. Of course, building and serving the site now gives us an empty page, since we have no content yet, and also shows a warning in the terminal where we started the server: "found no layout file for "HTML" for kind "home." Makes sense.

So let's create a homepage of some kind. Following along with <a href="https://www.youtube.com/watch?v=ut1xtRZ1QOA">this video from Giraffe Academy,</a> I'll create an index.html file in at /layouts/index.html.

<a href="https://jeff.glass/wp-content/uploads/2021/10/hp2.png"><img class="aligncenter wp-image-3921 size-full" src="https://jeff.glass/wp-content/uploads/2021/10/hp2.png" alt="" width="502" height="269" /></a>

Well that's better! We have a very small, very bad website on localhost again!

I'll go ahead and replace that with some boilerplate via VSCode, and we'll start figuring out this hugo thing from the beginning. I'm going to create this as a whole separate site, then work out how to merge what I've learned here with my oh-so-beautiful site I was creating using Tailwind.

After repopulating the index.html page with some boilerplate HTML, let's see if we can't get something like the projects pages working.

<a href="https://jeff.glass/wp-content/uploads/2021/10/boilerplate.png"><img class="aligncenter size-full wp-image-3923" src="https://jeff.glass/wp-content/uploads/2021/10/boilerplate.png" alt="" width="540" height="391" /></a>

Let's try the loraDMX project first. If I run <strong>npx hugo new .\content\projects\loraDMX.md</strong>, I get a new file with just a little bit of what hugo calls "Frontmatter" - metadata about the content of the page. Next, I'll create a projects-page layout at /layouts/projects/single.html with very simply syntax copied from this <a href="https://cloudcannon.com/community/learn/hugo-tutorial/layouts-in-hugo/#reusable-layouts-block-and-define">cloudcannon tutorial</a>:
<div>
<pre>&lt;main&gt;
    {{ block "main" .}}
    {{end}}
&lt;/main&gt;</pre>
</div>
<div></div>
<div>and I'll fill in my loraDMX.md page with:</div>
<pre><code class="language-html" data-lang="html"><span class="c">&lt;!-- Using a block in a child page --&gt;</span>
	{{ define "main" }}
	<span class="nt">&lt;h1&gt;</span>This will be inserted into the block<span class="nt">&lt;/h1&gt;</span>
	{{ end }} </code></pre>
Now if I run npm run hugo:build... hmmm, it seems to be broken. But what quick google search recommends adding templates to _default.... hmmm, no good either.

Let's go about this another way - let's download a simple hugo theme and see what we can learn by messing with it. I'll delete my content and template for now, and follow the steps on the <a href="https://themes.gohugo.io/themes/hugo-theme-codex/#codex">Codex hugo theme</a> to get it installed. I'll also recreate a very, very basic index.md file as recommending in those install steps, so that something shows up.

<a href="https://jeff.glass/wp-content/uploads/2021/10/codex1.png"><img class="aligncenter size-full wp-image-3927" src="https://jeff.glass/wp-content/uploads/2021/10/codex1.png" alt="" width="395" height="339" /></a>

Well that's slightly better, there is indeed a webpage here now. Let's see what's going on in these theme files, and where this content is actually coming from.

Under /themes/hugo-theme-codex, it looks like we have index.html and 404.html files. Adding text to the index.html layout adds it to the homepage, so it seems that's what we're looking at. There's also this hilarious comment to give us a clue where to add our content:

<a href="https://jeff.glass/wp-content/uploads/2021/10/replace.png"><img class="aligncenter size-full wp-image-3928" src="https://jeff.glass/wp-content/uploads/2021/10/replace.png" alt="" width="358" height="204" /></a>

We can go directly to localhost:1313/404.html to view what seems to be the 404 page defined in themes/hugo-theme-codex/layouts/404.html, which is good. But it looks like both index.html and 404.html aren't full pages, but rather pieces of content, which define {{ styles }} and {{ main }} blocks to populate into a template somewhere else. Let's see if we can't find those.

The (only?) file with an actual html layout lives in /layouts/_default/baseof.html. That is, it starts with &lt;!DOCTYPE html&gt;, has body and head tags, and seems to be including other page elements within itself. The other members of /layouts/_default (list.hml and single.html) seem to be layouts for single and list page contents, without being full pages in their own right. From what I can glean, from this and the hugo documentation, these are the styles for basic single and list pages, the two fundamental types of content in hugo.

I'm feeling pretty good about trying again to roll my own theme here, but while I've got it installed, let's look at the remaining folders under /layouts/ in the Codex theme. The partials folder contains a bunch of small html/Go pages, while look like they're meant to be pulled into other pages. Things like nav.html, social-icons.html, burger.html, etc. Some are pure HTML, others have hugo-style (Go?) scripts to pull in further details or enumerate pages, I think. Finally, the /layouts/taxonomy folder has a single file, tag.html, while seems like it would list all the pages and present them? Unclear how this is working currently.

Now, let's delete this theme and get back to writing our own. In the layouts folder, I'll create a new _defaults folder, and within that, baseof.html (with boilerplate) and single.html and list.html (both empty for now). The content I've created in these basic pages isn't visible yet, and interestingly, sometimes I'm seeing build warnings about "found no layout file for kind taxonomy" and sometimes I'm not. I notice the example site from the theme calls its homepage content "_index.md"... but changing that in my site makes no difference...

Aha! Some sleuthing through the Hugo Forums indicates that not only do I need to <em>build</em> the draft pages (the index is a draft, currently), but also to <em>serve</em> them. By running, in my case, npx hugo server -D, I can now see some index.html content! Woohoo!

<a href="https://jeff.glass/wp-content/uploads/2021/10/indexx.png"><img class="aligncenter size-full wp-image-3932" src="https://jeff.glass/wp-content/uploads/2021/10/indexx.png" alt="" width="407" height="217" /></a>

<hr />

Shortly after the above, I lost patience, and decided to see if there was a faster way to get started. I wiped everything, and went back to the quickstart guide, and installed the <a href="https://github.com/Vimux/blank">"blank" theme from Vimux</a>. Building and serving this locally worked as expected.

OK. So let's start from <em>where I think is the beginniing</em>, with the baseof.html layout. I can see, in the &lt;head&gt; section, the <span style="color: initial;">&lt;title&gt;{{ .Title }}&lt;/title&gt; inclusion. Changing the title value in config.toml does indeed change the value of the page title, so at long last, I'm able to make little changes. Somewhere. To something. Similarly, adding &lt;p&gt;Hello World&lt;/p&gt; to the body makes it show up in the page. And adding in some plain content to index.html makes it show up on this index page as well. Ok.</span>

So, now to try to add some CONTENT! Following strictly along with the quickstart, I'll run <strong>npx hugo new pots/my-first-post.md</strong>, and create some basic content in there. Re-serving the page:

<a href="https://jeff.glass/wp-content/uploads/2021/10/firstpost.png"><img class="aligncenter size-full wp-image-3936" src="https://jeff.glass/wp-content/uploads/2021/10/firstpost.png" alt="" width="313" height="346" /></a>

Let's try to understand what's going on here and where each of these pieces comes from
<ul>
 	<li>The link at the top is created in the <em>header.html </em>partial, which auto-generates the URL and text based on the config file. This header is included in the <em>baseof.html</em> template.</li>
 	<li>The Hello, world text is hardcoded into the baseof.html template itself</li>
 	<li>The words "This content is in index.html" is hardcoded into the index.html template, and included as the "main" block of the baseof.html template in this case</li>
 	<li>The index.html also includes the $paginator method... which I don't entirely understand yet.
<ul>
 	<li>I'm also realizing I don't entirely understand the difference between a black include and a partial. It seems like the blocks are pieces of relevant content included from content pages, whereas partials are separate pieces of HTML etc. included from the separate partials folder?</li>
</ul>
</li>
 	<li>The "LATEST POST" section is actually from the sidebar.html partial, which seems to list the last 5 latest posts using the {{ range }} function, which I'll need to learn more about</li>
 	<li>Finally, the footer partial is responsible for the copyright indication and final link, also included via the baseof.html layout.</li>
</ul>
And now, some experiments.
<ul>
 	<li>Making changes in the /themes/blank/static/style.css file does reflect on the page, but does require a rebuild.</li>
 	<li>Let's see about overriding some of the theme files using our own. If I make a /layouts/partials/header.html file, copy and paste the header.html file's contents into it and make changes... we have changes! Similarly with the _default/baseof.html file.</li>
</ul>
<a href="https://jeff.glass/wp-content/uploads/2021/11/separate.png"><img class="aligncenter size-full wp-image-3939" src="https://jeff.glass/wp-content/uploads/2021/11/separate.png" alt="" width="342" height="270" /></a>
<ul>
 	<li>It looks like the "blank" template I installed is including the header, main, and footer blocks within the "baseof" file. Which I might or might-not want - the individual project pages (and blog pages, if I ever port those over) probably want a different header. So I may want to move those includes over to different templates.</li>
</ul>

<hr />

So, the process from here looks like taking the rough layout I built with tailwind, and breaking some of its components apart into blocks to fit better within the Hugo mentality. For now, I'm doing to just manually copy my css built with Tailwind into the proper place (build/css) and then work on integrating Hugo and Tailwind later on

First, I'll make it so baseof.html only really includes some basic metaconent, a reference to the CSS file, and an include to the {{ main }} block on a given page. Then I'll slim down the index.html file some as well by commenting out the pagination... and then blow it up again by copying everything from my &lt;body&gt; tag in my current version of the site over. After figuring out that the Tailwind-built CSS should go into static/css.style.css, it's mostly kinda working! Well, the images in the project cards are broken, but that's not surprising. Let's see if I can figure out where those should go.

Huh! So just copying my existing /images folder into /static/images worked! So the html tag with src="./images/workshop.jpg" is referencing the image at /static/images/workshop.jpg. Good to know. I imagine there's a way to dynamically work with file names - as in, for a project file, load the image from such-and-such folder with the same name? I'll get to that later.

<a href="https://jeff.glass/wp-content/uploads/2021/11/imageswork.png"><img class="aligncenter size-full wp-image-3942" src="https://jeff.glass/wp-content/uploads/2021/11/imageswork.png" alt="" width="524" height="399" /></a>

Let's see about breaking the header out into it's own partial. I think this may be the only page that uses this header, but it still seems like a good process to learn. I also see that Hugo has a "Menus" functionality... perhaps also good to look into at some point. But for now, I'll add {{ partial "header.html }} to the very top of my index.html file, just inside the {{ define "main }} tag. Then I'll copy my "Green Navbar" html code over from my Index.html file, and seeing that it works, removing it from Index.html....

And hey! Everything looks the same! So the header is now broken out into its own partial file, ready for re-use if I want to - neat! I'll do the same for the footer in the footer.html partial.

Let's see about how we would use Hugo to make the management of our Projects easier. The ideal setup would allow:
<ul>
 	<li>Writing up a project page in markup or html for each project</li>
 	<li>Having each project page have consistent formatting via a common template</li>
 	<li>Having each project page contain the data necessary to generate a card on the index.html page</li>
 	<li>Have a pretty list page containing all the projects, generated automatically from the project pages. Possibly categorized?</li>
</ul>
I'm not quite sure how to proceed... so let's mess around!

If I make an empty loradmx.md file in a new content/projects folder, and look at the sitemap.xml, I can see two new pages have been generated: /projects/ and /projects/loradmx. They are... very barebones at the moment, but at least they appear. I hear the right way to do this is to use hugo new, so let's see what that creates:

<a href="https://jeff.glass/wp-content/uploads/2021/11/hugonew.png"><img class="aligncenter size-full wp-image-3946" src="https://jeff.glass/wp-content/uploads/2021/11/hugonew.png" alt="" width="396" height="181" /></a>

Just a little bit of what Hugo calls "Frontmatter" - metadata about the content in question. I'm thinking this is where I can stash the slug text for the cards that appear on the homepage and the projects page. Rebuilding the page with this frontmatter causes it to disappear from the default hugo server build, unless draft is set to false or I run <strong>npx hugo serve -D.</strong>

<a href="https://jeff.glass/wp-content/uploads/2021/11/barebones.png"><img class="aligncenter size-full wp-image-3944" src="https://jeff.glass/wp-content/uploads/2021/11/barebones.png" alt="" width="217" height="205" /></a>

Let's try figuring out how these pages are being generated by adding our footer to them. As a place to start, at least.

It seems the content in /projects/loradmx is currently based on the theme/layouts/_defaults/single.html file. So, like before, I'll make a copy of it in my own layouts/_defaults folder. Similarly, I'll copy /layouts/_defaults/list.html. By making small changes to those files, I can confirm that the template files are indeed taking effect.

So now what? Well, let's start by adding our header and footer templates to both pages. I'll probably want to change this around some later, but it's an alright place to start.

And now is the post where I'd really like to have the ability to work with Tailwind inside this project, so as I'm making changes to styling these pages with Tailwind I can see the results live on the Hugo pages. Following the post from Praveen Juge, I'll run

<code class="language-sh" data-lang="sh">npm install tailwindcss@latest postcss@latest postcss-cli@latest autoprefixer@latest --save</code>

To install the requisite Tailwind packages in via npm. I'll use npx tailwind init -p to create the basic tailwind.config.js and postcss.config.js files, then copy the varients over from my other working project. Finally, again as suggested by Praveen, I'll set my purge settings to
<div>

content: ["./layouts/**/*.html", "./content/**/*.md", "./content/**/*.html"],

So that all the relevent css is captured.

<em>Sometime later after much poking around...</em>

So, here's how you integrate Tailwind CSS into the Hugo build process after the above. Any relevant tailwind-style CSS wants to go in your <a href="https://gohugo.io/getting-started/configuration/">/assets folder</a>, which is where Hugo looks for resources involved in <a href="https://gohugo.io/hugo-pipes/">Hugo Pipes</a>, which may be transformed upon rebuild. The above commands take care of installing the necessary dependencies. Then, in wherever you reference your CSS file (in my case, in baseof.html), use:
<div>
<div>    {{ $css := resources.Get "css/style.css" }}</div>
<div>    {{ $style := $css | resources.PostCSS }}</div>
<div>    &lt;link rel ="stylesheet" type="text/css" href="{{ $style.RelPermalink }}"&gt;</div>
</div>
</div>
<div></div>
To dynamically link to your generated CSS. Now you can write all the tailwind code you want and, so long as you're not working with custom classes in your css, it will all just work. There seems to be an outstanding issue working with Tailwind JIT compilation in Hugo, so I'm not going to attempt that now.

Now that the projects page is rendering ok, I'll see about how to apply formatting to it. Looking at the <a href="https://gohugo.io/templates/pagination/">Paginator documentation</a> is a bit confusing, so let's dig around a bit. The list template I pulled out of the blank theme has the following:
<div>
<div>            {{ range .Paginator.Pages }}</div>
<div>                {{ .Render "summary" }}</div>
<div>            {{ end }}</div>
</div>
<div></div>
Which I take to mean - using the built-in Pagination function, get all the pages (assumedly only the projects pages?), then render them using the <a href="https://gohugo.io/templates/views">alternative view</a> "summary" (which is in /layouts/_default/summary.html). Making a copy of that them file in my /layouts folder, I can see that that is indeed the case. Creating a few more project files use <strong>npx hugo new project/gooddog.md </strong>(for example), all of the new project pages show up in the paginator, which is good. And now I can go through formatting the summary.html file to apply formatting to all of the listed projects!

<a href="https://jeff.glass/wp-content/uploads/2021/11/summaries.png"><img class="aligncenter size-full wp-image-3954" src="https://jeff.glass/wp-content/uploads/2021/11/summaries.png" alt="" width="536" height="514" /></a>

One curious thing is that Hugo is doing its own truncation of longer bits of Lorem Ipsum and adding a "read more" link. Presumably that's what this structure does:
<div>
<div>        {{ .Summary }}</div>
<div>        {{ if .Truncated }}</div>
<div>            &lt;a href="{{ .Permalink }}"&gt;Read more...&lt;/a&gt;</div>
<div>        {{ end }}</div>
</div>
So let's learn more about that. It seems that the<a href="https://gohugo.io/content-management/summaries/"> page .Summary functionality</a> is one of Hugo's <a href="https://gohugo.io/variables/page/">built in page variables</a>. It seems Hugo will default to using the first 70 words of a piece of content as a summary (or another value, if specified in the configuration). Or, one can override this with a custom summary in Frontmatter. OR, one can override THAT with a &lt;!--more--&gt; tag in the content to specify where the content should be split. Let's try out that second option on the Demilight page. By adding a summary key to the frontmatter of demilight.md, we can override the generated page summary so it shows up more cleanly.

<a href="https://jeff.glass/wp-content/uploads/2021/11/Custom-Summary.png"><img class="aligncenter size-full wp-image-3956" src="https://jeff.glass/wp-content/uploads/2021/11/Custom-Summary.png" alt="" width="386" height="206" /></a>

<a href="https://discourse.gohugo.io/t/how-to-display-a-custome-page-variable/1557">A post from the Hugo forums</a> suggests that it's possible to use one's own custom keys in the frontmatter as well. So, by adding the slug key to some frontmatter in a couple of the content files, and rewriting the summary section like so:
<div>
<div>    &lt;div&gt;</div>
<div>        {{ if .Slug}}</div>
<div>            {{ .Slug }}</div>
<div>        {{ else }}</div>
<div>            {{ .Summary }}</div>
<div>            {{ if .Truncated }}</div>
<div>                &lt;a href="{{ .Permalink }}"&gt;Read more...&lt;/a&gt;</div>
<div>            {{ end }}</div>
<div>        {{ end }}</div>
<div>    &lt;/div&gt;</div>
</div>
It's possible to have the list page display the hand-written slug if one was provided, or the generated summary if one wasn't! Neat!

(We can also point the "more projects" card on the homepage to "/project" to link it to this generated page.

Now to associate an image with each of these individual project cards, we can do something like:
<div>
<div> {{ $img := resources.Get "images/goodogs.jpg" }}</div>
<div>&lt;img src="{{ $img.RelPermalink }}" alt="" class="col-span-1"&gt;</div>
</div>
Which makes the LoraDmx image associated with each and every card. Which is effective, but not exactly communicative. To improve this, we can use an additional front matter parameter called "slug_image" which specifies an image file path like "images/loradmx.jpg".

HOLD THE PHONE. After another much fiddling around, I realize I made a silly error in the previous sentence. Did you spot it? Using a path like "images/loradmx.jpg" means the browser will look for the resource <em>relative to our current page</em>. If we want to look in the images directory, we should specify the image as <strong>/</strong>images/loradmx.jpg (note the leading slash). Oof. 25 minutes gone on that one. I found <a href="https://www.markusantonwolf.com/blog/guide-for-different-ways-to-access-your-image-resources/">this post on how to access your image resources in Hugo</a> very helpful.

<hr />

Now that we have a barebones project list page, it would probably be nice to format some actual project pages, yeah? Currently they're just using the default single.html template, which isn't terribly attractive. Let's create a new layout for project pages specifically, which should go in (according to the <a href="https://gohugo.io/templates/lookup-order/">template lookup order page</a>) /layouts/project/single.html

After much fiddling with Tailwind, something like a decent layout starts to emerge. I also added an additional piece of project content in HTML, just to verify that yes, indeed, that's possible.
<div></div>
fghfghfghg]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3917</wp:post_id>
		<wp:post_date><![CDATA[2021-11-02 15:01:47]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-02 15:01:47]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-02 20:01:47]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Refactoring the Site]]></title>
		<link>https://jeff.glass/?p=3962</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3962</guid>
		<description></description>
		<content:encoded><![CDATA[At this point, I transitioned between a couple of different computers; in fact, I'm likely to be bouncing back and forth between two and even 3 computers over the course of this project. Thankfully, git, Github, and npm have my back here. When I sat down at a new computer tonight (with VS Code and my plugins already installed), I used git to clone my remote repo to my local machine. Then <strong>npm install </strong>brings down all my necessary node modules. A quick <strong>npx hugo </strong>(<em>well, after making sure my file path had no spaces - a known error in POSTCSS) (and updating node to v 17.0.1 using npx) </em>and we have our site rebuilt on a new machine. Well, almost:

<a href="https://jeff.glass/wp-content/uploads/2021/11/oneimage.png"><img class="aligncenter size-full wp-image-3964" src="https://jeff.glass/wp-content/uploads/2021/11/oneimage.png" alt="" width="541" height="463" /></a>

Weirdly, only one of three project images appears on the main page. And the same "gooddogs.jpg" image is the only one that appears on the projects list-page. Curious... The gooddogs image is the one I'm currently using as a placeholder if the project content file doesn't specify a slug_image. If I change that standin, the standin images do appear in the projects page... and now two images appear on the main page! After using each image one-by-one as the standin slug_image, now all the images are appearing correctly... which implies to me that the images are not actually being correctly generated by Hugo, but instead are being cached between builds, leading to the appearance of correct behavior. Indeed, if I delete the public and resources folders are restart the server, we see a very similar issue with the image currently being used as the project standin:

<a href="https://jeff.glass/wp-content/uploads/2021/11/newimage.png"><img class="aligncenter size-full wp-image-3965" src="https://jeff.glass/wp-content/uploads/2021/11/newimage.png" alt="" width="423" height="373" /></a>

Ah, I see <a href="https://gohugo.io/hugo-pipes/introduction/">here in the documentation that</a> "assets will only be published if .Permalink or .RelPermalink is used." Which explains why I was only seeing the placeholder image - it was the only one reference via permalink in the summary.html renderer. Changing that image reference code to the following:
<div>
<div> {{ if isset .Params "slug_image" }}</div>
<div>        {{ $img := resources.Get .Params.slug_image }}</div>
<div>        &lt;img src="{{ $img.RelPermalink }}" alt="" class="...</div>
</div>
Worked, since all the images are reference via Permalink.

To help make things less confusing, I'm going to change the "image not found" image to something that's not an image I'm already using for something elsewhere - a nice SVG of a flash borrowed again from Heroicons.

<a href="https://jeff.glass/wp-content/uploads/2021/11/flask.png"><img class="aligncenter size-full wp-image-3966" src="https://jeff.glass/wp-content/uploads/2021/11/flask.png" alt="" width="369" height="163" /></a>

To accomplish this, I added the SVG to a new /static/svg folder, then used a simple <span style="color: initial;">&lt;img src="/svg/notfound.svg" .... tag (with proper tailwind formatting) to use it as the slug_image not present option.</span>

<hr />

Ok, but actually on to refactoring the page now. I realize that what I've been creating is something between a resume page and a new actual homepage for my website, leaving it somewhat in limbo between the two. It's a bit odd to have job-history on the front page of a personal site, for example, but it should absolutely be on a resume page. So I'll create a new page that's strictly resume oriented, and refactor the index.html page into being a proper homepage.

So, I'll create a new file in my content called "/resume/resume.md", as well as a new file in my layouts folder called resume.html.html... except I can tell by poking at the content of these two files that resume.md is being used as the content within the default single.html template. So let's try this another way around - I'll create a /layouts/resume/_index.md file with frontmatter for my new resume page, and a layouts/resume/list.html file. That way, the {{site}}/resume URL points to the "list page for resumes"... which will just be my resume page. It seems like perhaps there'd be a better way to do this, but this certainly works.

<a href="https://jeff.glass/wp-content/uploads/2021/11/resumepage.png"><img class="aligncenter size-full wp-image-3970" src="https://jeff.glass/wp-content/uploads/2021/11/resumepage.png" alt="" width="283" height="343" /></a>

I'll move the job history and skills list over from the main page to the resume page, and reformat the header to just link to the resume page. Since that header is included as a partial, it'll update <em>everywhere at once</em>. Oh and what the heck, I'll add a link to my twitter as well

<a href="https://jeff.glass/wp-content/uploads/2021/11/fullnavbar.png"><img class="aligncenter size-full wp-image-3973" src="https://jeff.glass/wp-content/uploads/2021/11/fullnavbar.png" alt="" width="921" height="57" /></a>

Well that took about two minutes, most of which was finding the Twitter logo SVG on Ionicons. Awesome!

<hr />

Much more tinkering occurred here, including a joyous crowdsourcing session to name the selection of small projects.

<a href="https://jeff.glass/wp-content/uploads/2021/11/crowdsource.png"><img class="aligncenter size-full wp-image-3975" src="https://jeff.glass/wp-content/uploads/2021/11/crowdsource.png" alt="" width="625" height="171" /></a>

I learned some (but not all) about {{ range }} operator used to list pages, and that the summary layout can be distinct to each type of content (as well as having a default or fallback format, which is handy). So I created a small summary format for small projects, and embedded a few sample ones on the homepage. By using the {{ .RelPermalink }} template, each card on the homepage links to the appropriate piece of content.

lksdf]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3962</wp:post_id>
		<wp:post_date><![CDATA[2021-11-03 07:41:35]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-03 07:41:35]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-03 12:41:35]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Javascript Beginnings]]></title>
		<link>https://jeff.glass/?p=3978</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3978</guid>
		<description></description>
		<content:encoded><![CDATA[<p>I've written very little Javascript up to this point, but now I've found a use case for some. The One-Off project cards I've added to the homepage would be improved by a filtering system. Let's say by default the page shows the last 10 added One-Offs, but there are some buttons the user can flick to filter the cards by specific categories (tags?). Maybe Radio, Theatrical, Electronics, etc. Not sure if this list will be hard-coded or auto-generated - hard coded to start, for sure, and then we can look into generation.</p>
<p>Since this is going to be a hardcoded example to start, I'll embed a script tag right inside my Index.html template for now. I'm also going to take the "first 5" limiter out of the range function that displays the cards - I'll want all the cards to load (probably), then constrain which ones are actually visible with Javascript.</p>
<p>Alright, well let's see about getting a little JQuery going. I'll add</p>
<p><span class="tagnamecolor"><span class="tagcolor">&lt;</span>script<span class="attributecolor"> src<span class="attributevaluecolor">="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"</span></span><span class="tagcolor">&gt;</span></span><span class="tagnamecolor"><span class="tagcolor">&lt;</span>/script<span class="tagcolor">&gt;</span></span></p>
<p>To the head tag in my baseof.html template to include it. Then, in my index template, I'll use a little script tag:</p>
<div>
<div>    &lt;script&gt;</div>
<div>        $(document).ready(function() {</div>
<div>            console.log("Hello, world");</div>
<div>        })</div>
<div>    &lt;/script&gt;</div>
</div>
<div> </div>
<div>And voila, a console log:</div>
<div><img class="size-full wp-image-3980 aligncenter" src="https://jeff.glass/wp-content/uploads/2021/11/hellolog.png" alt="" width="234" height="162" /></div>
<p>Let's see about finding all the cards on the page. <a href="https://stackoverflow.com/questions/55521589/how-to-filter-bootstrap-cards-based-on-search-box">This Stack Overflow answer</a> suggests doing something like this with data-roles, which seem like an easy way of grabbing DOM elements. And since I'm generating an article per one-off, I can add the data-role="small-card" param to each card by adding it to the summary.html template for the one-offs. I think. Let's try something like:</p>
<div>
<div>        $(document).ready(function() {</div>
<div>            console.log($('article[data-role="small-card"]'));</div>
<div>        })</div>
</div>
<div> </div>
<div>And indeed I can see we've selected 7 articles, corresponding to the 7 One-Offs generated on the page.</div>
<div><img class="size-full wp-image-3981 aligncenter" src="https://jeff.glass/wp-content/uploads/2021/11/articlesJquery.png" alt="" width="240" height="292" /></div>
<p>With the help of the <a href="https://api.jquery.com/">JQuery Documentation</a> and the <a href="https://www.w3schools.com/jquERy/default.asp">W3 Schools JQuery reference</a>, I can use a JQuery selector to grab, for example, all the articles whose content contains the word "Meter" (since I happen to have two of them) and hide them like so:</p>
<p><img class="aligncenter wp-image-3982 size-full" src="https://jeff.glass/wp-content/uploads/2021/11/hide.png" alt="" width="559" height="156" /></p>
<p>And, it hides those two cards! Progress! (<em>Although I note that the list page "Smalls" is also included in there...</em>)</p>
<p><img class="size-medium wp-image-3986 aligncenter" src="https://jeff.glass/wp-content/uploads/2021/11/5cards-300x217.png" alt="" width="300" height="217" /></p>
<p>So, now we need some buttons that dynamically do the same thing based on... something. So let's start by adding an "All" button that makes everything visible. I'll throw a couple of addition buttons next to it for now, just for formatting's sake</p>
<p><img class="aligncenter size-full wp-image-3987" src="https://jeff.glass/wp-content/uploads/2021/11/demobuttons.png" alt="" width="359" height="229" /></p>
<p>So, let's get that All button to do a thing. I started by creating a couple of hard-coded classes that would do the filtering I wanted - one specifically for the "All" button (show everything) and one that would contain only the cards that contained the word "Meter". </p>
<p><img class="aligncenter size-full wp-image-3992" src="https://jeff.glass/wp-content/uploads/2021/11/functions.png" alt="" width="685" height="281" /></p>
<p>Then I refactored that code into a single function that looks at the ID of when the button was clicked, and filters the one-off cards based on that:</p>
<p><img class="aligncenter wp-image-3989" src="https://jeff.glass/wp-content/uploads/2021/11/filter-gifs.gif" alt="" width="400" height="299" /></p>
<p>(<em>This is also the point when I discovered <a href="http://blog.bahraniapps.com/gifcam/">GifCam</a> - to enable Gif representations of my progress as things get more interactive.)</em></p>
<p>So now... how to dynamically generate this list of tags?</p>
<p>Let's start with some light theft. <a href="https://discourse.gohugo.io/t/list-all-tags-categories/17765/2">This post from the Hugo discord</a> has a solution for just generating a list of all the tags with their number of tagged items.</p>
<p><img class="size-full wp-image-3994 aligncenter" src="https://jeff.glass/wp-content/uploads/2021/11/taglistcode.png" alt="" width="901" height="189" /><img class="size-full wp-image-3993 aligncenter" src="https://jeff.glass/wp-content/uploads/2021/11/taglistresult.png" alt="" width="143" height="133" /></p>
<p>So, how to turn this into buttons? Well, first I can take out the parts that use the Count variable (though maybe I'll want to add that back in later). And we'll turn that href into a button and remove the div, like so:</p>
<div>
<div>
<div><img class="aligncenter size-full wp-image-3995" src="https://jeff.glass/wp-content/uploads/2021/11/buttonautos.png" alt="" width="1145" height="97" /></div>
</div>
</div>
<p>And that generates the buttons, at least.</p>
<p><img class="aligncenter size-full wp-image-3996" src="https://jeff.glass/wp-content/uploads/2021/11/tagbuttons.png" alt="" width="563" height="69" /></p>
<p>And because our earlier script applies to any button on the page, it's already filtering on the cards based on these tags! Sadly, the cards don't have that tag information yet, so all of those buttons blow away all the cards. But I'll bet we can fix that by editing the summary.html renderer for those cards. </p>
<p>After a bit of trouble because Hugo (Go?) templating interprets single-quotes as instructions to translate characters into their Ascii (Unicode?) equivalents, and some funking around with<a href="https://stackoverflow.com/questions/4547363/jquery-filter-by-an-attribute-value"> how the Jquery interacts</a> with the (invented) data-tags attribute, and the <a href="https://stackoverflow.com/questions/1318076/jquery-hasattr-checking-to-see-if-there-is-an-attribute-on-an-element">unfortunate behavior of the .attr() function</a> to return undefined if the block doesn't have that attribute, I came up with:</p>
<p><img class="aligncenter size-full wp-image-3999" src="https://jeff.glass/wp-content/uploads/2021/11/autoButtons.png" alt="" width="957" height="109" /></p>
<p><img class="aligncenter size-full wp-image-4000" src="https://jeff.glass/wp-content/uploads/2021/11/buttonClick.png" alt="" width="735" height="387" /></p>
<p>This does mean that all the tags I use in my frontmatter have to have the same cannonical form as Hugo's tag pages, ie all lowercase, no spaces (hyphens ok). But that's fine for now, I can figure out how to style the text later.</p>
<p><img class="aligncenter size-full wp-image-4002" src="https://jeff.glass/wp-content/uploads/2021/11/filteringauto.gif" alt="" width="1130" height="337" /></p>
<p>Interestingly, the "Smalls" list page is included in all of the current filters, which isn't desirable. But I can fix this by just not rendering that card in the first place, by wrapping the  {{ .Render "summary" }} statement that actually renders the small cards in a <a href="https://gohugo.io/variables/page/#page-variables">{{ if .IsPage }}</a>.</p>
<p>There's still some slightly funky things happening with the spacing of the small cards, but I'll figure that out at some point. </p>
<p>asdsadsa</p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3978</wp:post_id>
		<wp:post_date><![CDATA[2021-11-04 07:32:00]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-04 07:32:00]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-04 12:32:00]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Turtlerover Programming]]></title>
		<link>https://jeff.glass/?p=3984</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=3984</guid>
		<description></description>
		<content:encoded><![CDATA[Clone Github repo to local environment

Run Yarn Install and Yarn Build (and NPM install if necessary)]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>3984</wp:post_id>
		<wp:post_date><![CDATA[2021-11-03 10:04:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-03 10:04:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-03 15:04:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Page Bundles and Image Processing]]></title>
		<link>https://jeff.glass/?p=4008</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=4008</guid>
		<description></description>
		<content:encoded><![CDATA[<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->

<p>As I figure out my workflow for creating pages, especially the "One Offs", I want to keep things as simple and straightforward as can be for adding new content. The intention of the One Offs is a place to memorialize small, interesting things - things that shouldn't disappear into twitter, but aren't a full project writeup. To that end, I'd like to have some standard formatting for all of their individual pages that makes it simple to add a new piece of content. So let's work on the /layouts/small/single.html layout.</p>
<p>It turns out that there is no style being applied to external links currently, which is something I imagine I might want. So I'll add a css rule for &lt;a&gt; tags... and then add an ID to the label "Jeff Glass" in the header so it doesn't also get styled, and use a:not(#header-name) to prevent it from getting snagged by this new rule.</p>
<p>To make things a little easier at this point, I'll add the postcss-nesting module following <a href="https://tailwindcss.com/docs/using-with-preprocessors">the steps in the Tailwind docs</a>. This did require refactoring my postcss.config.js file to use a list of require() statements instead of a map, as illustrated <a href="https://tailwindcss.com/docs/using-with-preprocessors">in the Tailwind Docs</a>:</p>
<div>
<div>/* Old version</div>
<div>module.exports = {</div>
<div>  plugins: {</div>
<div>    tailwindcss: {},</div>
<div>    autoprefixer: {},</div>
<div>  },</div>
<div>}*/</div>
</div>
<div> </div>
<div>//New, working version
<p> </p>
<div>module.exports = {</div>
<div>  plugins: [</div>
<div>    require('tailwindcss/nesting'),</div>
<div>    require('tailwindcss'),</div>
<div>    require('autoprefixer'),</div>
<div>  ]</div>
<div>}</div>
</div>
<p>I'm also borrowing <a href="https://davidwalsh.name/external-links-css">a bit of code from David Walsh</a> to automatically style external links with the "external link" symbol... well, I would have except it seems embedded html inside markdown files is a bit cumbersome in Hugo. It seems its markdown renderer, Goldmark, only allows directly adding HTML attributes to <em>header</em> tags via markdown. Thankfully, Ana Ulin came to the rescue with their <a href="https://anaulin.org/blog/hugo-raw-html-shortcode/">Raw HTML Shortcode</a>.... Or rather, that was the plan, but the ::after selector is fiddly in some way I can't understand yet. So for now I'm just a css class called "no-style-link" to exclude links I don't want to be formatted using the :not() operator. I'm moving on.</p>
<p>(Some resources for when I come back to this: <a href="https://stackoverflow.com/questions/45691117/how-can-i-add-a-svg-as-content-on-before-pseudo-element-of-an-element">Stack Overflow</a>, <a href="https://www.geeksforgeeks.org/how-to-use-svg-with-before-or-after-pseudo-element/">Geeks for Geeks</a>, <a href="https://css-tricks.com/gotchas-on-getting-svg-into-production/">css-tricks</a>)</p>
<hr />
<p>It seems like the preferred way to keep image content near site content is through what Hugo calls <a href="https://gohugo.io/content-management/page-bundles/">Page Bundles</a>, where a page is represented by <a href="https://cloudcannon.com/community/learn/hugo-tutorial/page-bundles-and-shortcodes/#practical-work-creating-page-bundles-and-shortcodes">a folder containing the content</a> or <a href="https://www.hackification.io/software-development/hugo/page-bundles/the-basics/">a folder containing an _index.md file if the hierarchy is nested further</a>. It looks like, if I just move my current "small" projects markdown files (Parks.md, meterclock.md) into folders with the same name and rename the files to "index.md", all of the formatting and templating work I've done so far is preserved. Well that's good at least.</p>
<p><img class="aligncenter size-full wp-image-4018" src="https://jeff.glass/wp-content/uploads/2021/11/page-bundles.png" alt="" width="518" height="440" /></p>
<p>Now, I'll chose a small project to work on. How about the Votive Fence Hooks project? I'll just drop a couple of pictures from my phone into the weddinghooks folder. And by using the following range commands, I can get all the images to appear nicely formatted on the page (<a href="https://www.regisphilibert.com/blog/2018/01/hugo-page-resources-and-how-to-use-them/">this write-up was very helpful</a>):</p>
<div>
<div>            &lt;p&gt;{{ .Content }}&lt;/p&gt;</div>
<div>                {{ with .Page.Resources.ByType "image" }}</div>
<div>                &lt;div class="flex flex-wrap pt-4"&gt;</div>
<div>                    {{ range . }}</div>
<div>                        &lt;img src="{{ .RelPermalink }}" class="flex my-4 mr-8 max-h-60"&gt;</div>
<div>                    {{ end }}</div>
<div>                &lt;/div&gt;</div>
<div>                {{ end }}</div>
</div>
<div> </div>
<p>I then rebuilt and pushed my site to Github and... something I've done has broken the formatting/sorting of the small cards on the frontpage, and the auto-generating of the tags. Basically all my work from the previous post. Which is frustrating, but my generation code is still there. So something I've done recently has broken that functionality. I wonder if it was moving the content into Page Bundles?</p>
<p>Interestingly, the code still works when I serve locally with hugo... Oh, I must not have rebuilt with the -D flag on. That's better. Gotta remember that.</p>
<hr />
<p>So now onto image display. Currently, I'm loading the whole, large image to the end user, then using CSS to scale it down, when what I'd like to do is have the image be rescaled at build-time and served at that size. It seems that, once again, Hugo Pipes are the answer, but sadly, there doesn't seem to be a way to intregrate pipes functionality with page bundling. There's a <a href="https://hugo-mini-course.netlify.app/sections/optimizing/images/">Hugo Mini-Course on image processing</a> that seems the right track for that, but again, it specifies the images must be in the /assets folder.</p>
<p>Instead, let's look at <a href="https://christianspecht.de/2020/08/10/creating-an-image-gallery-with-hugo-and-lightbox2/">Christian Sprecht's post on integrating Lightbox with Hugo</a>. And the lightbox documentation makes it seem like a simple-enough process. <del><em>I'll start by installing lightbox via npm using npm install lightbox2 --save-dev. Then I'll add the requisite references to the lightbox.css and lightbox.js files inside of my baseof.html template, so it's present on every page.</em></del></p>
<p>In actuality, it turns out to be easier to reference this CSS and JS from CDN's. Then, in my /layouts/small/single.html template, I'll transform the range code to the following:</p>
<div>
<pre>{{ if gt (len (.Page.Resources.ByType "image")) 0 }}    <br />    &lt;h2 class="pt-6 text-xl"&gt;Images&lt;/h2&gt;<br />    {{ with .Page.Resources.ByType "image" }}<br />    &lt;div class="flex flex-wrap pt-4"&gt;<br />        {{ range . }}<br />            &lt;a href="{{ .RelPermalink }}" data-lightbox="image-set"&gt;&lt;img src="{{ .RelPermalink }}" class="flex mb-4 mr-8 max-h-60"&gt;&lt;/a&gt;<br />        {{ end }}<br />    &lt;/div&gt;<br />    {{ end }}<br />{{ end}}</pre>
</div>
<p>This ensures that the h2 "Images" header only appears if there are actually images to display, and turns all the loaded images into Lightbox links. The links all get their data-lightbox attribute set to the same thing (in this case "image-set", but it could be anything) so that the lightbox gallery that pops up is scrollable directly between pictures.</p>
<p><img class="aligncenter wp-image-4021" src="https://jeff.glass/wp-content/uploads/2021/11/lightbox.gif" alt="" width="600" height="597" /></p>
<p>Well that wasn't too hard! Now any images that live inside a small-project folder will be automatically added to a lightbox. Neato!</p>
<p>During some cleanup, I encounted an odd issue with how the slug images were appearing/being found on the main page. This Stack Overflow post cleared up <a href="https://stackoverflow.com/questions/34247337/object-fit-not-affecting-images/34247563">some things about how object-cover works</a>, and I found some guidance on <a href="https://www.markusantonwolf.com/blog/guide-for-different-ways-to-access-your-image-resources/">how to reference images in the same folder as content</a>. During this modification, I accidently screwed up the default summary.html template (I editted it instead of the summary.html template for the 'small' taxonomy), but I found a <a href="https://stackoverflow.com/questions/338436/how-can-i-view-an-old-version-of-a-file-with-git">Stack Overflow post on using git to view past versions of files</a>, which helped me find the previous syntax and restore things. Since I figured the issue was in a single line, I didn't do anything fancy like a <a href="https://www.metaltoad.com/blog/beginners-guide-git-bisect-process-elimination">git bisect</a>, but that's a tool in the pocket for the future.</p>
<p>aslkhad</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4008</wp:post_id>
		<wp:post_date><![CDATA[2021-11-05 11:16:42]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-05 11:16:42]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-05 16:16:42]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Refactoring]]></title>
		<link>https://jeff.glass/?p=4026</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=4026</guid>
		<description></description>
		<content:encoded><![CDATA[At this point, I feel I have the theming and functionality of hugo pretty well in hand. So I'll delete the "Blank" theme that I started with, remove references to it from Config.toml and .gitmodules, and see what breaks. Looks like it's just the "pagination" partial, which I'm using to drive the list page layouts. I'll just copy the pagination.html partial back in from the blank theme and... we're now theme-free! It's all natural jeffcode at this point.

I'll also add a favicon to the site to it shows up nicely in the user's browser tabs. Tutsplus has a nice <a href="https://www.creativebloq.com/illustrator/create-perfect-favicon-12112760">tutorial on creating favicons in Affinity Designer</a>; combined with <a href="https://favicon.io/favicon-converter/">facivon.io</a>, the process of creating a basic favicon was very quick. Then adding a quick
<p class="lang-html s-code-block"><code class="hljs language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">link</span> <span class="hljs-attr">rel</span>=<span class="hljs-string">"icon"</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/favicon.ico?v=2"</span>&gt;</span> </code>

to the baseof.html template forces the cached favicon to be refreshed on page load.</p>]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4026</wp:post_id>
		<wp:post_date><![CDATA[2021-11-18 09:28:54]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-18 09:28:54]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-18 15:28:54]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
					<item>
		<title><![CDATA[Cloud Resume Challenge - Porting Wordpress Blogs to Hugo]]></title>
		<link>https://jeff.glass/?p=4030</link>
		<pubDate></pubDate>
		<dc:creator><![CDATA[JGlass]]></dc:creator>
		<guid isPermaLink="false">https://jeff.glass/?p=4030</guid>
		<description></description>
		<content:encoded><![CDATA[<p>As the site gains more and more content, it seems like it's only a matter of time before I port my previous blog(s) over to the Hugo framework that I'm enjoying so much. This would include at least the current Wordpress blog hosted at Jeff.Glass, as well as potentially importing old posts from my ham radio blog, kk9jef.wordpress.com.</p>
<p>The Hugo documentation has <a href="https://gohugo.io/tools/migrations/">some information on exporting from Wordpress to Hugo</a>. The first listed option, wordpress-to-hugo-exporter, didn't work well - it returned an error code 500 timeout after about 5 minutes of trying to export. And the second option, exitwp-for-hugo wasn't working, since it relies on Python 2 and some of its dependencies (notably) html2text no longer support Python 2. So I'm pursuing an alternative, using the Wordpress-to-Jekyll exporter and converting to Hugo from there... but that too is 500-erroring. So... let's do this the hard way and parse the XML file?</p>
<p>Using python and the elementTree library, this isn't too bad? It think the most painful part will be porting the images over, since those will have to move from the Wordpress media library to Hugo's page bundles... but the actual parsing of the XML isn't too bad. Here's the script I hacked together, which finds all the post-objects in XML, pulls out their title and content and draft status and tags, and exports them with some basic frontmatter:</p>
<p>https://gist.github.com/JeffersGlass/8b02a6fab79d4418f101fd973e21bd5c</p>
<p>Let me be clear, this is a pretty hacky thing. But thankfully, this is just a timesaver to do some pre-processing that I should only have to do once. So if it's a bit of a hack and it works.... it works. It also separates the posts previously marked as "draft" into their own folder, while marking all posts as "draft: true" for the purposes of Hugo, so that I can vet each post before I mark it to go live, while preserving the old, draft, never-published posts. (Which at the time of writing includes these very words.) I also realized I could make my life easier my only exporting the actually live posts instead of all the content in a single XML file.</p>
<p>I later modified this script to add some tags by default to paragraph, image, and list elements, then styled those tags using tailwind to create some basic formatting. I used BeautifulSoup4 to grab the appropriate tags and modify/add to their classes. The full script is below:</p>
<p>https://gist.github.com/JeffersGlass/c9e89c313081b88574ebb759d7e3e72e</p>
<p>Once this was done, and some minor title-formatting was adjusted (removing extraneous punctuation and other things that might cause URL issues), I imported all of the post folders into my content/post folder. And voila, a blog is born.</p>
<p><img class="aligncenter size-full wp-image-4040" src="https://jeff.glass/wp-content/uploads/2021/11/firstpos.png" alt="" width="739" height="689" /></p>
<p>Not a very pretty blog yet, mind, but I don't think there's a way around doing much of the correction by hand.</p>
<p>I did use some VS-code search-and-replace-with-regexes to adjust how captions were being handled. In particular, I used:</p>
<p>search: &lt;figcaption&gt;(.*)&lt;\/figcaption&gt;&lt;\/figure&gt;</p>
<p>replace with: &lt;/figure&gt;&lt;p class="post-img-caption"&gt;$1&lt;/p&gt;</p>
<p>To move the image caption into a new paragraph outside of the figure, and then used CSS to center/style it.</p>
<p>Similarly, I used some regex to move the contents of another style of captions into their own paragraph.</p>
<p>search: \/&gt;(.*?\[\/caption\])&lt;\/p&gt;</p>
<p>replace with: &lt;\/p&gt;&lt;p class="post-img-caption"&gt;$1&lt;/p&gt;</p>
<p>I also learned some new useful keyboard shortcuts in VS Code. Namely, Cntl-K Cntl-F to auto-format a section of text, which helps break up spacing and tabbing on nested tables/divs.</p>
<hr />
<p>Overall, the process of converting my 42 existing blog posts to Hugo formatting took roughly 2 hours of manual processing - adjusting tags, changing image format and list layout, using shortcodes for video links, and so on. This first pass does <em>not</em> include the process of moving all the images over from Wordpress to Hugo... which I did as a separate process. The script for is as follows:</p>
<p>https://gist.github.com/JeffersGlass/c08a5784abb0de6e67fdf61028ab4a78</p>
<p>Again, not necessarily a script anyone else would want to use vertbatim, just something I hacked together in half an hour that got the job done.</p>
<p>At this point, it seemed silly to continue editing my drafts of these very posts in wordpress, so I endevoured to port them over to Hugo as well.</p>

<!-- wp:paragraph -->
<p></p>
<!-- /wp:paragraph -->]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>4030</wp:post_id>
		<wp:post_date><![CDATA[2021-11-23 12:36:07]]></wp:post_date>
		<wp:post_date_gmt><![CDATA[0000-00-00 00:00:00]]></wp:post_date_gmt>
		<wp:post_modified><![CDATA[2021-11-23 12:36:07]]></wp:post_modified>
		<wp:post_modified_gmt><![CDATA[2021-11-23 18:36:07]]></wp:post_modified_gmt>
		<wp:comment_status><![CDATA[open]]></wp:comment_status>
		<wp:ping_status><![CDATA[open]]></wp:ping_status>
		<wp:post_name><![CDATA[]]></wp:post_name>
		<wp:status><![CDATA[draft]]></wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type><![CDATA[post]]></wp:post_type>
		<wp:post_password><![CDATA[]]></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
										<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>
						<wp:postmeta>
		<wp:meta_key><![CDATA[vantage_panels_no_legacy]]></wp:meta_key>
		<wp:meta_value><![CDATA[true]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[_edit_last]]></wp:meta_key>
		<wp:meta_value><![CDATA[1]]></wp:meta_value>
		</wp:postmeta>
							<wp:postmeta>
		<wp:meta_key><![CDATA[siteorigin_page_settings]]></wp:meta_key>
		<wp:meta_value><![CDATA[a:6:{s:6:"layout";s:7:"default";s:10:"page_title";b:1;s:15:"masthead_margin";b:1;s:13:"footer_margin";b:1;s:13:"hide_masthead";b:0;s:19:"hide_footer_widgets";b:0;}]]></wp:meta_value>
		</wp:postmeta>
							</item>
				</channel>
</rss>
	